

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Apr 29 17:54:37 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F8722 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   108                           SSP2CON2 equ 0F62h ;# 
   109  0000                     # 199 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   110                           SSP2CON1 equ 0F63h ;# 
   111  0000                     # 319 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   112                           SSP2STAT equ 0F64h ;# 
   113  0000                     # 746 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   114                           SSP2ADD equ 0F65h ;# 
   115  0000                     # 808 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   116                           SSP2BUF equ 0F66h ;# 
   117  0000                     # 815 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   118                           ECCP2DEL equ 0F67h ;# 
   119  0000                     # 935 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   120                           ECCP2AS equ 0F68h ;# 
   121  0000                     # 1067 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   122                           ECCP3DEL equ 0F69h ;# 
   123  0000                     # 1187 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   124                           ECCP3AS equ 0F6Ah ;# 
   125  0000                     # 1319 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   126                           RCSTA2 equ 0F6Bh ;# 
   127  0000                     # 1497 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   128                           TXSTA2 equ 0F6Ch ;# 
   129  0000                     # 1657 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   130                           TXREG2 equ 0F6Dh ;# 
   131  0000                     # 1664 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   132                           RCREG2 equ 0F6Eh ;# 
   133  0000                     # 1671 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   134                           SPBRG2 equ 0F6Fh ;# 
   135  0000                     # 1678 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   136                           CCP5CON equ 0F70h ;# 
   137  0000                     # 1757 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   138                           CCPR5 equ 0F71h ;# 
   139  0000                     # 1764 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   140                           CCPR5L equ 0F71h ;# 
   141  0000                     # 1771 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   142                           CCPR5H equ 0F72h ;# 
   143  0000                     # 1778 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   144                           CCP4CON equ 0F73h ;# 
   145  0000                     # 1857 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   146                           CCPR4 equ 0F74h ;# 
   147  0000                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   148                           CCPR4L equ 0F74h ;# 
   149  0000                     # 1871 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   150                           CCPR4H equ 0F75h ;# 
   151  0000                     # 1878 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   152                           T4CON equ 0F76h ;# 
   153  0000                     # 1949 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   154                           PR4 equ 0F77h ;# 
   155  0000                     # 1956 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   156                           TMR4 equ 0F78h ;# 
   157  0000                     # 1963 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   158                           ECCP1DEL equ 0F79h ;# 
   159  0000                     # 2083 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   160                           BAUDCON2 equ 0F7Ch ;# 
   161  0000                     # 2200 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   162                           SPBRGH2 equ 0F7Dh ;# 
   163  0000                     # 2207 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   164                           BAUDCON1 equ 0F7Eh ;# 
   165  0000                     # 2212 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   166                           BAUDCON equ 0F7Eh ;# 
   167  0000                     # 2216 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   168                           BAUDCTL equ 0F7Eh ;# 
   169  0000                     # 2633 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   170                           SPBRGH1 equ 0F7Fh ;# 
   171  0000                     # 2638 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   172                           SPBRGH equ 0F7Fh ;# 
   173  0000                     # 2645 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   174                           PORTA equ 0F80h ;# 
   175  0000                     # 2791 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   176                           PORTB equ 0F81h ;# 
   177  0000                     # 2945 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   178                           PORTC equ 0F82h ;# 
   179  0000                     # 3197 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   180                           PORTD equ 0F83h ;# 
   181  0000                     # 3416 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   182                           PORTE equ 0F84h ;# 
   183  0000                     # 3758 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   184                           PORTF equ 0F85h ;# 
   185  0000                     # 3923 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   186                           PORTG equ 0F86h ;# 
   187  0000                     # 4082 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   188                           PORTH equ 0F87h ;# 
   189  0000                     # 4275 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   190                           PORTJ equ 0F88h ;# 
   191  0000                     # 4481 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   192                           LATA equ 0F89h ;# 
   193  0000                     # 4593 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   194                           LATB equ 0F8Ah ;# 
   195  0000                     # 4705 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   196                           LATC equ 0F8Bh ;# 
   197  0000                     # 4817 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   198                           LATD equ 0F8Ch ;# 
   199  0000                     # 4929 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   200                           LATE equ 0F8Dh ;# 
   201  0000                     # 5041 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   202                           LATF equ 0F8Eh ;# 
   203  0000                     # 5153 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   204                           LATG equ 0F8Fh ;# 
   205  0000                     # 5235 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   206                           LATH equ 0F90h ;# 
   207  0000                     # 5347 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   208                           LATJ equ 0F91h ;# 
   209  0000                     # 5459 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   210                           TRISA equ 0F92h ;# 
   211  0000                     # 5464 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   212                           DDRA equ 0F92h ;# 
   213  0000                     # 5681 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   214                           TRISB equ 0F93h ;# 
   215  0000                     # 5686 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   216                           DDRB equ 0F93h ;# 
   217  0000                     # 5903 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   218                           TRISC equ 0F94h ;# 
   219  0000                     # 5908 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   220                           DDRC equ 0F94h ;# 
   221  0000                     # 6125 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   222                           TRISD equ 0F95h ;# 
   223  0000                     # 6130 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   224                           DDRD equ 0F95h ;# 
   225  0000                     # 6347 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   226                           TRISE equ 0F96h ;# 
   227  0000                     # 6352 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   228                           DDRE equ 0F96h ;# 
   229  0000                     # 6569 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   230                           TRISF equ 0F97h ;# 
   231  0000                     # 6574 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   232                           DDRF equ 0F97h ;# 
   233  0000                     # 6791 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   234                           TRISG equ 0F98h ;# 
   235  0000                     # 6796 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   236                           DDRG equ 0F98h ;# 
   237  0000                     # 6941 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   238                           TRISH equ 0F99h ;# 
   239  0000                     # 6946 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   240                           DDRH equ 0F99h ;# 
   241  0000                     # 7163 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   242                           TRISJ equ 0F9Ah ;# 
   243  0000                     # 7168 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   244                           DDRJ equ 0F9Ah ;# 
   245  0000                     # 7385 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   246                           OSCTUNE equ 0F9Bh ;# 
   247  0000                     # 7450 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   248                           MEMCON equ 0F9Ch ;# 
   249  0000                     # 7511 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   250                           PIE1 equ 0F9Dh ;# 
   251  0000                     # 7594 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   252                           PIR1 equ 0F9Eh ;# 
   253  0000                     # 7677 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   254                           IPR1 equ 0F9Fh ;# 
   255  0000                     # 7760 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   256                           PIE2 equ 0FA0h ;# 
   257  0000                     # 7832 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   258                           PIR2 equ 0FA1h ;# 
   259  0000                     # 7904 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   260                           IPR2 equ 0FA2h ;# 
   261  0000                     # 7976 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   262                           PIE3 equ 0FA3h ;# 
   263  0000                     # 8086 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   264                           PIR3 equ 0FA4h ;# 
   265  0000                     # 8164 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   266                           IPR3 equ 0FA5h ;# 
   267  0000                     # 8242 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   268                           EECON1 equ 0FA6h ;# 
   269  0000                     # 8308 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   270                           EECON2 equ 0FA7h ;# 
   271  0000                     # 8315 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   272                           EEDATA equ 0FA8h ;# 
   273  0000                     # 8322 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   274                           EEADR equ 0FA9h ;# 
   275  0000                     # 8329 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   276                           EEADRH equ 0FAAh ;# 
   277  0000                     # 8336 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   278                           RCSTA1 equ 0FABh ;# 
   279  0000                     # 8341 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   280                           RCSTA equ 0FABh ;# 
   281  0000                     # 8660 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   282                           TXSTA1 equ 0FACh ;# 
   283  0000                     # 8665 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   284                           TXSTA equ 0FACh ;# 
   285  0000                     # 8948 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   286                           TXREG1 equ 0FADh ;# 
   287  0000                     # 8953 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   288                           TXREG equ 0FADh ;# 
   289  0000                     # 8960 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   290                           RCREG1 equ 0FAEh ;# 
   291  0000                     # 8965 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   292                           RCREG equ 0FAEh ;# 
   293  0000                     # 8972 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   294                           SPBRG1 equ 0FAFh ;# 
   295  0000                     # 8977 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   296                           SPBRG equ 0FAFh ;# 
   297  0000                     # 8984 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   298                           PSPCON equ 0FB0h ;# 
   299  0000                     # 9023 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   300                           T3CON equ 0FB1h ;# 
   301  0000                     # 9144 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   302                           TMR3 equ 0FB2h ;# 
   303  0000                     # 9151 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   304                           TMR3L equ 0FB2h ;# 
   305  0000                     # 9158 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   306                           TMR3H equ 0FB3h ;# 
   307  0000                     # 9165 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   308                           CMCON equ 0FB4h ;# 
   309  0000                     # 9255 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   310                           CVRCON equ 0FB5h ;# 
   311  0000                     # 9334 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   312                           ECCP1AS equ 0FB6h ;# 
   313  0000                     # 9466 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   314                           CCP3CON equ 0FB7h ;# 
   315  0000                     # 9471 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   316                           ECCP3CON equ 0FB7h ;# 
   317  0000                     # 9658 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   318                           CCPR3 equ 0FB8h ;# 
   319  0000                     # 9665 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   320                           CCPR3L equ 0FB8h ;# 
   321  0000                     # 9672 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   322                           CCPR3H equ 0FB9h ;# 
   323  0000                     # 9679 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   324                           CCP2CON equ 0FBAh ;# 
   325  0000                     # 9684 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   326                           ECCP2CON equ 0FBAh ;# 
   327  0000                     # 9871 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   328                           CCPR2 equ 0FBBh ;# 
   329  0000                     # 9878 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   330                           CCPR2L equ 0FBBh ;# 
   331  0000                     # 9885 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   332                           CCPR2H equ 0FBCh ;# 
   333  0000                     # 9892 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   334                           CCP1CON equ 0FBDh ;# 
   335  0000                     # 9897 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   336                           ECCP1CON equ 0FBDh ;# 
   337  0000                     # 10084 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   338                           CCPR1 equ 0FBEh ;# 
   339  0000                     # 10091 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   340                           CCPR1L equ 0FBEh ;# 
   341  0000                     # 10098 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   342                           CCPR1H equ 0FBFh ;# 
   343  0000                     # 10105 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   344                           ADCON2 equ 0FC0h ;# 
   345  0000                     # 10176 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   346                           ADCON1 equ 0FC1h ;# 
   347  0000                     # 10261 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   348                           ADCON0 equ 0FC2h ;# 
   349  0000                     # 10380 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   350                           ADRES equ 0FC3h ;# 
   351  0000                     # 10387 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   352                           ADRESL equ 0FC3h ;# 
   353  0000                     # 10394 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   354                           ADRESH equ 0FC4h ;# 
   355  0000                     # 10401 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   356                           SSP1CON2 equ 0FC5h ;# 
   357  0000                     # 10406 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   358                           SSPCON2 equ 0FC5h ;# 
   359  0000                     # 10755 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   360                           SSP1CON1 equ 0FC6h ;# 
   361  0000                     # 10760 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   362                           SSPCON1 equ 0FC6h ;# 
   363  0000                     # 10993 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   364                           SSP1STAT equ 0FC7h ;# 
   365  0000                     # 10998 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   366                           SSPSTAT equ 0FC7h ;# 
   367  0000                     # 11591 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   368                           SSP1ADD equ 0FC8h ;# 
   369  0000                     # 11596 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   370                           SSPADD equ 0FC8h ;# 
   371  0000                     # 11813 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   372                           SSP1BUF equ 0FC9h ;# 
   373  0000                     # 11818 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   374                           SSPBUF equ 0FC9h ;# 
   375  0000                     # 11825 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   376                           T2CON equ 0FCAh ;# 
   377  0000                     # 11896 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   378                           PR2 equ 0FCBh ;# 
   379  0000                     # 11903 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   380                           TMR2 equ 0FCCh ;# 
   381  0000                     # 11910 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   382                           T1CON equ 0FCDh ;# 
   383  0000                     # 12022 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   384                           TMR1 equ 0FCEh ;# 
   385  0000                     # 12029 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   386                           TMR1L equ 0FCEh ;# 
   387  0000                     # 12036 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   388                           TMR1H equ 0FCFh ;# 
   389  0000                     # 12043 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   390                           RCON equ 0FD0h ;# 
   391  0000                     # 12176 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   392                           WDTCON equ 0FD1h ;# 
   393  0000                     # 12204 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   394                           HLVDCON equ 0FD2h ;# 
   395  0000                     # 12209 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   396                           LVDCON equ 0FD2h ;# 
   397  0000                     # 12476 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   398                           OSCCON equ 0FD3h ;# 
   399  0000                     # 12559 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   400                           T0CON equ 0FD5h ;# 
   401  0000                     # 12635 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   402                           TMR0 equ 0FD6h ;# 
   403  0000                     # 12642 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   404                           TMR0L equ 0FD6h ;# 
   405  0000                     # 12649 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   406                           TMR0H equ 0FD7h ;# 
   407  0000                     # 12656 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   408                           STATUS equ 0FD8h ;# 
   409  0000                     # 12727 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   410                           FSR2 equ 0FD9h ;# 
   411  0000                     # 12734 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   412                           FSR2L equ 0FD9h ;# 
   413  0000                     # 12741 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   414                           FSR2H equ 0FDAh ;# 
   415  0000                     # 12748 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   416                           PLUSW2 equ 0FDBh ;# 
   417  0000                     # 12755 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   418                           PREINC2 equ 0FDCh ;# 
   419  0000                     # 12762 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   420                           POSTDEC2 equ 0FDDh ;# 
   421  0000                     # 12769 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   422                           POSTINC2 equ 0FDEh ;# 
   423  0000                     # 12776 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   424                           INDF2 equ 0FDFh ;# 
   425  0000                     # 12783 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   426                           BSR equ 0FE0h ;# 
   427  0000                     # 12790 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   428                           FSR1 equ 0FE1h ;# 
   429  0000                     # 12797 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   430                           FSR1L equ 0FE1h ;# 
   431  0000                     # 12804 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   432                           FSR1H equ 0FE2h ;# 
   433  0000                     # 12811 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   434                           PLUSW1 equ 0FE3h ;# 
   435  0000                     # 12818 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   436                           PREINC1 equ 0FE4h ;# 
   437  0000                     # 12825 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   438                           POSTDEC1 equ 0FE5h ;# 
   439  0000                     # 12832 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   440                           POSTINC1 equ 0FE6h ;# 
   441  0000                     # 12839 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   442                           INDF1 equ 0FE7h ;# 
   443  0000                     # 12846 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   444                           WREG equ 0FE8h ;# 
   445  0000                     # 12853 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   446                           FSR0 equ 0FE9h ;# 
   447  0000                     # 12860 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   448                           FSR0L equ 0FE9h ;# 
   449  0000                     # 12867 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   450                           FSR0H equ 0FEAh ;# 
   451  0000                     # 12874 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   452                           PLUSW0 equ 0FEBh ;# 
   453  0000                     # 12881 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   454                           PREINC0 equ 0FECh ;# 
   455  0000                     # 12888 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   456                           POSTDEC0 equ 0FEDh ;# 
   457  0000                     # 12895 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   458                           POSTINC0 equ 0FEEh ;# 
   459  0000                     # 12902 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   460                           INDF0 equ 0FEFh ;# 
   461  0000                     # 12909 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   462                           INTCON3 equ 0FF0h ;# 
   463  0000                     # 13021 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   464                           INTCON2 equ 0FF1h ;# 
   465  0000                     # 13114 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   466                           INTCON equ 0FF2h ;# 
   467  0000                     # 13231 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   468                           PROD equ 0FF3h ;# 
   469  0000                     # 13238 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   470                           PRODL equ 0FF3h ;# 
   471  0000                     # 13245 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   472                           PRODH equ 0FF4h ;# 
   473  0000                     # 13252 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   474                           TABLAT equ 0FF5h ;# 
   475  0000                     # 13261 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   476                           TBLPTR equ 0FF6h ;# 
   477  0000                     # 13268 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   478                           TBLPTRL equ 0FF6h ;# 
   479  0000                     # 13275 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   480                           TBLPTRH equ 0FF7h ;# 
   481  0000                     # 13282 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   482                           TBLPTRU equ 0FF8h ;# 
   483  0000                     # 13291 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   484                           PCLAT equ 0FF9h ;# 
   485  0000                     # 13298 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   486                           PC equ 0FF9h ;# 
   487  0000                     # 13305 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   488                           PCL equ 0FF9h ;# 
   489  0000                     # 13312 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   490                           PCLATH equ 0FFAh ;# 
   491  0000                     # 13319 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   492                           PCLATU equ 0FFBh ;# 
   493  0000                     # 13326 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   494                           STKPTR equ 0FFCh ;# 
   495  0000                     # 13432 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   496                           TOS equ 0FFDh ;# 
   497  0000                     # 13439 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   498                           TOSL equ 0FFDh ;# 
   499  0000                     # 13446 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   500                           TOSH equ 0FFEh ;# 
   501  0000                     # 13453 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   502                           TOSU equ 0FFFh ;# 
   503  0000                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   504                           SSP2CON2 equ 0F62h ;# 
   505  0000                     # 199 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   506                           SSP2CON1 equ 0F63h ;# 
   507  0000                     # 319 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   508                           SSP2STAT equ 0F64h ;# 
   509  0000                     # 746 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   510                           SSP2ADD equ 0F65h ;# 
   511  0000                     # 808 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   512                           SSP2BUF equ 0F66h ;# 
   513  0000                     # 815 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   514                           ECCP2DEL equ 0F67h ;# 
   515  0000                     # 935 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   516                           ECCP2AS equ 0F68h ;# 
   517  0000                     # 1067 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   518                           ECCP3DEL equ 0F69h ;# 
   519  0000                     # 1187 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   520                           ECCP3AS equ 0F6Ah ;# 
   521  0000                     # 1319 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   522                           RCSTA2 equ 0F6Bh ;# 
   523  0000                     # 1497 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   524                           TXSTA2 equ 0F6Ch ;# 
   525  0000                     # 1657 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   526                           TXREG2 equ 0F6Dh ;# 
   527  0000                     # 1664 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   528                           RCREG2 equ 0F6Eh ;# 
   529  0000                     # 1671 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   530                           SPBRG2 equ 0F6Fh ;# 
   531  0000                     # 1678 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   532                           CCP5CON equ 0F70h ;# 
   533  0000                     # 1757 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   534                           CCPR5 equ 0F71h ;# 
   535  0000                     # 1764 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   536                           CCPR5L equ 0F71h ;# 
   537  0000                     # 1771 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   538                           CCPR5H equ 0F72h ;# 
   539  0000                     # 1778 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   540                           CCP4CON equ 0F73h ;# 
   541  0000                     # 1857 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   542                           CCPR4 equ 0F74h ;# 
   543  0000                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   544                           CCPR4L equ 0F74h ;# 
   545  0000                     # 1871 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   546                           CCPR4H equ 0F75h ;# 
   547  0000                     # 1878 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   548                           T4CON equ 0F76h ;# 
   549  0000                     # 1949 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   550                           PR4 equ 0F77h ;# 
   551  0000                     # 1956 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   552                           TMR4 equ 0F78h ;# 
   553  0000                     # 1963 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   554                           ECCP1DEL equ 0F79h ;# 
   555  0000                     # 2083 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   556                           BAUDCON2 equ 0F7Ch ;# 
   557  0000                     # 2200 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   558                           SPBRGH2 equ 0F7Dh ;# 
   559  0000                     # 2207 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   560                           BAUDCON1 equ 0F7Eh ;# 
   561  0000                     # 2212 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   562                           BAUDCON equ 0F7Eh ;# 
   563  0000                     # 2216 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   564                           BAUDCTL equ 0F7Eh ;# 
   565  0000                     # 2633 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   566                           SPBRGH1 equ 0F7Fh ;# 
   567  0000                     # 2638 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   568                           SPBRGH equ 0F7Fh ;# 
   569  0000                     # 2645 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   570                           PORTA equ 0F80h ;# 
   571  0000                     # 2791 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   572                           PORTB equ 0F81h ;# 
   573  0000                     # 2945 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   574                           PORTC equ 0F82h ;# 
   575  0000                     # 3197 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   576                           PORTD equ 0F83h ;# 
   577  0000                     # 3416 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   578                           PORTE equ 0F84h ;# 
   579  0000                     # 3758 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   580                           PORTF equ 0F85h ;# 
   581  0000                     # 3923 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   582                           PORTG equ 0F86h ;# 
   583  0000                     # 4082 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   584                           PORTH equ 0F87h ;# 
   585  0000                     # 4275 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   586                           PORTJ equ 0F88h ;# 
   587  0000                     # 4481 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   588                           LATA equ 0F89h ;# 
   589  0000                     # 4593 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   590                           LATB equ 0F8Ah ;# 
   591  0000                     # 4705 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   592                           LATC equ 0F8Bh ;# 
   593  0000                     # 4817 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   594                           LATD equ 0F8Ch ;# 
   595  0000                     # 4929 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   596                           LATE equ 0F8Dh ;# 
   597  0000                     # 5041 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   598                           LATF equ 0F8Eh ;# 
   599  0000                     # 5153 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   600                           LATG equ 0F8Fh ;# 
   601  0000                     # 5235 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   602                           LATH equ 0F90h ;# 
   603  0000                     # 5347 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   604                           LATJ equ 0F91h ;# 
   605  0000                     # 5459 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   606                           TRISA equ 0F92h ;# 
   607  0000                     # 5464 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   608                           DDRA equ 0F92h ;# 
   609  0000                     # 5681 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   610                           TRISB equ 0F93h ;# 
   611  0000                     # 5686 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   612                           DDRB equ 0F93h ;# 
   613  0000                     # 5903 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   614                           TRISC equ 0F94h ;# 
   615  0000                     # 5908 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   616                           DDRC equ 0F94h ;# 
   617  0000                     # 6125 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   618                           TRISD equ 0F95h ;# 
   619  0000                     # 6130 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   620                           DDRD equ 0F95h ;# 
   621  0000                     # 6347 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   622                           TRISE equ 0F96h ;# 
   623  0000                     # 6352 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   624                           DDRE equ 0F96h ;# 
   625  0000                     # 6569 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   626                           TRISF equ 0F97h ;# 
   627  0000                     # 6574 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   628                           DDRF equ 0F97h ;# 
   629  0000                     # 6791 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   630                           TRISG equ 0F98h ;# 
   631  0000                     # 6796 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   632                           DDRG equ 0F98h ;# 
   633  0000                     # 6941 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   634                           TRISH equ 0F99h ;# 
   635  0000                     # 6946 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   636                           DDRH equ 0F99h ;# 
   637  0000                     # 7163 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   638                           TRISJ equ 0F9Ah ;# 
   639  0000                     # 7168 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   640                           DDRJ equ 0F9Ah ;# 
   641  0000                     # 7385 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   642                           OSCTUNE equ 0F9Bh ;# 
   643  0000                     # 7450 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   644                           MEMCON equ 0F9Ch ;# 
   645  0000                     # 7511 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   646                           PIE1 equ 0F9Dh ;# 
   647  0000                     # 7594 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   648                           PIR1 equ 0F9Eh ;# 
   649  0000                     # 7677 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   650                           IPR1 equ 0F9Fh ;# 
   651  0000                     # 7760 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   652                           PIE2 equ 0FA0h ;# 
   653  0000                     # 7832 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   654                           PIR2 equ 0FA1h ;# 
   655  0000                     # 7904 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   656                           IPR2 equ 0FA2h ;# 
   657  0000                     # 7976 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   658                           PIE3 equ 0FA3h ;# 
   659  0000                     # 8086 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   660                           PIR3 equ 0FA4h ;# 
   661  0000                     # 8164 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   662                           IPR3 equ 0FA5h ;# 
   663  0000                     # 8242 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   664                           EECON1 equ 0FA6h ;# 
   665  0000                     # 8308 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   666                           EECON2 equ 0FA7h ;# 
   667  0000                     # 8315 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   668                           EEDATA equ 0FA8h ;# 
   669  0000                     # 8322 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   670                           EEADR equ 0FA9h ;# 
   671  0000                     # 8329 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   672                           EEADRH equ 0FAAh ;# 
   673  0000                     # 8336 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   674                           RCSTA1 equ 0FABh ;# 
   675  0000                     # 8341 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   676                           RCSTA equ 0FABh ;# 
   677  0000                     # 8660 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   678                           TXSTA1 equ 0FACh ;# 
   679  0000                     # 8665 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   680                           TXSTA equ 0FACh ;# 
   681  0000                     # 8948 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   682                           TXREG1 equ 0FADh ;# 
   683  0000                     # 8953 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   684                           TXREG equ 0FADh ;# 
   685  0000                     # 8960 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   686                           RCREG1 equ 0FAEh ;# 
   687  0000                     # 8965 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   688                           RCREG equ 0FAEh ;# 
   689  0000                     # 8972 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   690                           SPBRG1 equ 0FAFh ;# 
   691  0000                     # 8977 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   692                           SPBRG equ 0FAFh ;# 
   693  0000                     # 8984 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   694                           PSPCON equ 0FB0h ;# 
   695  0000                     # 9023 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   696                           T3CON equ 0FB1h ;# 
   697  0000                     # 9144 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   698                           TMR3 equ 0FB2h ;# 
   699  0000                     # 9151 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   700                           TMR3L equ 0FB2h ;# 
   701  0000                     # 9158 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   702                           TMR3H equ 0FB3h ;# 
   703  0000                     # 9165 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   704                           CMCON equ 0FB4h ;# 
   705  0000                     # 9255 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   706                           CVRCON equ 0FB5h ;# 
   707  0000                     # 9334 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   708                           ECCP1AS equ 0FB6h ;# 
   709  0000                     # 9466 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   710                           CCP3CON equ 0FB7h ;# 
   711  0000                     # 9471 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   712                           ECCP3CON equ 0FB7h ;# 
   713  0000                     # 9658 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   714                           CCPR3 equ 0FB8h ;# 
   715  0000                     # 9665 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   716                           CCPR3L equ 0FB8h ;# 
   717  0000                     # 9672 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   718                           CCPR3H equ 0FB9h ;# 
   719  0000                     # 9679 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   720                           CCP2CON equ 0FBAh ;# 
   721  0000                     # 9684 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   722                           ECCP2CON equ 0FBAh ;# 
   723  0000                     # 9871 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   724                           CCPR2 equ 0FBBh ;# 
   725  0000                     # 9878 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   726                           CCPR2L equ 0FBBh ;# 
   727  0000                     # 9885 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   728                           CCPR2H equ 0FBCh ;# 
   729  0000                     # 9892 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   730                           CCP1CON equ 0FBDh ;# 
   731  0000                     # 9897 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   732                           ECCP1CON equ 0FBDh ;# 
   733  0000                     # 10084 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   734                           CCPR1 equ 0FBEh ;# 
   735  0000                     # 10091 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   736                           CCPR1L equ 0FBEh ;# 
   737  0000                     # 10098 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   738                           CCPR1H equ 0FBFh ;# 
   739  0000                     # 10105 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   740                           ADCON2 equ 0FC0h ;# 
   741  0000                     # 10176 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   742                           ADCON1 equ 0FC1h ;# 
   743  0000                     # 10261 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   744                           ADCON0 equ 0FC2h ;# 
   745  0000                     # 10380 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   746                           ADRES equ 0FC3h ;# 
   747  0000                     # 10387 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   748                           ADRESL equ 0FC3h ;# 
   749  0000                     # 10394 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   750                           ADRESH equ 0FC4h ;# 
   751  0000                     # 10401 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   752                           SSP1CON2 equ 0FC5h ;# 
   753  0000                     # 10406 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   754                           SSPCON2 equ 0FC5h ;# 
   755  0000                     # 10755 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   756                           SSP1CON1 equ 0FC6h ;# 
   757  0000                     # 10760 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   758                           SSPCON1 equ 0FC6h ;# 
   759  0000                     # 10993 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   760                           SSP1STAT equ 0FC7h ;# 
   761  0000                     # 10998 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   762                           SSPSTAT equ 0FC7h ;# 
   763  0000                     # 11591 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   764                           SSP1ADD equ 0FC8h ;# 
   765  0000                     # 11596 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   766                           SSPADD equ 0FC8h ;# 
   767  0000                     # 11813 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   768                           SSP1BUF equ 0FC9h ;# 
   769  0000                     # 11818 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   770                           SSPBUF equ 0FC9h ;# 
   771  0000                     # 11825 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   772                           T2CON equ 0FCAh ;# 
   773  0000                     # 11896 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   774                           PR2 equ 0FCBh ;# 
   775  0000                     # 11903 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   776                           TMR2 equ 0FCCh ;# 
   777  0000                     # 11910 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   778                           T1CON equ 0FCDh ;# 
   779  0000                     # 12022 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   780                           TMR1 equ 0FCEh ;# 
   781  0000                     # 12029 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   782                           TMR1L equ 0FCEh ;# 
   783  0000                     # 12036 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   784                           TMR1H equ 0FCFh ;# 
   785  0000                     # 12043 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   786                           RCON equ 0FD0h ;# 
   787  0000                     # 12176 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   788                           WDTCON equ 0FD1h ;# 
   789  0000                     # 12204 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   790                           HLVDCON equ 0FD2h ;# 
   791  0000                     # 12209 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   792                           LVDCON equ 0FD2h ;# 
   793  0000                     # 12476 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   794                           OSCCON equ 0FD3h ;# 
   795  0000                     # 12559 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   796                           T0CON equ 0FD5h ;# 
   797  0000                     # 12635 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   798                           TMR0 equ 0FD6h ;# 
   799  0000                     # 12642 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   800                           TMR0L equ 0FD6h ;# 
   801  0000                     # 12649 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   802                           TMR0H equ 0FD7h ;# 
   803  0000                     # 12656 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   804                           STATUS equ 0FD8h ;# 
   805  0000                     # 12727 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   806                           FSR2 equ 0FD9h ;# 
   807  0000                     # 12734 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   808                           FSR2L equ 0FD9h ;# 
   809  0000                     # 12741 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   810                           FSR2H equ 0FDAh ;# 
   811  0000                     # 12748 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   812                           PLUSW2 equ 0FDBh ;# 
   813  0000                     # 12755 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   814                           PREINC2 equ 0FDCh ;# 
   815  0000                     # 12762 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   816                           POSTDEC2 equ 0FDDh ;# 
   817  0000                     # 12769 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   818                           POSTINC2 equ 0FDEh ;# 
   819  0000                     # 12776 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   820                           INDF2 equ 0FDFh ;# 
   821  0000                     # 12783 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   822                           BSR equ 0FE0h ;# 
   823  0000                     # 12790 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   824                           FSR1 equ 0FE1h ;# 
   825  0000                     # 12797 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   826                           FSR1L equ 0FE1h ;# 
   827  0000                     # 12804 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   828                           FSR1H equ 0FE2h ;# 
   829  0000                     # 12811 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   830                           PLUSW1 equ 0FE3h ;# 
   831  0000                     # 12818 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   832                           PREINC1 equ 0FE4h ;# 
   833  0000                     # 12825 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   834                           POSTDEC1 equ 0FE5h ;# 
   835  0000                     # 12832 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   836                           POSTINC1 equ 0FE6h ;# 
   837  0000                     # 12839 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   838                           INDF1 equ 0FE7h ;# 
   839  0000                     # 12846 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   840                           WREG equ 0FE8h ;# 
   841  0000                     # 12853 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   842                           FSR0 equ 0FE9h ;# 
   843  0000                     # 12860 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   844                           FSR0L equ 0FE9h ;# 
   845  0000                     # 12867 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   846                           FSR0H equ 0FEAh ;# 
   847  0000                     # 12874 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   848                           PLUSW0 equ 0FEBh ;# 
   849  0000                     # 12881 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   850                           PREINC0 equ 0FECh ;# 
   851  0000                     # 12888 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   852                           POSTDEC0 equ 0FEDh ;# 
   853  0000                     # 12895 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   854                           POSTINC0 equ 0FEEh ;# 
   855  0000                     # 12902 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   856                           INDF0 equ 0FEFh ;# 
   857  0000                     # 12909 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   858                           INTCON3 equ 0FF0h ;# 
   859  0000                     # 13021 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   860                           INTCON2 equ 0FF1h ;# 
   861  0000                     # 13114 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   862                           INTCON equ 0FF2h ;# 
   863  0000                     # 13231 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   864                           PROD equ 0FF3h ;# 
   865  0000                     # 13238 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   866                           PRODL equ 0FF3h ;# 
   867  0000                     # 13245 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   868                           PRODH equ 0FF4h ;# 
   869  0000                     # 13252 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   870                           TABLAT equ 0FF5h ;# 
   871  0000                     # 13261 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   872                           TBLPTR equ 0FF6h ;# 
   873  0000                     # 13268 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   874                           TBLPTRL equ 0FF6h ;# 
   875  0000                     # 13275 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   876                           TBLPTRH equ 0FF7h ;# 
   877  0000                     # 13282 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   878                           TBLPTRU equ 0FF8h ;# 
   879  0000                     # 13291 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   880                           PCLAT equ 0FF9h ;# 
   881  0000                     # 13298 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   882                           PC equ 0FF9h ;# 
   883  0000                     # 13305 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   884                           PCL equ 0FF9h ;# 
   885  0000                     # 13312 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   886                           PCLATH equ 0FFAh ;# 
   887  0000                     # 13319 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   888                           PCLATU equ 0FFBh ;# 
   889  0000                     # 13326 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   890                           STKPTR equ 0FFCh ;# 
   891  0000                     # 13432 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   892                           TOS equ 0FFDh ;# 
   893  0000                     # 13439 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   894                           TOSL equ 0FFDh ;# 
   895  0000                     # 13446 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   896                           TOSH equ 0FFEh ;# 
   897  0000                     # 13453 "/opt/microchip/xc8/v2.00/pic/include/pic18f8722.h"
   898                           TOSU equ 0FFFh ;# 
   899  0000                     	FNCALL	_main,_WriteCommandToLCD
   900                           	FNCALL	_main,_WriteDataToLCD
   901                           	FNCALL	_main,_decrementTime
   902                           	FNCALL	_main,_enableTimers
   903                           	FNCALL	_main,_init1
   904                           	FNCALL	_main,_init2
   905                           	FNCALL	_main,_numToStringPrint
   906                           	FNCALL	_main,_refreshPerson
   907                           	FNCALL	_main,_refreshTimeLeft
   908                           	FNCALL	_main,_wait3s
   909                           	FNCALL	_refreshTimeLeft,_WriteCommandToLCD
   910                           	FNCALL	_refreshTimeLeft,_WriteDataToLCD
   911                           	FNCALL	_refreshTimeLeft,_WriteStringToLCD
   912                           	FNCALL	_refreshPerson,_WriteCommandToLCD
   913                           	FNCALL	_refreshPerson,_WriteDataToLCD
   914                           	FNCALL	_refreshPerson,_WriteStringToLCD
   915                           	FNCALL	_refreshPerson,___awdiv
   916                           	FNCALL	_refreshPerson,___awmod
   917                           	FNCALL	_init2,_ClearLCDScreen
   918                           	FNCALL	_init2,_WriteCommandToLCD
   919                           	FNCALL	_init2,_WriteStringToLCD
   920                           	FNCALL	_init2,_numToStringPrint
   921                           	FNCALL	_numToStringPrint,_WriteCommandToLCD
   922                           	FNCALL	_numToStringPrint,_WriteDataToLCD
   923                           	FNCALL	_ClearLCDScreen,_WriteCommandToLCD
   924                           	FNCALL	_init1,_ToggleEpinOfLCD
   925                           	FNCALL	_init1,_WriteCommandToLCD
   926                           	FNCALL	_init1,_WriteStringToLCD
   927                           	FNCALL	_WriteStringToLCD,_WriteDataToLCD
   928                           	FNCALL	_WriteDataToLCD,_ToggleEpinOfLCD
   929                           	FNCALL	_WriteCommandToLCD,_ToggleEpinOfLCD
   930                           	FNROOT	_main
   931                           	FNCALL	_highISR,_enableADC
   932                           	FNCALL	_highISR,_incrementDigit
   933                           	FNCALL	_highISR,_refreshSevenSegment
   934                           	FNCALL	_refreshSevenSegment,i2___awdiv
   935                           	FNCALL	_refreshSevenSegment,i2___awmod
   936                           	FNCALL	intlevel2,_highISR
   937                           	global	intlevel2
   938                           	FNROOT	intlevel2
   939                           	global	_sevenSegmentTable
   940                           	global	_timeL
   941                           	global	_timeH
   942                           	global	_ids
   943                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
   944                           global __pidataCOMRAM
   945                           __pidataCOMRAM:
   946  001F16                     	file	"main.c"
   947                           	line	24
   948                           
   949                           ;initializer for _sevenSegmentTable
   950                           	db	low(03Fh)
   951  001F16  3F                 	db	low(06h)
   952  001F17  06                 	db	low(05Bh)
   953  001F18  5B                 	db	low(04Fh)
   954  001F19  4F                 	db	low(066h)
   955  001F1A  66                 	db	low(06Dh)
   956  001F1B  6D                 	db	low(07Ch)
   957  001F1C  7C                 	db	low(07h)
   958  001F1D  07                 	db	low(07Fh)
   959  001F1E  7F                 	db	low(06Fh)
   960  001F1F  6F                 	db	low(040h)
   961  001F20  40                 	line	30
   962                           
   963                           ;initializer for _timeL
   964                           	db	low(01h)
   965  001F21  01                 	line	29
   966                           
   967                           ;initializer for _timeH
   968                           	db	low(09h)
   969  001F22  09                 psect	idataBANK0,class=CODE,space=0,delta=1,noexec
   970                           global __pidataBANK0
   971                           __pidataBANK0:
   972  001ED2                     	line	22
   973                           
   974                           ;initializer for _ids
   975                           	db	low(031h)
   976  001ED2  31                 	db	low(038h)
   977  001ED3  38                 	db	low(0)
   978  001ED4  00                 	db	low(036h)
   979  001ED5  36                 	db	low(034h)
   980  001ED6  34                 	db	low(0)
   981  001ED7  00                 	db	low(033h)
   982  001ED8  33                 	db	low(034h)
   983  001ED9  34                 	db	low(0)
   984  001EDA  00                 	db	low(032h)
   985  001EDB  32                 	db	low(033h)
   986  001EDC  33                 	db	low(0)
   987  001EDD  00                 	db	low(033h)
   988  001EDE  33                 	db	low(033h)
   989  001EDF  33                 	db	low(0)
   990  001EE0  00                 	db	low(036h)
   991  001EE1  36                 	db	low(037h)
   992  001EE2  37                 	db	low(0)
   993  001EE3  00                 	db	low(036h)
   994  001EE4  36                 	db	low(033h)
   995  001EE5  33                 	db	low(0)
   996  001EE6  00                 	db	low(039h)
   997  001EE7  39                 	db	low(039h)
   998  001EE8  39                 	db	low(0)
   999  001EE9  00                 	global	_names
  1000                           psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
  1001                           global __psmallconst
  1002                           __psmallconst:
  1003  001000                     	db	0
  1004  001000  00                 	file	"main.c"
  1005                           	line	23
  1006                           _names:
  1007  001001                     	db	low(050h)
  1008  001001  50                 	db	low(06Fh)
  1009  001002  6F                 	db	low(065h)
  1010  001003  65                 	db	low(020h)
  1011  001004  20                 	db	low(020h)
  1012  001005  20                 	db	low(020h)
  1013  001006  20                 	db	low(0)
  1014  001007  00                 	db	low(047h)
  1015  001008  47                 	db	low(061h)
  1016  001009  61                 	db	low(06Ch)
  1017  00100A  6C                 	db	low(069h)
  1018  00100B  69                 	db	low(062h)
  1019  00100C  62                 	db	low(020h)
  1020  00100D  20                 	db	low(0)
  1021  00100E  00                 	db	low(053h)
  1022  00100F  53                 	db	low(065h)
  1023  001010  65                 	db	low(06Ch)
  1024  001011  6C                 	db	low(069h)
  1025  001012  69                 	db	low(06Dh)
  1026  001013  6D                 	db	low(069h)
  1027  001014  69                 	db	low(0)
  1028  001015  00                 	db	low(04Eh)
  1029  001016  4E                 	db	low(065h)
  1030  001017  65                 	db	low(073h)
  1031  001018  73                 	db	low(069h)
  1032  001019  69                 	db	low(06Dh)
  1033  00101A  6D                 	db	low(069h)
  1034  00101B  69                 	db	low(0)
  1035  00101C  00                 	db	low(048h)
  1036  00101D  48                 	db	low(061h)
  1037  00101E  61                 	db	low(074h)
  1038  00101F  74                 	db	low(061h)
  1039  001020  61                 	db	low(079h)
  1040  001021  79                 	db	low(069h)
  1041  001022  69                 	db	low(0)
  1042  001023  00                 	db	low(05Ah)
  1043  001024  5A                 	db	low(077h)
  1044  001025  77                 	db	low(065h)
  1045  001026  65                 	db	low(069h)
  1046  001027  69                 	db	low(067h)
  1047  001028  67                 	db	low(020h)
  1048  001029  20                 	db	low(0)
  1049  00102A  00                 	db	low(04Eh)
  1050  00102B  4E                 	db	low(061h)
  1051  00102C  61                 	db	low(062h)
  1052  00102D  62                 	db	low(069h)
  1053  00102E  69                 	db	low(020h)
  1054  00102F  20                 	db	low(020h)
  1055  001030  20                 	db	low(0)
  1056  001031  00                 	db	low(041h)
  1057  001032  41                 	db	low(075h)
  1058  001033  75                 	db	low(073h)
  1059  001034  73                 	db	low(074h)
  1060  001035  74                 	db	low(065h)
  1061  001036  65                 	db	low(06Eh)
  1062  001037  6E                 	db	low(0)
  1063  001038  00                 	global __end_of_names
  1064                           __end_of_names:
  1065  001039                     	global	_emptyline
  1066                           psect	smallconst
  1067                           	file	"main.c"
  1068                           	line	21
  1069                           _emptyline:
  1070  001039                     	db	low(020h)
  1071  001039  20                 	db	low(023h)
  1072  00103A  23                 	db	low(023h)
  1073  00103B  23                 	db	low(023h)
  1074  00103C  23                 	db	low(023h)
  1075  00103D  23                 	db	low(023h)
  1076  00103E  23                 	db	low(023h)
  1077  00103F  23                 	db	low(023h)
  1078  001040  23                 	db	low(023h)
  1079  001041  23                 	db	low(023h)
  1080  001042  23                 	db	low(023h)
  1081  001043  23                 	db	low(023h)
  1082  001044  23                 	db	low(023h)
  1083  001045  23                 	db	low(023h)
  1084  001046  23                 	db	low(023h)
  1085  001047  23                 	db	low(0)
  1086  001048  00                 	global __end_of_emptyline
  1087                           __end_of_emptyline:
  1088  001049                     	global	_enterVotersText
  1089                           psect	smallconst
  1090                           	file	"main.c"
  1091                           	line	20
  1092                           _enterVotersText:
  1093  001049                     	db	low(020h)
  1094  001049  20                 	db	low(023h)
  1095  00104A  23                 	db	low(045h)
  1096  00104B  45                 	db	low(06Eh)
  1097  00104C  6E                 	db	low(074h)
  1098  00104D  74                 	db	low(065h)
  1099  00104E  65                 	db	low(072h)
  1100  00104F  72                 	db	low(020h)
  1101  001050  20                 	db	low(056h)
  1102  001051  56                 	db	low(06Fh)
  1103  001052  6F                 	db	low(074h)
  1104  001053  74                 	db	low(065h)
  1105  001054  65                 	db	low(072h)
  1106  001055  72                 	db	low(073h)
  1107  001056  73                 	db	low(023h)
  1108  001057  23                 	db	low(0)
  1109  001058  00                 	global __end_of_enterVotersText
  1110                           __end_of_enterVotersText:
  1111  001059                     	global	_electroVote
  1112                           psect	smallconst
  1113                           	file	"main.c"
  1114                           	line	19
  1115                           _electroVote:
  1116  001059                     	db	low(020h)
  1117  001059  20                 	db	low(023h)
  1118  00105A  23                 	db	low(045h)
  1119  00105B  45                 	db	low(06Ch)
  1120  00105C  6C                 	db	low(065h)
  1121  00105D  65                 	db	low(063h)
  1122  00105E  63                 	db	low(074h)
  1123  00105F  74                 	db	low(072h)
  1124  001060  72                 	db	low(06Fh)
  1125  001061  6F                 	db	low(020h)
  1126  001062  20                 	db	low(056h)
  1127  001063  56                 	db	low(06Fh)
  1128  001064  6F                 	db	low(074h)
  1129  001065  74                 	db	low(065h)
  1130  001066  65                 	db	low(023h)
  1131  001067  23                 	db	low(0)
  1132  001068  00                 	global __end_of_electroVote
  1133                           __end_of_electroVote:
  1134  001069                     	global	_names
  1135                           	global	_emptyline
  1136                           	global	_enterVotersText
  1137                           	global	_electroVote
  1138                           	global	_votes
  1139                           	global	_tmr0count
  1140                           	global	_maxVotedPerson
  1141                           	global	_totalVotes
  1142                           	global	_ledPointer
  1143                           	global	_voteEnds
  1144                           	global	_currentPerson
  1145                           	global	_digitStage
  1146                           	global	_birlerDigit
  1147                           	global	_onlarDigit
  1148                           	global	_rb_var
  1149                           	global	_blinkStatus
  1150                           	global	_tmr1count
  1151                           	global	_adcCount
  1152                           	global	_timer0Flag
  1153                           	global	_refreshPersonFlag
  1154                           	global	_numToStringPrintFlag
  1155                           	global	_timer1Flag
  1156                           	global	_i
  1157                           	global	_TMR1
  1158                           _TMR1	set	0xFCE
  1159  0000                     	global	_TMR0
  1160                           _TMR0	set	0xFD6
  1161  0000                     	global	_PORTJ
  1162                           _PORTJ	set	0xF88
  1163  0000                     	global	_PORTH
  1164                           _PORTH	set	0xF87
  1165  0000                     	global	_PORTG
  1166                           _PORTG	set	0xF86
  1167  0000                     	global	_PORTF
  1168                           _PORTF	set	0xF85
  1169  0000                     	global	_PORTE
  1170                           _PORTE	set	0xF84
  1171  0000                     	global	_PORTC
  1172                           _PORTC	set	0xF82
  1173  0000                     	global	_PORTA
  1174                           _PORTA	set	0xF80
  1175  0000                     	global	_ADRESL
  1176                           _ADRESL	set	0xFC3
  1177  0000                     	global	_ADCON1
  1178                           _ADCON1	set	0xFC1
  1179  0000                     	global	_ADCON0
  1180                           _ADCON0	set	0xFC2
  1181  0000                     	global	_INTCONbits
  1182                           _INTCONbits	set	0xFF2
  1183  0000                     	global	_T0CON
  1184                           _T0CON	set	0xFD5
  1185  0000                     	global	_IPR1bits
  1186                           _IPR1bits	set	0xF9F
  1187  0000                     	global	_T1CONbits
  1188                           _T1CONbits	set	0xFCD
  1189  0000                     	global	_T0CONbits
  1190                           _T0CONbits	set	0xFD5
  1191  0000                     	global	_PIE1bits
  1192                           _PIE1bits	set	0xF9D
  1193  0000                     	global	_PIR1bits
  1194                           _PIR1bits	set	0xF9E
  1195  0000                     	global	_INTCON2bits
  1196                           _INTCON2bits	set	0xFF1
  1197  0000                     	global	_PORTB
  1198                           _PORTB	set	0xF81
  1199  0000                     	global	_PORTD
  1200                           _PORTD	set	0xF83
  1201  0000                     	global	_LATJ
  1202                           _LATJ	set	0xF91
  1203  0000                     	global	_LATH
  1204                           _LATH	set	0xF90
  1205  0000                     	global	_LATG
  1206                           _LATG	set	0xF8F
  1207  0000                     	global	_LATF
  1208                           _LATF	set	0xF8E
  1209  0000                     	global	_LATE
  1210                           _LATE	set	0xF8D
  1211  0000                     	global	_LATD
  1212                           _LATD	set	0xF8C
  1213  0000                     	global	_LATC
  1214                           _LATC	set	0xF8B
  1215  0000                     	global	_LATB
  1216                           _LATB	set	0xF8A
  1217  0000                     	global	_LATA
  1218                           _LATA	set	0xF89
  1219  0000                     	global	_TRISJ
  1220                           _TRISJ	set	0xF9A
  1221  0000                     	global	_TRISH
  1222                           _TRISH	set	0xF99
  1223  0000                     	global	_TRISG
  1224                           _TRISG	set	0xF98
  1225  0000                     	global	_TRISF
  1226                           _TRISF	set	0xF97
  1227  0000                     	global	_TRISE
  1228                           _TRISE	set	0xF96
  1229  0000                     	global	_TRISD
  1230                           _TRISD	set	0xF95
  1231  0000                     	global	_TRISC
  1232                           _TRISC	set	0xF94
  1233  0000                     	global	_TRISB
  1234                           _TRISB	set	0xF93
  1235  0000                     	global	_TRISA
  1236                           _TRISA	set	0xF92
  1237  0000                     	global	_RCONbits
  1238                           _RCONbits	set	0xFD0
  1239  0000                     	global	_INTCON
  1240                           _INTCON	set	0xFF2
  1241  0000                     	global	_ADRESH
  1242                           _ADRESH	set	0xFC4
  1243  0000                     	global	_TRISD7
  1244                           _TRISD7	set	0x7CAF
  1245  0000                     	global	_TRISD6
  1246                           _TRISD6	set	0x7CAE
  1247  0000                     	global	_TRISD5
  1248                           _TRISD5	set	0x7CAD
  1249  0000                     	global	_TRISD4
  1250                           _TRISD4	set	0x7CAC
  1251  0000                     	global	_TRISB2
  1252                           _TRISB2	set	0x7C9A
  1253  0000                     	global	_TRISB5
  1254                           _TRISB5	set	0x7C9D
  1255  0000                     	global	_LATD7
  1256                           _LATD7	set	0x7C67
  1257  0000                     	global	_LATD6
  1258                           _LATD6	set	0x7C66
  1259  0000                     	global	_LATD5
  1260                           _LATD5	set	0x7C65
  1261  0000                     	global	_LATD4
  1262                           _LATD4	set	0x7C64
  1263  0000                     	global	_LATB2
  1264                           _LATB2	set	0x7C52
  1265  0000                     	global	_LATB5
  1266                           _LATB5	set	0x7C55
  1267  0000                     	global	_RE1
  1268                           _RE1	set	0x7C21
  1269  0000                     	global	_TMR0IF
  1270                           _TMR0IF	set	0x7F92
  1271  0000                     	global	_TMR0IE
  1272                           _TMR0IE	set	0x7F95
  1273  0000                     	global	_RBIE
  1274                           _RBIE	set	0x7F93
  1275  0000                     	global	_TMR1IF
  1276                           _TMR1IF	set	0x7CF0
  1277  0000                     	global	_TMR1IE
  1278                           _TMR1IE	set	0x7CE8
  1279  0000                     	global	_LATH2
  1280                           _LATH2	set	0x7C82
  1281  0000                     	global	_LATH1
  1282                           _LATH1	set	0x7C81
  1283  0000                     	global	_LATH3
  1284                           _LATH3	set	0x7C83
  1285  0000                     	global	_ADIF
  1286                           _ADIF	set	0x7CF6
  1287  0000                     	global	_ADIE
  1288                           _ADIE	set	0x7CEE
  1289  0000                     	global	_ADIP
  1290                           _ADIP	set	0x7CFE
  1291  0000                     	global	_TRISH4
  1292                           _TRISH4	set	0x7CCC
  1293  0000                     	global	_ADFM
  1294                           _ADFM	set	0x7E07
  1295  0000                     	global	_RBIF
  1296                           _RBIF	set	0x7F90
  1297  0000                     	global	_LATH0
  1298                           _LATH0	set	0x7C80
  1299  0000                     	
  1300                           STR_1:
  1301  001069                     	db	32
  1302  001069  20                 	db	32
  1303  00106A  20                 	db	84	;'T'
  1304  00106B  54                 	db	105	;'i'
  1305  00106C  69                 	db	109	;'m'
  1306  00106D  6D                 	db	101	;'e'
  1307  00106E  65                 	db	32
  1308  00106F  20                 	db	108	;'l'
  1309  001070  6C                 	db	101	;'e'
  1310  001071  65                 	db	102	;'f'
  1311  001072  66                 	db	116	;'t'
  1312  001073  74                 	db	32
  1313  001074  20                 	db	58	;':'
  1314  001075  3A                 	db	0
  1315  001076  00                 ; #config settings
  1316                           global __CFG_OSC$HSPLL
  1317                           __CFG_OSC$HSPLL equ 0x0
  1318  0000                     global __CFG_FCMEN$OFF
  1319                           __CFG_FCMEN$OFF equ 0x0
  1320  0000                     global __CFG_IESO$OFF
  1321                           __CFG_IESO$OFF equ 0x0
  1322  0000                     global __CFG_PWRT$OFF
  1323                           __CFG_PWRT$OFF equ 0x0
  1324  0000                     global __CFG_BOREN$OFF
  1325                           __CFG_BOREN$OFF equ 0x0
  1326  0000                     global __CFG_WDT$OFF
  1327                           __CFG_WDT$OFF equ 0x0
  1328  0000                     global __CFG_LPT1OSC$OFF
  1329                           __CFG_LPT1OSC$OFF equ 0x0
  1330  0000                     global __CFG_MCLRE$ON
  1331                           __CFG_MCLRE$ON equ 0x0
  1332  0000                     global __CFG_LVP$OFF
  1333                           __CFG_LVP$OFF equ 0x0
  1334  0000                     global __CFG_XINST$OFF
  1335                           __CFG_XINST$OFF equ 0x0
  1336  0000                     global __CFG_DEBUG$OFF
  1337                           __CFG_DEBUG$OFF equ 0x0
  1338  0000                     	file	"/tmp/xcXZ6yvrg"
  1339                           	line	#
  1340                           psect	cinit,class=CODE,delta=1,reloc=2
  1341                           global __pcinit
  1342                           __pcinit:
  1343  001CDE                     global start_initialization
  1344                           start_initialization:
  1345  001CDE                     
  1346                           global __initialization
  1347                           __initialization:
  1348  001CDE                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
  1349                           global __pbssCOMRAM
  1350                           __pbssCOMRAM:
  1351  00001F                     	global	_votes
  1352                           _votes:
  1353  00001F                            ds      8
  1354  00001F                     	global	_tmr0count
  1355                           _tmr0count:
  1356  000027                            ds      2
  1357  000027                     	global	_maxVotedPerson
  1358                           _maxVotedPerson:
  1359  000029                            ds      1
  1360  000029                     	global	_totalVotes
  1361                           _totalVotes:
  1362  00002A                            ds      1
  1363  00002A                     	global	_ledPointer
  1364                           	global	_ledPointer
  1365                           _ledPointer:
  1366  00002B                            ds      1
  1367  00002B                     	global	_voteEnds
  1368                           _voteEnds:
  1369  00002C                            ds      1
  1370  00002C                     	global	_currentPerson
  1371                           _currentPerson:
  1372  00002D                            ds      1
  1373  00002D                     	global	_digitStage
  1374                           _digitStage:
  1375  00002E                            ds      1
  1376  00002E                     	global	_birlerDigit
  1377                           _birlerDigit:
  1378  00002F                            ds      1
  1379  00002F                     	global	_onlarDigit
  1380                           _onlarDigit:
  1381  000030                            ds      1
  1382  000030                     	global	_rb_var
  1383                           _rb_var:
  1384  000031                            ds      1
  1385  000031                     	global	_blinkStatus
  1386                           _blinkStatus:
  1387  000032                            ds      1
  1388  000032                     	global	_tmr1count
  1389                           _tmr1count:
  1390  000033                            ds      1
  1391  000033                     	global	_adcCount
  1392                           _adcCount:
  1393  000034                            ds      1
  1394  000034                     	global	_timer0Flag
  1395                           _timer0Flag:
  1396  000035                            ds      1
  1397  000035                     	global	_refreshPersonFlag
  1398                           _refreshPersonFlag:
  1399  000036                            ds      1
  1400  000036                     	global	_numToStringPrintFlag
  1401                           _numToStringPrintFlag:
  1402  000037                            ds      1
  1403  000037                     	global	_timer1Flag
  1404                           _timer1Flag:
  1405  000038                            ds      1
  1406  000038                     	global	_i
  1407                           _i:
  1408  000039                            ds      1
  1409  000039                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
  1410                           global __pdataCOMRAM
  1411                           __pdataCOMRAM:
  1412  00003A                     	file	"main.c"
  1413                           	line	24
  1414                           	global	_sevenSegmentTable
  1415                           _sevenSegmentTable:
  1416  00003A                            ds      11
  1417  00003A                     psect	dataCOMRAM
  1418                           	file	"main.c"
  1419                           	line	30
  1420                           	global	_timeL
  1421                           _timeL:
  1422  000045                            ds      1
  1423  000045                     psect	dataCOMRAM
  1424                           	file	"main.c"
  1425                           	line	29
  1426                           	global	_timeH
  1427                           _timeH:
  1428  000046                            ds      1
  1429  000046                     psect	dataBANK0,class=BANK0,space=1,noexec,lowdata
  1430                           global __pdataBANK0
  1431                           __pdataBANK0:
  1432  000060                     	file	"main.c"
  1433                           	line	22
  1434                           	global	_ids
  1435                           _ids:
  1436  000060                            ds      24
  1437  000060                     	file	"/tmp/xcXZ6yvrg"
  1438                           	line	#
  1439                           psect	cinit
  1440                           ; Initialize objects allocated to BANK0 (24 bytes)
  1441                           	global __pidataBANK0
  1442                           	; load TBLPTR registers with __pidataBANK0
  1443                           	movlw	low (__pidataBANK0)
  1444  001CDE  0ED2               	movwf	tblptrl
  1445  001CE0  6EF6               	movlw	high(__pidataBANK0)
  1446  001CE2  0E1E               	movwf	tblptrh
  1447  001CE4  6EF7               	movlw	low highword(__pidataBANK0)
  1448  001CE6  0E00               	movwf	tblptru
  1449  001CE8  6EF8               	lfsr	0,__pdataBANK0
  1450  001CEA  EE00  F060         	lfsr	1,24
  1451  001CEE  EE10 F018          	copy_data0:
  1452  001CF2                     	tblrd	*+
  1453  001CF2  0009               	movff	tablat, postinc0
  1454  001CF4  CFF5 FFEE          	movf	postdec1,w
  1455  001CF8  50E5               	movf	fsr1l,w
  1456  001CFA  50E1               	bnz	copy_data0
  1457  001CFC  E1FA               ; Initialize objects allocated to COMRAM (13 bytes)
  1458                           	global __pidataCOMRAM
  1459                           	; load TBLPTR registers with __pidataCOMRAM
  1460                           	movlw	low (__pidataCOMRAM)
  1461  001CFE  0E16               	movwf	tblptrl
  1462  001D00  6EF6               	movlw	high(__pidataCOMRAM)
  1463  001D02  0E1F               	movwf	tblptrh
  1464  001D04  6EF7               	movlw	low highword(__pidataCOMRAM)
  1465  001D06  0E00               	movwf	tblptru
  1466  001D08  6EF8               	lfsr	0,__pdataCOMRAM
  1467  001D0A  EE00  F03A         	lfsr	1,13
  1468  001D0E  EE10 F00D          	copy_data1:
  1469  001D12                     	tblrd	*+
  1470  001D12  0009               	movff	tablat, postinc0
  1471  001D14  CFF5 FFEE          	movf	postdec1,w
  1472  001D18  50E5               	movf	fsr1l,w
  1473  001D1A  50E1               	bnz	copy_data1
  1474  001D1C  E1FA               	line	#
  1475                           ; Clear objects allocated to COMRAM (27 bytes)
  1476                           	global __pbssCOMRAM
  1477                           lfsr	0,__pbssCOMRAM
  1478  001D1E  EE00  F01F         movlw	27
  1479  001D22  0E1B               clear_0:
  1480  001D24                     clrf	postinc0,c
  1481  001D24  6AEE               decf	wreg
  1482  001D26  06E8               bnz	clear_0
  1483  001D28  E1FD               psect cinit,class=CODE,delta=1
  1484                           global end_of_initialization,__end_of__initialization
  1485                           
  1486                           ;End of C runtime variable initialization code
  1487                           
  1488                           end_of_initialization:
  1489  001D2A                     __end_of__initialization:
  1490  001D2A                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
  1491  001D2A  9047               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  1492  001D2C  9247               	GLOBAL	__Lmediumconst
  1493                           	movlw	low highword(__Lmediumconst)
  1494  001D2E  0E00               	movwf	tblptru
  1495  001D30  6EF8               movlb 0
  1496  001D32  0100               goto _main	;jump to C main() function
  1497  001D34  EF3B  F00B         psect	cstackBANK0,class=BANK0,space=1,noexec
  1498                           global __pcstackBANK0
  1499                           __pcstackBANK0:
  1500  000078                     	global	___awdiv@counter
  1501                           ___awdiv@counter:	; 1 bytes @ 0x0
  1502  000078                     	ds   1
  1503  000078                     	global	___awdiv@sign
  1504                           ___awdiv@sign:	; 1 bytes @ 0x1
  1505  000079                     	ds   1
  1506  000079                     	global	___awdiv@quotient
  1507                           ___awdiv@quotient:	; 2 bytes @ 0x2
  1508  00007A                     	ds   2
  1509  00007A                     	global	refreshPerson@firstDigit
  1510                           refreshPerson@firstDigit:	; 1 bytes @ 0x4
  1511  00007C                     	ds   1
  1512  00007C                     	global	refreshPerson@secondDigit
  1513                           refreshPerson@secondDigit:	; 1 bytes @ 0x5
  1514  00007D                     	ds   1
  1515  00007D                     	global	refreshPerson@currentVote
  1516                           refreshPerson@currentVote:	; 1 bytes @ 0x6
  1517  00007E                     	ds   1
  1518  00007E                     	global	refreshPerson@temp
  1519                           refreshPerson@temp:	; 1 bytes @ 0x7
  1520  00007F                     	ds   1
  1521  00007F                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
  1522                           global __pcstackCOMRAM
  1523                           __pcstackCOMRAM:
  1524  000001                     ?_ToggleEpinOfLCD:	; 1 bytes @ 0x0
  1525  000001                     ?_WriteCommandToLCD:	; 1 bytes @ 0x0
  1526  000001                     ?_WriteDataToLCD:	; 1 bytes @ 0x0
  1527  000001                     ?_ClearLCDScreen:	; 1 bytes @ 0x0
  1528  000001                     ?_init1:	; 1 bytes @ 0x0
  1529  000001                     ?_numToStringPrint:	; 1 bytes @ 0x0
  1530  000001                     ?_refreshTimeLeft:	; 1 bytes @ 0x0
  1531  000001                     ?_refreshPerson:	; 1 bytes @ 0x0
  1532  000001                     ?_init2:	; 1 bytes @ 0x0
  1533  000001                     ?_enableTimers:	; 1 bytes @ 0x0
  1534  000001                     ?_enableADC:	; 1 bytes @ 0x0
  1535  000001                     ??_enableADC:	; 1 bytes @ 0x0
  1536  000001                     ?_refreshSevenSegment:	; 1 bytes @ 0x0
  1537  000001                     ?_wait3s:	; 1 bytes @ 0x0
  1538  000001                     ?_incrementDigit:	; 1 bytes @ 0x0
  1539  000001                     ??_incrementDigit:	; 1 bytes @ 0x0
  1540  000001                     ?_decrementTime:	; 1 bytes @ 0x0
  1541  000001                     ?_highISR:	; 1 bytes @ 0x0
  1542  000001                     ?_main:	; 1 bytes @ 0x0
  1543  000001                     	global	?i2___awdiv
  1544                           ?i2___awdiv:	; 2 bytes @ 0x0
  1545  000001                     	global	?i2___awmod
  1546                           ?i2___awmod:	; 2 bytes @ 0x0
  1547  000001                     	global	incrementDigit@number
  1548                           incrementDigit@number:	; 1 bytes @ 0x0
  1549  000001                     	global	i2___awdiv@dividend
  1550                           i2___awdiv@dividend:	; 2 bytes @ 0x0
  1551  000001                     	global	i2___awmod@dividend
  1552                           i2___awmod@dividend:	; 2 bytes @ 0x0
  1553  000001                     	ds   2
  1554  000001                     	global	i2___awdiv@divisor
  1555                           i2___awdiv@divisor:	; 2 bytes @ 0x2
  1556  000003                     	global	i2___awmod@divisor
  1557                           i2___awmod@divisor:	; 2 bytes @ 0x2
  1558  000003                     	ds   2
  1559  000003                     ??i2___awdiv:	; 1 bytes @ 0x4
  1560  000005                     ??i2___awmod:	; 1 bytes @ 0x4
  1561  000005                     	global	i2___awdiv@counter
  1562                           i2___awdiv@counter:	; 1 bytes @ 0x4
  1563  000005                     	global	i2___awmod@counter
  1564                           i2___awmod@counter:	; 1 bytes @ 0x4
  1565  000005                     	ds   1
  1566  000005                     	global	i2___awdiv@sign
  1567                           i2___awdiv@sign:	; 1 bytes @ 0x5
  1568  000006                     	global	i2___awmod@sign
  1569                           i2___awmod@sign:	; 1 bytes @ 0x5
  1570  000006                     	ds   1
  1571  000006                     	global	i2___awdiv@quotient
  1572                           i2___awdiv@quotient:	; 2 bytes @ 0x6
  1573  000007                     	ds   2
  1574  000007                     ??_refreshSevenSegment:	; 1 bytes @ 0x8
  1575  000009                     	global	refreshSevenSegment@firstDigit
  1576                           refreshSevenSegment@firstDigit:	; 1 bytes @ 0x8
  1577  000009                     	ds   1
  1578  000009                     	global	refreshSevenSegment@secondDigit
  1579                           refreshSevenSegment@secondDigit:	; 1 bytes @ 0x9
  1580  00000A                     	ds   1
  1581  00000A                     	global	refreshSevenSegment@idFirst
  1582                           refreshSevenSegment@idFirst:	; 1 bytes @ 0xA
  1583  00000B                     	ds   1
  1584  00000B                     	global	refreshSevenSegment@idSecond
  1585                           refreshSevenSegment@idSecond:	; 1 bytes @ 0xB
  1586  00000C                     	ds   1
  1587  00000C                     	global	refreshSevenSegment@currentVote
  1588                           refreshSevenSegment@currentVote:	; 1 bytes @ 0xC
  1589  00000D                     	ds   1
  1590  00000D                     ??_highISR:	; 1 bytes @ 0xD
  1591  00000E                     	ds   9
  1592  00000E                     	global	highISR@value
  1593                           highISR@value:	; 2 bytes @ 0x16
  1594  000017                     	ds   2
  1595  000017                     ??_ToggleEpinOfLCD:	; 1 bytes @ 0x18
  1596  000019                     ??_enableTimers:	; 1 bytes @ 0x18
  1597  000019                     ??_wait3s:	; 1 bytes @ 0x18
  1598  000019                     ??_decrementTime:	; 1 bytes @ 0x18
  1599  000019                     	global	?___awdiv
  1600                           ?___awdiv:	; 2 bytes @ 0x18
  1601  000019                     	global	?___awmod
  1602                           ?___awmod:	; 2 bytes @ 0x18
  1603  000019                     	global	wait3s@i
  1604                           wait3s@i:	; 1 bytes @ 0x18
  1605  000019                     	global	___awdiv@dividend
  1606                           ___awdiv@dividend:	; 2 bytes @ 0x18
  1607  000019                     	global	___awmod@dividend
  1608                           ___awmod@dividend:	; 2 bytes @ 0x18
  1609  000019                     	ds   1
  1610  000019                     ??_WriteCommandToLCD:	; 1 bytes @ 0x19
  1611  00001A                     ??_WriteDataToLCD:	; 1 bytes @ 0x19
  1612  00001A                     	global	wait3s@j
  1613                           wait3s@j:	; 1 bytes @ 0x19
  1614  00001A                     	global	WriteCommandToLCD@Command
  1615                           WriteCommandToLCD@Command:	; 1 bytes @ 0x19
  1616  00001A                     	global	WriteDataToLCD@LCDChar
  1617                           WriteDataToLCD@LCDChar:	; 1 bytes @ 0x19
  1618  00001A                     	ds   1
  1619  00001A                     ?_WriteStringToLCD:	; 1 bytes @ 0x1A
  1620  00001B                     ??_ClearLCDScreen:	; 1 bytes @ 0x1A
  1621  00001B                     ??_numToStringPrint:	; 1 bytes @ 0x1A
  1622  00001B                     	global	numToStringPrint@temp
  1623                           numToStringPrint@temp:	; 1 bytes @ 0x1A
  1624  00001B                     	global	wait3s@k
  1625                           wait3s@k:	; 1 bytes @ 0x1A
  1626  00001B                     	global	WriteStringToLCD@s
  1627                           WriteStringToLCD@s:	; 2 bytes @ 0x1A
  1628  00001B                     	global	___awdiv@divisor
  1629                           ___awdiv@divisor:	; 2 bytes @ 0x1A
  1630  00001B                     	global	___awmod@divisor
  1631                           ___awmod@divisor:	; 2 bytes @ 0x1A
  1632  00001B                     	ds   2
  1633  00001B                     ??_WriteStringToLCD:	; 1 bytes @ 0x1C
  1634  00001D                     ??_init1:	; 1 bytes @ 0x1C
  1635  00001D                     ??_refreshTimeLeft:	; 1 bytes @ 0x1C
  1636  00001D                     ??_init2:	; 1 bytes @ 0x1C
  1637  00001D                     ??___awdiv:	; 1 bytes @ 0x1C
  1638  00001D                     ??___awmod:	; 1 bytes @ 0x1C
  1639  00001D                     	global	refreshTimeLeft@temp
  1640                           refreshTimeLeft@temp:	; 1 bytes @ 0x1C
  1641  00001D                     	global	___awmod@counter
  1642                           ___awmod@counter:	; 1 bytes @ 0x1C
  1643  00001D                     	ds   1
  1644  00001D                     	global	___awmod@sign
  1645                           ___awmod@sign:	; 1 bytes @ 0x1D
  1646  00001E                     	ds   1
  1647  00001E                     ??_refreshPerson:	; 1 bytes @ 0x1E
  1648  00001F                     ??_main:	; 1 bytes @ 0x1E
  1649  00001F                     ;!
  1650                           ;!Data Sizes:
  1651                           ;!    Strings     14
  1652                           ;!    Constant    104
  1653                           ;!    Data        37
  1654                           ;!    BSS         27
  1655                           ;!    Persistent  0
  1656                           ;!    Stack       0
  1657                           ;!
  1658                           ;!Auto Spaces:
  1659                           ;!    Space          Size  Autos    Used
  1660                           ;!    COMRAM           94     30      70
  1661                           ;!    BANK0           160      8      32
  1662                           ;!    BANK1           256      0       0
  1663                           ;!    BANK2           256      0       0
  1664                           ;!    BANK3           256      0       0
  1665                           ;!    BANK4           256      0       0
  1666                           ;!    BANK5           256      0       0
  1667                           ;!    BANK6           256      0       0
  1668                           ;!    BANK7           256      0       0
  1669                           ;!    BANK8           256      0       0
  1670                           ;!    BANK9           256      0       0
  1671                           ;!    BANK10          256      0       0
  1672                           ;!    BANK11          256      0       0
  1673                           ;!    BANK12          256      0       0
  1674                           ;!    BANK13          256      0       0
  1675                           ;!    BANK14          256      0       0
  1676                           ;!    BANK15           96      0       0
  1677                           
  1678                           ;!
  1679                           ;!Pointer List with Targets:
  1680                           ;!
  1681                           ;!    WriteStringToLCD@s	PTR const unsigned char  size(2) Largest target is 56
  1682                           ;!		 -> enterVotersText(CODE[16]), names(CODE[56]), ids(BANK0[24]), STR_1(CODE[14]), 
  1683                           ;!		 -> emptyline(CODE[16]), electroVote(CODE[16]), 
  1684                           ;!
  1685                           
  1686                           
  1687                           ;!
  1688                           ;!Critical Paths under _main in COMRAM
  1689                           ;!
  1690                           ;!    _refreshTimeLeft->_WriteStringToLCD
  1691                           ;!    _refreshPerson->___awmod
  1692                           ;!    _init2->_WriteStringToLCD
  1693                           ;!    _numToStringPrint->_WriteCommandToLCD
  1694                           ;!    _numToStringPrint->_WriteDataToLCD
  1695                           ;!    _ClearLCDScreen->_WriteCommandToLCD
  1696                           ;!    _init1->_WriteStringToLCD
  1697                           ;!    _WriteStringToLCD->_WriteDataToLCD
  1698                           ;!    _WriteDataToLCD->_ToggleEpinOfLCD
  1699                           ;!    _WriteCommandToLCD->_ToggleEpinOfLCD
  1700                           ;!
  1701                           ;!Critical Paths under _highISR in COMRAM
  1702                           ;!
  1703                           ;!    _highISR->_refreshSevenSegment
  1704                           ;!    _refreshSevenSegment->i2___awdiv
  1705                           ;!
  1706                           ;!Critical Paths under _main in BANK0
  1707                           ;!
  1708                           ;!    _main->_refreshPerson
  1709                           ;!    _refreshPerson->___awdiv
  1710                           ;!
  1711                           ;!Critical Paths under _highISR in BANK0
  1712                           ;!
  1713                           ;!    None.
  1714                           ;!
  1715                           ;!Critical Paths under _main in BANK1
  1716                           ;!
  1717                           ;!    None.
  1718                           ;!
  1719                           ;!Critical Paths under _highISR in BANK1
  1720                           ;!
  1721                           ;!    None.
  1722                           ;!
  1723                           ;!Critical Paths under _main in BANK2
  1724                           ;!
  1725                           ;!    None.
  1726                           ;!
  1727                           ;!Critical Paths under _highISR in BANK2
  1728                           ;!
  1729                           ;!    None.
  1730                           ;!
  1731                           ;!Critical Paths under _main in BANK3
  1732                           ;!
  1733                           ;!    None.
  1734                           ;!
  1735                           ;!Critical Paths under _highISR in BANK3
  1736                           ;!
  1737                           ;!    None.
  1738                           ;!
  1739                           ;!Critical Paths under _main in BANK4
  1740                           ;!
  1741                           ;!    None.
  1742                           ;!
  1743                           ;!Critical Paths under _highISR in BANK4
  1744                           ;!
  1745                           ;!    None.
  1746                           ;!
  1747                           ;!Critical Paths under _main in BANK5
  1748                           ;!
  1749                           ;!    None.
  1750                           ;!
  1751                           ;!Critical Paths under _highISR in BANK5
  1752                           ;!
  1753                           ;!    None.
  1754                           ;!
  1755                           ;!Critical Paths under _main in BANK6
  1756                           ;!
  1757                           ;!    None.
  1758                           ;!
  1759                           ;!Critical Paths under _highISR in BANK6
  1760                           ;!
  1761                           ;!    None.
  1762                           ;!
  1763                           ;!Critical Paths under _main in BANK7
  1764                           ;!
  1765                           ;!    None.
  1766                           ;!
  1767                           ;!Critical Paths under _highISR in BANK7
  1768                           ;!
  1769                           ;!    None.
  1770                           ;!
  1771                           ;!Critical Paths under _main in BANK8
  1772                           ;!
  1773                           ;!    None.
  1774                           ;!
  1775                           ;!Critical Paths under _highISR in BANK8
  1776                           ;!
  1777                           ;!    None.
  1778                           ;!
  1779                           ;!Critical Paths under _main in BANK9
  1780                           ;!
  1781                           ;!    None.
  1782                           ;!
  1783                           ;!Critical Paths under _highISR in BANK9
  1784                           ;!
  1785                           ;!    None.
  1786                           ;!
  1787                           ;!Critical Paths under _main in BANK10
  1788                           ;!
  1789                           ;!    None.
  1790                           ;!
  1791                           ;!Critical Paths under _highISR in BANK10
  1792                           ;!
  1793                           ;!    None.
  1794                           ;!
  1795                           ;!Critical Paths under _main in BANK11
  1796                           ;!
  1797                           ;!    None.
  1798                           ;!
  1799                           ;!Critical Paths under _highISR in BANK11
  1800                           ;!
  1801                           ;!    None.
  1802                           ;!
  1803                           ;!Critical Paths under _main in BANK12
  1804                           ;!
  1805                           ;!    None.
  1806                           ;!
  1807                           ;!Critical Paths under _highISR in BANK12
  1808                           ;!
  1809                           ;!    None.
  1810                           ;!
  1811                           ;!Critical Paths under _main in BANK13
  1812                           ;!
  1813                           ;!    None.
  1814                           ;!
  1815                           ;!Critical Paths under _highISR in BANK13
  1816                           ;!
  1817                           ;!    None.
  1818                           ;!
  1819                           ;!Critical Paths under _main in BANK14
  1820                           ;!
  1821                           ;!    None.
  1822                           ;!
  1823                           ;!Critical Paths under _highISR in BANK14
  1824                           ;!
  1825                           ;!    None.
  1826                           ;!
  1827                           ;!Critical Paths under _main in BANK15
  1828                           ;!
  1829                           ;!    None.
  1830                           ;!
  1831                           ;!Critical Paths under _highISR in BANK15
  1832                           ;!
  1833                           ;!    None.
  1834                           
  1835 ;;
  1836 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1837 ;;
  1838                           
  1839                           ;!
  1840                           ;!Call Graph Tables:
  1841                           ;!
  1842                           ;! ---------------------------------------------------------------------------------
  1843                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1844                           ;! ---------------------------------------------------------------------------------
  1845                           ;! (0) _main                                                 0     0      0    5388
  1846                           ;!                  _WriteCommandToLCD
  1847                           ;!                     _WriteDataToLCD
  1848                           ;!                      _decrementTime
  1849                           ;!                       _enableTimers
  1850                           ;!                              _init1
  1851                           ;!                              _init2
  1852                           ;!                   _numToStringPrint
  1853                           ;!                      _refreshPerson
  1854                           ;!                    _refreshTimeLeft
  1855                           ;!                             _wait3s
  1856                           ;! ---------------------------------------------------------------------------------
  1857                           ;! (1) _wait3s                                               3     3      0      45
  1858                           ;!                                             24 COMRAM     3     3      0
  1859                           ;! ---------------------------------------------------------------------------------
  1860                           ;! (1) _refreshTimeLeft                                      1     1      0     859
  1861                           ;!                                             28 COMRAM     1     1      0
  1862                           ;!                  _WriteCommandToLCD
  1863                           ;!                     _WriteDataToLCD
  1864                           ;!                   _WriteStringToLCD
  1865                           ;! ---------------------------------------------------------------------------------
  1866                           ;! (1) _refreshPerson                                        4     4      0    2456
  1867                           ;!                                              4 BANK0      4     4      0
  1868                           ;!                  _WriteCommandToLCD
  1869                           ;!                     _WriteDataToLCD
  1870                           ;!                   _WriteStringToLCD
  1871                           ;!                            ___awdiv
  1872                           ;!                            ___awmod
  1873                           ;! ---------------------------------------------------------------------------------
  1874                           ;! (2) ___awmod                                              6     2      4     723
  1875                           ;!                                             24 COMRAM     6     2      4
  1876                           ;! ---------------------------------------------------------------------------------
  1877                           ;! (2) ___awdiv                                              8     4      4     735
  1878                           ;!                                             24 COMRAM     4     0      4
  1879                           ;!                                              0 BANK0      4     4      0
  1880                           ;! ---------------------------------------------------------------------------------
  1881                           ;! (1) _init2                                                0     0      0     983
  1882                           ;!                     _ClearLCDScreen
  1883                           ;!                  _WriteCommandToLCD
  1884                           ;!                   _WriteStringToLCD
  1885                           ;!                   _numToStringPrint
  1886                           ;! ---------------------------------------------------------------------------------
  1887                           ;! (1) _numToStringPrint                                     1     1      0     192
  1888                           ;!                                             26 COMRAM     1     1      0
  1889                           ;!                  _WriteCommandToLCD
  1890                           ;!                     _WriteDataToLCD
  1891                           ;! ---------------------------------------------------------------------------------
  1892                           ;! (2) _ClearLCDScreen                                       1     1      0      62
  1893                           ;!                                             26 COMRAM     1     1      0
  1894                           ;!                  _WriteCommandToLCD
  1895                           ;! ---------------------------------------------------------------------------------
  1896                           ;! (1) _init1                                                1     1      0     729
  1897                           ;!                                             28 COMRAM     1     1      0
  1898                           ;!                    _ToggleEpinOfLCD
  1899                           ;!                  _WriteCommandToLCD
  1900                           ;!                   _WriteStringToLCD
  1901                           ;! ---------------------------------------------------------------------------------
  1902                           ;! (2) _WriteStringToLCD                                     2     0      2     667
  1903                           ;!                                             26 COMRAM     2     0      2
  1904                           ;!                     _WriteDataToLCD
  1905                           ;! ---------------------------------------------------------------------------------
  1906                           ;! (3) _WriteDataToLCD                                       1     1      0      62
  1907                           ;!                                             25 COMRAM     1     1      0
  1908                           ;!                    _ToggleEpinOfLCD
  1909                           ;! ---------------------------------------------------------------------------------
  1910                           ;! (2) _WriteCommandToLCD                                    1     1      0      62
  1911                           ;!                                             25 COMRAM     1     1      0
  1912                           ;!                    _ToggleEpinOfLCD
  1913                           ;! ---------------------------------------------------------------------------------
  1914                           ;! (4) _ToggleEpinOfLCD                                      1     1      0       0
  1915                           ;!                                             24 COMRAM     1     1      0
  1916                           ;! ---------------------------------------------------------------------------------
  1917                           ;! (1) _enableTimers                                         0     0      0       0
  1918                           ;! ---------------------------------------------------------------------------------
  1919                           ;! (1) _decrementTime                                        0     0      0       0
  1920                           ;! ---------------------------------------------------------------------------------
  1921                           ;! Estimated maximum stack depth 4
  1922                           ;! ---------------------------------------------------------------------------------
  1923                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1924                           ;! ---------------------------------------------------------------------------------
  1925                           ;! (5) _highISR                                             11    11      0     898
  1926                           ;!                                             13 COMRAM    11    11      0
  1927                           ;!                          _enableADC
  1928                           ;!                     _incrementDigit
  1929                           ;!                _refreshSevenSegment
  1930                           ;! ---------------------------------------------------------------------------------
  1931                           ;! (6) _refreshSevenSegment                                  5     5      0     845
  1932                           ;!                                              8 COMRAM     5     5      0
  1933                           ;!                          i2___awdiv
  1934                           ;!                          i2___awmod
  1935                           ;! ---------------------------------------------------------------------------------
  1936                           ;! (7) i2___awmod                                            6     2      4     348
  1937                           ;!                                              0 COMRAM     6     2      4
  1938                           ;! ---------------------------------------------------------------------------------
  1939                           ;! (7) i2___awdiv                                            8     4      4     352
  1940                           ;!                                              0 COMRAM     8     4      4
  1941                           ;! ---------------------------------------------------------------------------------
  1942                           ;! (6) _incrementDigit                                       1     1      0      30
  1943                           ;!                                              0 COMRAM     1     1      0
  1944                           ;! ---------------------------------------------------------------------------------
  1945                           ;! (6) _enableADC                                            0     0      0       0
  1946                           ;! ---------------------------------------------------------------------------------
  1947                           ;! Estimated maximum stack depth 7
  1948                           ;! ---------------------------------------------------------------------------------
  1949                           ;!
  1950                           ;! Call Graph Graphs:
  1951                           ;!
  1952                           ;! _main (ROOT)
  1953                           ;!   _WriteCommandToLCD
  1954                           ;!     _ToggleEpinOfLCD
  1955                           ;!   _WriteDataToLCD
  1956                           ;!     _ToggleEpinOfLCD
  1957                           ;!   _decrementTime
  1958                           ;!   _enableTimers
  1959                           ;!   _init1
  1960                           ;!     _ToggleEpinOfLCD
  1961                           ;!     _WriteCommandToLCD
  1962                           ;!       _ToggleEpinOfLCD
  1963                           ;!     _WriteStringToLCD
  1964                           ;!       _WriteDataToLCD
  1965                           ;!         _ToggleEpinOfLCD
  1966                           ;!   _init2
  1967                           ;!     _ClearLCDScreen
  1968                           ;!       _WriteCommandToLCD
  1969                           ;!         _ToggleEpinOfLCD
  1970                           ;!     _WriteCommandToLCD
  1971                           ;!       _ToggleEpinOfLCD
  1972                           ;!     _WriteStringToLCD
  1973                           ;!       _WriteDataToLCD
  1974                           ;!         _ToggleEpinOfLCD
  1975                           ;!     _numToStringPrint
  1976                           ;!       _WriteCommandToLCD
  1977                           ;!         _ToggleEpinOfLCD
  1978                           ;!       _WriteDataToLCD
  1979                           ;!         _ToggleEpinOfLCD
  1980                           ;!   _numToStringPrint
  1981                           ;!     _WriteCommandToLCD
  1982                           ;!       _ToggleEpinOfLCD
  1983                           ;!     _WriteDataToLCD
  1984                           ;!       _ToggleEpinOfLCD
  1985                           ;!   _refreshPerson
  1986                           ;!     _WriteCommandToLCD
  1987                           ;!       _ToggleEpinOfLCD
  1988                           ;!     _WriteDataToLCD
  1989                           ;!       _ToggleEpinOfLCD
  1990                           ;!     _WriteStringToLCD
  1991                           ;!       _WriteDataToLCD
  1992                           ;!         _ToggleEpinOfLCD
  1993                           ;!     ___awdiv
  1994                           ;!     ___awmod
  1995                           ;!   _refreshTimeLeft
  1996                           ;!     _WriteCommandToLCD
  1997                           ;!       _ToggleEpinOfLCD
  1998                           ;!     _WriteDataToLCD
  1999                           ;!       _ToggleEpinOfLCD
  2000                           ;!     _WriteStringToLCD
  2001                           ;!       _WriteDataToLCD
  2002                           ;!         _ToggleEpinOfLCD
  2003                           ;!   _wait3s
  2004                           ;!
  2005                           ;! _highISR (ROOT)
  2006                           ;!   _enableADC
  2007                           ;!   _incrementDigit
  2008                           ;!   _refreshSevenSegment
  2009                           ;!     i2___awdiv
  2010                           ;!     i2___awmod
  2011                           ;!
  2012                           
  2013                           ;! Address spaces:
  2014                           
  2015                           ;!Name               Size   Autos  Total    Cost      Usage
  2016                           ;!BIGRAM             F5F      0       0      37        0.0%
  2017                           ;!EEDATA             400      0       0       0        0.0%
  2018                           ;!BITBANK14          100      0       0      33        0.0%
  2019                           ;!BANK14             100      0       0      34        0.0%
  2020                           ;!BITBANK13          100      0       0      30        0.0%
  2021                           ;!BANK13             100      0       0      31        0.0%
  2022                           ;!BITBANK12          100      0       0      28        0.0%
  2023                           ;!BANK12             100      0       0      29        0.0%
  2024                           ;!BITBANK11          100      0       0      26        0.0%
  2025                           ;!BANK11             100      0       0      27        0.0%
  2026                           ;!BITBANK10          100      0       0      24        0.0%
  2027                           ;!BANK10             100      0       0      25        0.0%
  2028                           ;!BITBANK9           100      0       0      22        0.0%
  2029                           ;!BANK9              100      0       0      23        0.0%
  2030                           ;!BITBANK8           100      0       0      20        0.0%
  2031                           ;!BANK8              100      0       0      21        0.0%
  2032                           ;!BITBANK7           100      0       0      18        0.0%
  2033                           ;!BANK7              100      0       0      19        0.0%
  2034                           ;!BITBANK6           100      0       0      16        0.0%
  2035                           ;!BANK6              100      0       0      17        0.0%
  2036                           ;!BITBANK5           100      0       0      14        0.0%
  2037                           ;!BANK5              100      0       0      15        0.0%
  2038                           ;!BITBANK4           100      0       0      12        0.0%
  2039                           ;!BANK4              100      0       0      13        0.0%
  2040                           ;!BITBANK3           100      0       0      10        0.0%
  2041                           ;!BANK3              100      0       0      11        0.0%
  2042                           ;!BITBANK2           100      0       0       8        0.0%
  2043                           ;!BANK2              100      0       0       9        0.0%
  2044                           ;!BITBANK1           100      0       0       6        0.0%
  2045                           ;!BANK1              100      0       0       7        0.0%
  2046                           ;!BITBANK0            A0      0       0       4        0.0%
  2047                           ;!BANK0               A0      8      20       5       20.0%
  2048                           ;!BITBANK15           60      0       0      35        0.0%
  2049                           ;!BANK15              60      0       0      36        0.0%
  2050                           ;!BITCOMRAM           5E      0       0       0        0.0%
  2051                           ;!COMRAM              5E     1E      46       1       74.5%
  2052                           ;!BITSFR               0      0       0     200        0.0%
  2053                           ;!SFR                  0      0       0     200        0.0%
  2054                           ;!STACK                0      0       0       2        0.0%
  2055                           ;!NULL                 0      0       0       0        0.0%
  2056                           ;!ABS                  0      0      66      32        0.0%
  2057                           ;!DATA                 0      0      66       3        0.0%
  2058                           ;!CODE                 0      0       0       0        0.0%
  2059                           
  2060                           	global	_main
  2061                           
  2062 ;; *************** function _main *****************
  2063 ;; Defined at:
  2064 ;;		line 394 in file "main.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;		None
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;		None
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      void 
  2071 ;; Registers used:
  2072 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  2078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2082 ;;Total ram usage:        0 bytes
  2083 ;; Hardware stack levels required when called:    7
  2084 ;; This function calls:
  2085 ;;		_WriteCommandToLCD
  2086 ;;		_WriteDataToLCD
  2087 ;;		_decrementTime
  2088 ;;		_enableTimers
  2089 ;;		_init1
  2090 ;;		_init2
  2091 ;;		_numToStringPrint
  2092 ;;		_refreshPerson
  2093 ;;		_refreshTimeLeft
  2094 ;;		_wait3s
  2095 ;; This function is called by:
  2096 ;;		Startup code after reset
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           psect	text0,class=CODE,space=0,reloc=2,group=0
  2100                           	file	"main.c"
  2101                           	line	394
  2102                           global __ptext0
  2103                           __ptext0:
  2104  001676                     psect	text0
  2105                           	file	"main.c"
  2106                           	line	394
  2107                           	global	__size_of_main
  2108                           	__size_of_main	equ	__end_of_main-_main
  2109  0000                     	
  2110                           _main:
  2111  001676                     ;incstack = 0
  2112                           	opt	stack 24
  2113                           	line	396
  2114                           	
  2115                           l2630:
  2116  001676                     ;main.c: 396:     init1();
  2117                           	call	_init1	;wreg free
  2118  001676  ECC2  F009         	line	397
  2119                           ;main.c: 397:     while(!RE1);
  2120                           	goto	l261
  2121  00167A  EF3F  F00B         	
  2122                           l262:
  2123  00167E                     	
  2124                           l261:
  2125  00167E                     	btfss	c:(31777/8),(31777)&7	;volatile
  2126  00167E  A284               	goto	u1661
  2127  001680  EF44  F00B         	goto	u1660
  2128  001684  EF46  F00B         u1661:
  2129  001688                     	goto	l261
  2130  001688  EF3F  F00B         u1660:
  2131  00168C                     	goto	l264
  2132  00168C  EF4A  F00B         	
  2133                           l263:
  2134  001690                     	line	398
  2135                           ;main.c: 398:     while(RE1);
  2136                           	goto	l264
  2137  001690  EF4A  F00B         	
  2138                           l265:
  2139  001694                     	
  2140                           l264:
  2141  001694                     	btfsc	c:(31777/8),(31777)&7	;volatile
  2142  001694  B284               	goto	u1671
  2143  001696  EF4F  F00B         	goto	u1670
  2144  00169A  EF51  F00B         u1671:
  2145  00169E                     	goto	l264
  2146  00169E  EF4A  F00B         u1670:
  2147  0016A2                     	goto	l2632
  2148  0016A2  EF53  F00B         	
  2149                           l266:
  2150  0016A6                     	line	399
  2151                           	
  2152                           l2632:
  2153  0016A6                     ;main.c: 399:     wait3s();
  2154                           	call	_wait3s	;wreg free
  2155  0016A6  EC01  F00E         	line	400
  2156                           	
  2157                           l2634:
  2158  0016AA                     ;main.c: 400:     init2();
  2159                           	call	_init2	;wreg free
  2160  0016AA  ECBB  F00E         	goto	l2636
  2161  0016AE  EF59  F00B         	line	402
  2162                           ;main.c: 402:     while(1)
  2163                           	
  2164                           l267:
  2165  0016B2                     	line	404
  2166                           	
  2167                           l2636:
  2168  0016B2                     ;main.c: 403:     {;main.c: 404:         if(numToStringPrintFlag)
  2169                           	movf	((c:_numToStringPrintFlag)),c,w	;volatile
  2170  0016B2  5037               	btfsc	status,2
  2171  0016B4  B4D8               	goto	u1681
  2172  0016B6  EF5F  F00B         	goto	u1680
  2173  0016BA  EF61  F00B         u1681:
  2174  0016BE                     	goto	l2642
  2175  0016BE  EF67  F00B         u1680:
  2176  0016C2                     	line	406
  2177                           	
  2178                           l2638:
  2179  0016C2                     ;main.c: 405:         {;main.c: 406:             numToStringPrint();
  2180                           	call	_numToStringPrint	;wreg free
  2181  0016C2  EC30  F00F         	line	407
  2182                           	
  2183                           l2640:
  2184  0016C6                     ;main.c: 407:             numToStringPrintFlag=0;
  2185                           	movlw	low(0)
  2186  0016C6  0E00               	movwf	((c:_numToStringPrintFlag)),c	;volatile
  2187  0016C8  6E37               	goto	l2642
  2188  0016CA  EF67  F00B         	line	408
  2189                           ;main.c: 408:         }
  2190                           	
  2191                           l268:
  2192  0016CE                     	line	410
  2193                           	
  2194                           l2642:
  2195  0016CE                     ;main.c: 410:         if(digitStage==2)
  2196                           		movlw	2
  2197  0016CE  0E02               	xorwf	((c:_digitStage)),c,w	;volatile
  2198  0016D0  182E               	btfss	status,2
  2199  0016D2  A4D8               	goto	u1691
  2200  0016D4  EF6E  F00B         	goto	u1690
  2201  0016D8  EF70  F00B         
  2202                           u1691:
  2203  0016DC                     	goto	l2636
  2204  0016DC  EF59  F00B         u1690:
  2205  0016E0                     	line	412
  2206                           	
  2207                           l2644:
  2208  0016E0                     ;main.c: 411:         {;main.c: 412:             enableTimers();
  2209                           	call	_enableTimers	;wreg free
  2210  0016E0  EC43  F00F         	line	414
  2211                           ;main.c: 414:             break;
  2212                           	goto	l2646
  2213  0016E4  EF7A  F00B         	line	415
  2214                           ;main.c: 415:         }
  2215                           	
  2216                           l269:
  2217  0016E8                     	goto	l2636
  2218  0016E8  EF59  F00B         	line	416
  2219                           ;main.c: 416:     }
  2220                           	
  2221                           l271:
  2222  0016EC                     	goto	l2636
  2223  0016EC  EF59  F00B         	
  2224                           l270:
  2225  0016F0                     	goto	l2646
  2226  0016F0  EF7A  F00B         	line	417
  2227                           ;main.c: 417:     while(1)
  2228                           	
  2229                           l272:
  2230  0016F4                     	line	419
  2231                           	
  2232                           l2646:
  2233  0016F4                     ;main.c: 418:     {;main.c: 419:         if(timer1Flag==1)
  2234                           		decf	((c:_timer1Flag)),c,w	;volatile
  2235  0016F4  0438               	btfss	status,2
  2236  0016F6  A4D8               	goto	u1701
  2237  0016F8  EF80  F00B         	goto	u1700
  2238  0016FC  EF82  F00B         
  2239                           u1701:
  2240  001700                     	goto	l2654
  2241  001700  EF8A  F00B         u1700:
  2242  001704                     	line	421
  2243                           	
  2244                           l2648:
  2245  001704                     ;main.c: 420:         {;main.c: 421:             decrementTime();
  2246                           	call	_decrementTime	;wreg free
  2247  001704  EC9C  F00E         	line	422
  2248                           	
  2249                           l2650:
  2250  001708                     ;main.c: 422:             refreshTimeLeft();
  2251                           	call	_refreshTimeLeft	;wreg free
  2252  001708  ECD9  F00E         	line	423
  2253                           	
  2254                           l2652:
  2255  00170C                     ;main.c: 423:             timer1Flag=0;
  2256                           	movlw	low(0)
  2257  00170C  0E00               	movwf	((c:_timer1Flag)),c	;volatile
  2258  00170E  6E38               	goto	l2654
  2259  001710  EF8A  F00B         	line	424
  2260                           ;main.c: 424:         }
  2261                           	
  2262                           l273:
  2263  001714                     	line	425
  2264                           	
  2265                           l2654:
  2266  001714                     ;main.c: 425:         if(timer0Flag==1)
  2267                           		decf	((c:_timer0Flag)),c,w	;volatile
  2268  001714  0435               	btfss	status,2
  2269  001716  A4D8               	goto	u1711
  2270  001718  EF90  F00B         	goto	u1710
  2271  00171C  EF92  F00B         
  2272                           u1711:
  2273  001720                     	goto	l2666
  2274  001720  EFB0  F00B         u1710:
  2275  001724                     	line	427
  2276                           	
  2277                           l2656:
  2278  001724                     ;main.c: 426:         {;main.c: 427:             if(blinkStatus)
  2279                           	movf	((c:_blinkStatus)),c,w	;volatile
  2280  001724  5032               	btfsc	status,2
  2281  001726  B4D8               	goto	u1721
  2282  001728  EF98  F00B         	goto	u1720
  2283  00172C  EF9A  F00B         u1721:
  2284  001730                     	goto	l2662
  2285  001730  EFA4  F00B         u1720:
  2286  001734                     	line	429
  2287                           	
  2288                           l2658:
  2289  001734                     ;main.c: 428:                 {;main.c: 429:                    WriteCommandToLCD(0xC1);
                                 
  2290                           	movlw	(0C1h)&0ffh
  2291  001734  0EC1               	
  2292                           	call	_WriteCommandToLCD
  2293  001736  EC05  F00F         	line	430
  2294                           ;main.c: 430:                    WriteDataToLCD('>');
  2295                           	movlw	(03Eh)&0ffh
  2296  00173A  0E3E               	
  2297                           	call	_WriteDataToLCD
  2298  00173C  ECEF  F00E         	line	431
  2299                           	
  2300                           l2660:
  2301  001740                     ;main.c: 431:                    blinkStatus=0x00;
  2302                           	movlw	low(0)
  2303  001740  0E00               	movwf	((c:_blinkStatus)),c	;volatile
  2304  001742  6E32               	line	432
  2305                           ;main.c: 432:                 }
  2306                           	goto	l2666
  2307  001744  EFB0  F00B         	line	433
  2308                           ;main.c: 433:             else
  2309                           	
  2310                           l275:
  2311  001748                     	line	435
  2312                           	
  2313                           l2662:
  2314  001748                     ;main.c: 434:                 {;main.c: 435:                    WriteCommandToLCD(0xC1);
                                 
  2315                           	movlw	(0C1h)&0ffh
  2316  001748  0EC1               	
  2317                           	call	_WriteCommandToLCD
  2318  00174A  EC05  F00F         	line	436
  2319                           ;main.c: 436:                    WriteDataToLCD(' ');
  2320                           	movlw	(020h)&0ffh
  2321  00174E  0E20               	
  2322                           	call	_WriteDataToLCD
  2323  001750  ECEF  F00E         	line	437
  2324                           	
  2325                           l2664:
  2326  001754                     ;main.c: 437:                    blinkStatus=0x01;
  2327                           	movlw	low(01h)
  2328  001754  0E01               	movwf	((c:_blinkStatus)),c	;volatile
  2329  001756  6E32               	goto	l2666
  2330  001758  EFB0  F00B         	line	438
  2331                           ;main.c: 438:                 }
  2332                           	
  2333                           l276:
  2334  00175C                     	goto	l2666
  2335  00175C  EFB0  F00B         	line	439
  2336                           ;main.c: 439:         }
  2337                           	
  2338                           l274:
  2339  001760                     	line	441
  2340                           	
  2341                           l2666:
  2342  001760                     ;main.c: 441:         if(refreshPersonFlag==1)
  2343                           		decf	((c:_refreshPersonFlag)),c,w	;volatile
  2344  001760  0436               	btfss	status,2
  2345  001762  A4D8               	goto	u1731
  2346  001764  EFB6  F00B         	goto	u1730
  2347  001768  EFB8  F00B         
  2348                           u1731:
  2349  00176C                     	goto	l2672
  2350  00176C  EFBE  F00B         u1730:
  2351  001770                     	line	443
  2352                           	
  2353                           l2668:
  2354  001770                     ;main.c: 442:         {;main.c: 443:             refreshPerson();
  2355                           	call	_refreshPerson	;wreg free
  2356  001770  ECAC  F00D         	line	444
  2357                           	
  2358                           l2670:
  2359  001774                     ;main.c: 444:             refreshPersonFlag=0;
  2360                           	movlw	low(0)
  2361  001774  0E00               	movwf	((c:_refreshPersonFlag)),c	;volatile
  2362  001776  6E36               	goto	l2672
  2363  001778  EFBE  F00B         	line	445
  2364                           ;main.c: 445:         }
  2365                           	
  2366                           l277:
  2367  00177C                     	line	446
  2368                           	
  2369                           l2672:
  2370  00177C                     ;main.c: 446:         if(voteEnds==1)
  2371                           		decf	((c:_voteEnds)),c,w	;volatile
  2372  00177C  042C               	btfss	status,2
  2373  00177E  A4D8               	goto	u1741
  2374  001780  EFC4  F00B         	goto	u1740
  2375  001784  EFC6  F00B         
  2376                           u1741:
  2377  001788                     	goto	l2646
  2378  001788  EF7A  F00B         u1740:
  2379  00178C                     	goto	l279
  2380  00178C  EFCE  F00B         	line	448
  2381                           	
  2382                           l2674:
  2383  001790                     ;main.c: 447:         {;main.c: 448:             break;
  2384                           	goto	l279
  2385  001790  EFCE  F00B         	line	449
  2386                           ;main.c: 449:         }
  2387                           	
  2388                           l278:
  2389  001794                     	goto	l2646
  2390  001794  EF7A  F00B         	line	450
  2391                           ;main.c: 450:     }
  2392                           	
  2393                           l280:
  2394  001798                     	goto	l2646
  2395  001798  EF7A  F00B         	
  2396                           l279:
  2397  00179C                     	line	451
  2398                           ;main.c: 451:     TMR1IE = 0;
  2399                           	bcf	c:(31976/8),(31976)&7	;volatile
  2400  00179C  909D               	line	452
  2401                           	
  2402                           l2676:
  2403  00179E                     ;main.c: 452:     PORTB;
  2404                           	movf	((c:3969)),c,w	;volatile
  2405  00179E  5081               	line	453
  2406                           	
  2407                           l2678:
  2408  0017A0                     ;main.c: 453:     RBIE = 0;
  2409                           	bcf	c:(32659/8),(32659)&7	;volatile
  2410  0017A0  96F2               	goto	l2680
  2411  0017A2  EFD3  F00B         	line	454
  2412                           ;main.c: 454:     while(1){
  2413                           	
  2414                           l281:
  2415  0017A6                     	line	455
  2416                           	
  2417                           l2680:
  2418  0017A6                     ;main.c: 455:         if(refreshPersonFlag==1)
  2419                           		decf	((c:_refreshPersonFlag)),c,w	;volatile
  2420  0017A6  0436               	btfss	status,2
  2421  0017A8  A4D8               	goto	u1751
  2422  0017AA  EFD9  F00B         	goto	u1750
  2423  0017AE  EFDB  F00B         
  2424                           u1751:
  2425  0017B2                     	goto	l2680
  2426  0017B2  EFD3  F00B         u1750:
  2427  0017B6                     	line	457
  2428                           	
  2429                           l2682:
  2430  0017B6                     ;main.c: 456:         {;main.c: 457:             refreshPerson();
  2431                           	call	_refreshPerson	;wreg free
  2432  0017B6  ECAC  F00D         	line	458
  2433                           	
  2434                           l2684:
  2435  0017BA                     ;main.c: 458:             refreshPersonFlag=0;
  2436                           	movlw	low(0)
  2437  0017BA  0E00               	movwf	((c:_refreshPersonFlag)),c	;volatile
  2438  0017BC  6E36               	goto	l2680
  2439  0017BE  EFD3  F00B         	line	459
  2440                           ;main.c: 459:         }
  2441                           	
  2442                           l282:
  2443  0017C2                     	goto	l2680
  2444  0017C2  EFD3  F00B         	line	461
  2445                           ;main.c: 461:     }
  2446                           	
  2447                           l283:
  2448  0017C6                     	goto	l2680
  2449  0017C6  EFD3  F00B         	
  2450                           l284:
  2451  0017CA                     	line	464
  2452                           	
  2453                           l285:
  2454  0017CA                     	global	start
  2455                           	goto	start
  2456  0017CA  EF07  F000         	opt stack 0
  2457                           GLOBAL	__end_of_main
  2458                           	__end_of_main:
  2459  0017CE                     	signat	_main,89
  2460                           	global	_wait3s
  2461                           
  2462 ;; *************** function _wait3s *****************
  2463 ;; Defined at:
  2464 ;;		line 242 in file "main.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;		None
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;  k               1   26[COMRAM] unsigned char 
  2469 ;;  j               1   25[COMRAM] unsigned char 
  2470 ;;  i               1   24[COMRAM] unsigned char 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, status,0
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  2480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2481 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2483 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2484 ;;Total ram usage:        3 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    3
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		_main
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           psect	text1,class=CODE,space=0,reloc=2,group=0
  2494                           	line	242
  2495                           global __ptext1
  2496                           __ptext1:
  2497  001C02                     psect	text1
  2498                           	file	"main.c"
  2499                           	line	242
  2500                           	global	__size_of_wait3s
  2501                           	__size_of_wait3s	equ	__end_of_wait3s-_wait3s
  2502  0000                     	
  2503                           _wait3s:
  2504  001C02                     ;incstack = 0
  2505                           	opt	stack 27
  2506                           	line	243
  2507                           	
  2508                           l1456:
  2509  001C02                     ;main.c: 243:     unsigned char i=0;
  2510                           	movlw	low(0)
  2511  001C02  0E00               	movwf	((c:wait3s@i)),c
  2512  001C04  6E19               	line	244
  2513                           ;main.c: 244:     unsigned char j=0;
  2514                           	movlw	low(0)
  2515  001C06  0E00               	movwf	((c:wait3s@j)),c
  2516  001C08  6E1A               	line	245
  2517                           ;main.c: 245:     unsigned char k=0;
  2518                           	movlw	low(0)
  2519  001C0A  0E00               	movwf	((c:wait3s@k)),c
  2520  001C0C  6E1B               	line	246
  2521                           ;main.c: 246:     while (i < 60){
  2522                           	goto	l1472
  2523  001C0E  EF2F  F00E         	
  2524                           l209:
  2525  001C12                     	line	247
  2526                           	
  2527                           l1458:
  2528  001C12                     ;main.c: 247:         j=0;
  2529                           	movlw	low(0)
  2530  001C12  0E00               	movwf	((c:wait3s@j)),c
  2531  001C14  6E1A               	line	248
  2532                           ;main.c: 248:         while (j < 200) {
  2533                           	goto	l1468
  2534  001C16  EF22  F00E         	
  2535                           l211:
  2536  001C1A                     	line	249
  2537                           	
  2538                           l1460:
  2539  001C1A                     ;main.c: 249:             k=0;
  2540                           	movlw	low(0)
  2541  001C1A  0E00               	movwf	((c:wait3s@k)),c
  2542  001C1C  6E1B               	line	250
  2543                           ;main.c: 250:             while(k < 250) {
  2544                           	goto	l1464
  2545  001C1E  EF15  F00E         	
  2546                           l213:
  2547  001C22                     	line	251
  2548                           # 251 "main.c"
  2549                           NOP ;# 
  2550  001C22  F000               psect	text1
  2551                           	line	252
  2552                           	
  2553                           l1462:
  2554  001C24                     ;main.c: 252:                 k++;
  2555                           	incf	((c:wait3s@k)),c
  2556  001C24  2A1B               	goto	l1464
  2557  001C26  EF15  F00E         	line	253
  2558                           ;main.c: 253:             }
  2559                           	
  2560                           l212:
  2561  001C2A                     	line	250
  2562                           	
  2563                           l1464:
  2564  001C2A                     ;main.c: 250:             while(k < 250) {
  2565                           		movlw	0FAh-1
  2566  001C2A  0EF9               	cpfsgt	((c:wait3s@k)),c
  2567  001C2C  641B               	goto	u351
  2568  001C2E  EF1B  F00E         	goto	u350
  2569  001C32  EF1D  F00E         
  2570                           u351:
  2571  001C36                     	goto	l213
  2572  001C36  EF11  F00E         u350:
  2573  001C3A                     	goto	l1466
  2574  001C3A  EF1F  F00E         	
  2575                           l214:
  2576  001C3E                     	line	254
  2577                           	
  2578                           l1466:
  2579  001C3E                     ;main.c: 254:             j++;
  2580                           	incf	((c:wait3s@j)),c
  2581  001C3E  2A1A               	goto	l1468
  2582  001C40  EF22  F00E         	line	255
  2583                           ;main.c: 255:         }
  2584                           	
  2585                           l210:
  2586  001C44                     	line	248
  2587                           	
  2588                           l1468:
  2589  001C44                     ;main.c: 248:         while (j < 200) {
  2590                           		movlw	0C8h-1
  2591  001C44  0EC7               	cpfsgt	((c:wait3s@j)),c
  2592  001C46  641A               	goto	u361
  2593  001C48  EF28  F00E         	goto	u360
  2594  001C4C  EF2A  F00E         
  2595                           u361:
  2596  001C50                     	goto	l1460
  2597  001C50  EF0D  F00E         u360:
  2598  001C54                     	goto	l1470
  2599  001C54  EF2C  F00E         	
  2600                           l215:
  2601  001C58                     	line	256
  2602                           	
  2603                           l1470:
  2604  001C58                     ;main.c: 256:         i++;
  2605                           	incf	((c:wait3s@i)),c
  2606  001C58  2A19               	goto	l1472
  2607  001C5A  EF2F  F00E         	line	257
  2608                           ;main.c: 257:     }
  2609                           	
  2610                           l208:
  2611  001C5E                     	line	246
  2612                           	
  2613                           l1472:
  2614  001C5E                     ;main.c: 246:     while (i < 60){
  2615                           		movlw	03Ch-1
  2616  001C5E  0E3B               	cpfsgt	((c:wait3s@i)),c
  2617  001C60  6419               	goto	u371
  2618  001C62  EF35  F00E         	goto	u370
  2619  001C66  EF37  F00E         
  2620                           u371:
  2621  001C6A                     	goto	l1458
  2622  001C6A  EF09  F00E         u370:
  2623  001C6E                     	goto	l217
  2624  001C6E  EF39  F00E         	
  2625                           l216:
  2626  001C72                     	line	258
  2627                           	
  2628                           l217:
  2629  001C72                     	return	;funcret
  2630  001C72  0012               	opt stack 0
  2631                           GLOBAL	__end_of_wait3s
  2632                           	__end_of_wait3s:
  2633  001C74                     	signat	_wait3s,89
  2634                           	global	_refreshTimeLeft
  2635                           
  2636 ;; *************** function _refreshTimeLeft *****************
  2637 ;; Defined at:
  2638 ;;		line 119 in file "main.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;		None
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  temp            1   28[COMRAM] unsigned char 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      void 
  2645 ;; Registers used:
  2646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  2652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2653 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2655 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2656 ;;Total ram usage:        1 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    6
  2659 ;; This function calls:
  2660 ;;		_WriteCommandToLCD
  2661 ;;		_WriteDataToLCD
  2662 ;;		_WriteStringToLCD
  2663 ;; This function is called by:
  2664 ;;		_main
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           psect	text2,class=CODE,space=0,reloc=2,group=0
  2668                           	line	119
  2669                           global __ptext2
  2670                           __ptext2:
  2671  001DB2                     psect	text2
  2672                           	file	"main.c"
  2673                           	line	119
  2674                           	global	__size_of_refreshTimeLeft
  2675                           	__size_of_refreshTimeLeft	equ	__end_of_refreshTimeLeft-_refreshTimeLeft
  2676  0000                     	
  2677                           _refreshTimeLeft:
  2678  001DB2                     ;incstack = 0
  2679                           	opt	stack 24
  2680                           	line	121
  2681                           	
  2682                           l2560:
  2683  001DB2                     ;main.c: 121:     WriteCommandToLCD(0x80);
  2684                           	movlw	(080h)&0ffh
  2685  001DB2  0E80               	
  2686                           	call	_WriteCommandToLCD
  2687  001DB4  EC05  F00F         	line	122
  2688                           	
  2689                           l2562:
  2690  001DB8                     ;main.c: 122:     WriteStringToLCD("  Time left :");
  2691                           		movlw	low(STR_1)
  2692  001DB8  0E69               	movwf	((c:WriteStringToLCD@s)),c
  2693  001DBA  6E1B               	movlw	high(STR_1)
  2694  001DBC  0E10               	movwf	((c:WriteStringToLCD@s+1)),c
  2695  001DBE  6E1C               
  2696                           	call	_WriteStringToLCD	;wreg free
  2697  001DC0  EC3A  F00E         	line	123
  2698                           	
  2699                           l2564:
  2700  001DC4                     ;main.c: 123:     unsigned char temp = (unsigned char)((int)'0'+timeH);
  2701                           	movf	((c:_timeH)),c,w	;volatile
  2702  001DC4  5046               	addlw	low(030h)
  2703  001DC6  0F30               	movwf	((c:refreshTimeLeft@temp)),c
  2704  001DC8  6E1D               	line	124
  2705                           	
  2706                           l2566:
  2707  001DCA                     ;main.c: 124:     WriteDataToLCD(temp);
  2708                           	movf	((c:refreshTimeLeft@temp)),c,w
  2709  001DCA  501D               	
  2710                           	call	_WriteDataToLCD
  2711  001DCC  ECEF  F00E         	line	125
  2712                           	
  2713                           l2568:
  2714  001DD0                     ;main.c: 125:     temp = (unsigned char)((int)'0'+timeL);
  2715                           	movf	((c:_timeL)),c,w	;volatile
  2716  001DD0  5045               	addlw	low(030h)
  2717  001DD2  0F30               	movwf	((c:refreshTimeLeft@temp)),c
  2718  001DD4  6E1D               	line	126
  2719                           	
  2720                           l2570:
  2721  001DD6                     ;main.c: 126:     WriteDataToLCD(temp);
  2722                           	movf	((c:refreshTimeLeft@temp)),c,w
  2723  001DD6  501D               	
  2724                           	call	_WriteDataToLCD
  2725  001DD8  ECEF  F00E         	line	127
  2726                           	
  2727                           l181:
  2728  001DDC                     	return	;funcret
  2729  001DDC  0012               	opt stack 0
  2730                           GLOBAL	__end_of_refreshTimeLeft
  2731                           	__end_of_refreshTimeLeft:
  2732  001DDE                     	signat	_refreshTimeLeft,89
  2733                           	global	_refreshPerson
  2734                           
  2735 ;; *************** function _refreshPerson *****************
  2736 ;; Defined at:
  2737 ;;		line 128 in file "main.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;		None
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  temp            1    7[BANK0 ] unsigned char 
  2742 ;;  currentVote     1    6[BANK0 ] unsigned char 
  2743 ;;  secondDigit     1    5[BANK0 ] unsigned char 
  2744 ;;  firstDigit      1    4[BANK0 ] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      void 
  2747 ;; Registers used:
  2748 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  2754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2755 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2757 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2758 ;;Total ram usage:        4 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    6
  2761 ;; This function calls:
  2762 ;;		_WriteCommandToLCD
  2763 ;;		_WriteDataToLCD
  2764 ;;		_WriteStringToLCD
  2765 ;;		___awdiv
  2766 ;;		___awmod
  2767 ;; This function is called by:
  2768 ;;		_main
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           psect	text3,class=CODE,space=0,reloc=2,group=0
  2772                           	line	128
  2773                           global __ptext3
  2774                           __ptext3:
  2775  001B58                     psect	text3
  2776                           	file	"main.c"
  2777                           	line	128
  2778                           	global	__size_of_refreshPerson
  2779                           	__size_of_refreshPerson	equ	__end_of_refreshPerson-_refreshPerson
  2780  0000                     	
  2781                           _refreshPerson:
  2782  001B58                     ;incstack = 0
  2783                           	opt	stack 24
  2784                           	line	130
  2785                           	
  2786                           l2572:
  2787  001B58                     ;main.c: 130:     WriteCommandToLCD(0xC2);
  2788                           	movlw	(0C2h)&0ffh
  2789  001B58  0EC2               	
  2790                           	call	_WriteCommandToLCD
  2791  001B5A  EC05  F00F         	line	133
  2792                           	
  2793                           l2574:
  2794  001B5E                     ;main.c: 131:     unsigned char temp;;main.c: 133:     WriteStringToLCD(ids[currentPerso
                                 n]);
  2795                           	movf	((c:_currentPerson)),c,w	;volatile
  2796  001B5E  502D               	mullw	03h
  2797  001B60  0D03               	movlw	low(_ids)
  2798  001B62  0E60               	addwf	(prodl),c,w
  2799  001B64  24F3               	movwf	((c:WriteStringToLCD@s)),c
  2800  001B66  6E1B               	movlw	high(_ids)
  2801  001B68  0E00               	addwfc	prod+1,w
  2802  001B6A  20F4               	movwf	1+((c:WriteStringToLCD@s)),c
  2803  001B6C  6E1C               	call	_WriteStringToLCD	;wreg free
  2804  001B6E  EC3A  F00E         	line	134
  2805                           	
  2806                           l2576:
  2807  001B72                     ;main.c: 134:     WriteDataToLCD(' ');
  2808                           	movlw	(020h)&0ffh
  2809  001B72  0E20               	
  2810                           	call	_WriteDataToLCD
  2811  001B74  ECEF  F00E         	line	135
  2812                           ;main.c: 135:     WriteStringToLCD(names[currentPerson]);
  2813                           	movf	((c:_currentPerson)),c,w	;volatile
  2814  001B78  502D               	mullw	07h
  2815  001B7A  0D07               	movlw	low(_names)
  2816  001B7C  0E01               	addwf	(prodl),c,w
  2817  001B7E  24F3               	movwf	((c:WriteStringToLCD@s)),c
  2818  001B80  6E1B               	movlw	high(_names)
  2819  001B82  0E10               	addwfc	prod+1,w
  2820  001B84  20F4               	movwf	1+((c:WriteStringToLCD@s)),c
  2821  001B86  6E1C               	call	_WriteStringToLCD	;wreg free
  2822  001B88  EC3A  F00E         	line	136
  2823                           	
  2824                           l2578:
  2825  001B8C                     ;main.c: 136:     WriteDataToLCD(' ');
  2826                           	movlw	(020h)&0ffh
  2827  001B8C  0E20               	
  2828                           	call	_WriteDataToLCD
  2829  001B8E  ECEF  F00E         	line	137
  2830                           	
  2831                           l2580:
  2832  001B92                     ;main.c: 137:     WriteDataToLCD(':');
  2833                           	movlw	(03Ah)&0ffh
  2834  001B92  0E3A               	
  2835                           	call	_WriteDataToLCD
  2836  001B94  ECEF  F00E         	line	138
  2837                           	
  2838                           l2582:
  2839  001B98                     ;main.c: 138:     unsigned char currentVote = votes[currentPerson];
  2840                           	movf	((c:_currentPerson)),c,w	;volatile
  2841  001B98  502D               	mullw	01h
  2842  001B9A  0D01               	movlw	low(_votes)
  2843  001B9C  0E1F               	addwf	(prodl),c,w
  2844  001B9E  24F3               	movwf	c:fsr2l
  2845  001BA0  6ED9               	movlw	high(_votes)
  2846  001BA2  0E00               	addwfc	prod+1,w
  2847  001BA4  20F4               	movwf	1+c:fsr2l
  2848  001BA6  6EDA               	movf	indf2,w
  2849  001BA8  50DF               	movlb	0	; () banked
  2850  001BAA  0100               	movwf	((refreshPerson@currentVote))&0ffh
  2851  001BAC  6F7E               	line	139
  2852                           	
  2853                           l2584:; BSR set to: 0
  2854  001BAE                     
  2855                           ;main.c: 139:     unsigned char firstDigit = 0;
  2856                           	movlw	low(0)
  2857  001BAE  0E00               	movwf	((refreshPerson@firstDigit))&0ffh
  2858  001BB0  6F7C               	line	140
  2859                           	
  2860                           l2586:; BSR set to: 0
  2861  001BB2                     
  2862                           ;main.c: 140:     unsigned char secondDigit = 0;
  2863                           	movlw	low(0)
  2864  001BB2  0E00               	movwf	((refreshPerson@secondDigit))&0ffh
  2865  001BB4  6F7D               	line	141
  2866                           	
  2867                           l2588:; BSR set to: 0
  2868  001BB6                     
  2869                           ;main.c: 141:     firstDigit = currentVote/10;
  2870                           	movff	(refreshPerson@currentVote),(c:___awdiv@dividend)
  2871  001BB6  C07E  F019         	clrf	((c:___awdiv@dividend+1)),c
  2872  001BBA  6A1A               	movlw	high(0Ah)
  2873  001BBC  0E00               	movwf	((c:___awdiv@divisor+1)),c
  2874  001BBE  6E1C               	movlw	low(0Ah)
  2875  001BC0  0E0A               	movwf	((c:___awdiv@divisor)),c
  2876  001BC2  6E1B               	call	___awdiv	;wreg free
  2877  001BC4  ECE7  F00B         	movf	(0+?___awdiv),c,w
  2878  001BC8  5019               	movlb	0	; () banked
  2879  001BCA  0100               	movwf	((refreshPerson@firstDigit))&0ffh
  2880  001BCC  6F7C               	line	142
  2881                           	
  2882                           l2590:; BSR set to: 0
  2883  001BCE                     
  2884                           ;main.c: 142:     secondDigit = currentVote%10;
  2885                           	movff	(refreshPerson@currentVote),(c:___awmod@dividend)
  2886  001BCE  C07E  F019         	clrf	((c:___awmod@dividend+1)),c
  2887  001BD2  6A1A               	movlw	high(0Ah)
  2888  001BD4  0E00               	movwf	((c:___awmod@divisor+1)),c
  2889  001BD6  6E1C               	movlw	low(0Ah)
  2890  001BD8  0E0A               	movwf	((c:___awmod@divisor)),c
  2891  001BDA  6E1B               	call	___awmod	;wreg free
  2892  001BDC  ECD4  F00C         	movf	(0+?___awmod),c,w
  2893  001BE0  5019               	movlb	0	; () banked
  2894  001BE2  0100               	movwf	((refreshPerson@secondDigit))&0ffh
  2895  001BE4  6F7D               	line	143
  2896                           	
  2897                           l2592:; BSR set to: 0
  2898  001BE6                     
  2899                           ;main.c: 143:     temp = (unsigned char)((int)'0'+ firstDigit);
  2900                           	movf	((refreshPerson@firstDigit))&0ffh,w
  2901  001BE6  517C               	addlw	low(030h)
  2902  001BE8  0F30               	movwf	((refreshPerson@temp))&0ffh
  2903  001BEA  6F7F               	line	144
  2904                           	
  2905                           l2594:; BSR set to: 0
  2906  001BEC                     
  2907                           ;main.c: 144:     WriteDataToLCD(temp);
  2908                           	movf	((refreshPerson@temp))&0ffh,w
  2909  001BEC  517F               	
  2910                           	call	_WriteDataToLCD
  2911  001BEE  ECEF  F00E         	line	145
  2912                           	
  2913                           l2596:
  2914  001BF2                     ;main.c: 145:     temp = (unsigned char)((int)'0'+ secondDigit);
  2915                           	movlb	0	; () banked
  2916  001BF2  0100               	movf	((refreshPerson@secondDigit))&0ffh,w
  2917  001BF4  517D               	addlw	low(030h)
  2918  001BF6  0F30               	movwf	((refreshPerson@temp))&0ffh
  2919  001BF8  6F7F               	line	146
  2920                           	
  2921                           l2598:; BSR set to: 0
  2922  001BFA                     
  2923                           ;main.c: 146:     WriteDataToLCD(temp);
  2924                           	movf	((refreshPerson@temp))&0ffh,w
  2925  001BFA  517F               	
  2926                           	call	_WriteDataToLCD
  2927  001BFC  ECEF  F00E         	line	147
  2928                           	
  2929                           l184:
  2930  001C00                     	return	;funcret
  2931  001C00  0012               	opt stack 0
  2932                           GLOBAL	__end_of_refreshPerson
  2933                           	__end_of_refreshPerson:
  2934  001C02                     	signat	_refreshPerson,89
  2935                           	global	___awmod
  2936                           
  2937 ;; *************** function ___awmod *****************
  2938 ;; Defined at:
  2939 ;;		line 7 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/awmod.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  dividend        2   24[COMRAM] int 
  2942 ;;  divisor         2   26[COMRAM] int 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  sign            1   29[COMRAM] unsigned char 
  2945 ;;  counter         1   28[COMRAM] unsigned char 
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  2   24[COMRAM] int 
  2948 ;; Registers used:
  2949 ;;		wreg, status,2, status,0
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  2955 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2956 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2958 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2959 ;;Total ram usage:        6 bytes
  2960 ;; Hardware stack levels used:    1
  2961 ;; Hardware stack levels required when called:    3
  2962 ;; This function calls:
  2963 ;;		Nothing
  2964 ;; This function is called by:
  2965 ;;		_refreshPerson
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           psect	text4,class=CODE,space=0,reloc=2,group=1
  2969                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/awmod.c"
  2970                           	line	7
  2971                           global __ptext4
  2972                           __ptext4:
  2973  0019A8                     psect	text4
  2974                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/awmod.c"
  2975                           	line	7
  2976                           	global	__size_of___awmod
  2977                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  2978  0000                     	
  2979                           ___awmod:
  2980  0019A8                     ;incstack = 0
  2981                           	opt	stack 26
  2982                           	line	12
  2983                           	
  2984                           l2456:
  2985  0019A8                     	movlw	low(0)
  2986  0019A8  0E00               	movwf	((c:___awmod@sign)),c
  2987  0019AA  6E1E               	line	13
  2988                           	
  2989                           l2458:
  2990  0019AC                     	btfsc	((c:___awmod@dividend+1)),c,7
  2991  0019AC  BE1A               	goto	u1580
  2992  0019AE  EFDD  F00C         	goto	u1581
  2993  0019B2  EFDB  F00C         
  2994                           u1581:
  2995  0019B6                     	goto	l2464
  2996  0019B6  EFE5  F00C         u1580:
  2997  0019BA                     	line	14
  2998                           	
  2999                           l2460:
  3000  0019BA                     	negf	((c:___awmod@dividend)),c
  3001  0019BA  6C19               	comf	((c:___awmod@dividend+1)),c
  3002  0019BC  1E1A               	btfsc	status,0
  3003  0019BE  B0D8               	incf	((c:___awmod@dividend+1)),c
  3004  0019C0  2A1A               	line	15
  3005                           	
  3006                           l2462:
  3007  0019C2                     	movlw	low(01h)
  3008  0019C2  0E01               	movwf	((c:___awmod@sign)),c
  3009  0019C4  6E1E               	goto	l2464
  3010  0019C6  EFE5  F00C         	line	16
  3011                           	
  3012                           l599:
  3013  0019CA                     	line	17
  3014                           	
  3015                           l2464:
  3016  0019CA                     	btfsc	((c:___awmod@divisor+1)),c,7
  3017  0019CA  BE1C               	goto	u1590
  3018  0019CC  EFEC  F00C         	goto	u1591
  3019  0019D0  EFEA  F00C         
  3020                           u1591:
  3021  0019D4                     	goto	l2468
  3022  0019D4  EFF2  F00C         u1590:
  3023  0019D8                     	line	18
  3024                           	
  3025                           l2466:
  3026  0019D8                     	negf	((c:___awmod@divisor)),c
  3027  0019D8  6C1B               	comf	((c:___awmod@divisor+1)),c
  3028  0019DA  1E1C               	btfsc	status,0
  3029  0019DC  B0D8               	incf	((c:___awmod@divisor+1)),c
  3030  0019DE  2A1C               	goto	l2468
  3031  0019E0  EFF2  F00C         	
  3032                           l600:
  3033  0019E4                     	line	19
  3034                           	
  3035                           l2468:
  3036  0019E4                     	movf	((c:___awmod@divisor)),c,w
  3037  0019E4  501B               iorwf	((c:___awmod@divisor+1)),c,w
  3038  0019E6  101C               	btfsc	status,2
  3039  0019E8  B4D8               	goto	u1601
  3040  0019EA  EFF9  F00C         	goto	u1600
  3041  0019EE  EFFB  F00C         
  3042                           u1601:
  3043  0019F2                     	goto	l2484
  3044  0019F2  EF2B  F00D         u1600:
  3045  0019F6                     	line	20
  3046                           	
  3047                           l2470:
  3048  0019F6                     	movlw	low(01h)
  3049  0019F6  0E01               	movwf	((c:___awmod@counter)),c
  3050  0019F8  6E1D               	line	21
  3051                           	goto	l2474
  3052  0019FA  EF05  F00D         	
  3053                           l603:
  3054  0019FE                     	line	22
  3055                           	
  3056                           l2472:
  3057  0019FE                     	bcf	status,0
  3058  0019FE  90D8               	rlcf	((c:___awmod@divisor)),c
  3059  001A00  361B               	rlcf	((c:___awmod@divisor+1)),c
  3060  001A02  361C               	line	23
  3061                           	incf	((c:___awmod@counter)),c
  3062  001A04  2A1D               	goto	l2474
  3063  001A06  EF05  F00D         	line	24
  3064                           	
  3065                           l602:
  3066  001A0A                     	line	21
  3067                           	
  3068                           l2474:
  3069  001A0A                     	
  3070                           	btfss	((c:___awmod@divisor+1)),c,(15)&7
  3071  001A0A  AE1C               	goto	u1611
  3072  001A0C  EF0A  F00D         	goto	u1610
  3073  001A10  EF0C  F00D         u1611:
  3074  001A14                     	goto	l2472
  3075  001A14  EFFF  F00C         u1610:
  3076  001A18                     	goto	l2476
  3077  001A18  EF10  F00D         	
  3078                           l604:
  3079  001A1C                     	goto	l2476
  3080  001A1C  EF10  F00D         	line	25
  3081                           	
  3082                           l605:
  3083  001A20                     	line	26
  3084                           	
  3085                           l2476:
  3086  001A20                     		movf	((c:___awmod@divisor)),c,w
  3087  001A20  501B               	subwf	((c:___awmod@dividend)),c,w
  3088  001A22  5C19               	movf	((c:___awmod@divisor+1)),c,w
  3089  001A24  501C               	subwfb	((c:___awmod@dividend+1)),c,w
  3090  001A26  581A               	btfss	status,0
  3091  001A28  A0D8               	goto	u1621
  3092  001A2A  EF19  F00D         	goto	u1620
  3093  001A2E  EF1B  F00D         
  3094                           u1621:
  3095  001A32                     	goto	l2480
  3096  001A32  EF21  F00D         u1620:
  3097  001A36                     	line	27
  3098                           	
  3099                           l2478:
  3100  001A36                     	movf	((c:___awmod@divisor)),c,w
  3101  001A36  501B               	subwf	((c:___awmod@dividend)),c
  3102  001A38  5E19               	movf	((c:___awmod@divisor+1)),c,w
  3103  001A3A  501C               	subwfb	((c:___awmod@dividend+1)),c
  3104  001A3C  5A1A               
  3105                           	goto	l2480
  3106  001A3E  EF21  F00D         	
  3107                           l606:
  3108  001A42                     	line	28
  3109                           	
  3110                           l2480:
  3111  001A42                     	bcf	status,0
  3112  001A42  90D8               	rrcf	((c:___awmod@divisor+1)),c
  3113  001A44  321C               	rrcf	((c:___awmod@divisor)),c
  3114  001A46  321B               	line	29
  3115                           	
  3116                           l2482:
  3117  001A48                     	decfsz	((c:___awmod@counter)),c
  3118  001A48  2E1D               	
  3119                           	goto	l2476
  3120  001A4A  EF10  F00D         	goto	l2484
  3121  001A4E  EF2B  F00D         	
  3122                           l607:
  3123  001A52                     	goto	l2484
  3124  001A52  EF2B  F00D         	line	30
  3125                           	
  3126                           l601:
  3127  001A56                     	line	31
  3128                           	
  3129                           l2484:
  3130  001A56                     	movf	((c:___awmod@sign)),c,w
  3131  001A56  501E               	btfsc	status,2
  3132  001A58  B4D8               	goto	u1631
  3133  001A5A  EF31  F00D         	goto	u1630
  3134  001A5E  EF33  F00D         u1631:
  3135  001A62                     	goto	l2488
  3136  001A62  EF39  F00D         u1630:
  3137  001A66                     	line	32
  3138                           	
  3139                           l2486:
  3140  001A66                     	negf	((c:___awmod@dividend)),c
  3141  001A66  6C19               	comf	((c:___awmod@dividend+1)),c
  3142  001A68  1E1A               	btfsc	status,0
  3143  001A6A  B0D8               	incf	((c:___awmod@dividend+1)),c
  3144  001A6C  2A1A               	goto	l2488
  3145  001A6E  EF39  F00D         	
  3146                           l608:
  3147  001A72                     	line	33
  3148                           	
  3149                           l2488:
  3150  001A72                     	movff	(c:___awmod@dividend),(c:?___awmod)
  3151  001A72  C019  F019         	movff	(c:___awmod@dividend+1),(c:?___awmod+1)
  3152  001A76  C01A  F01A         	goto	l609
  3153  001A7A  EF3F  F00D         	
  3154                           l2490:
  3155  001A7E                     	line	34
  3156                           	
  3157                           l609:
  3158  001A7E                     	return	;funcret
  3159  001A7E  0012               	opt stack 0
  3160                           GLOBAL	__end_of___awmod
  3161                           	__end_of___awmod:
  3162  001A80                     	signat	___awmod,8314
  3163                           	global	___awdiv
  3164                           
  3165 ;; *************** function ___awdiv *****************
  3166 ;; Defined at:
  3167 ;;		line 7 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/awdiv.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;  dividend        2   24[COMRAM] int 
  3170 ;;  divisor         2   26[COMRAM] int 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  quotient        2    2[BANK0 ] int 
  3173 ;;  sign            1    1[BANK0 ] unsigned char 
  3174 ;;  counter         1    0[BANK0 ] unsigned char 
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  2   24[COMRAM] int 
  3177 ;; Registers used:
  3178 ;;		wreg, status,2, status,0
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  3184 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3185 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3187 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3188 ;;Total ram usage:        8 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; Hardware stack levels required when called:    3
  3191 ;; This function calls:
  3192 ;;		Nothing
  3193 ;; This function is called by:
  3194 ;;		_refreshPerson
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           psect	text5,class=CODE,space=0,reloc=2,group=1
  3198                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/awdiv.c"
  3199                           	line	7
  3200                           global __ptext5
  3201                           __ptext5:
  3202  0017CE                     psect	text5
  3203                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/awdiv.c"
  3204                           	line	7
  3205                           	global	__size_of___awdiv
  3206                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  3207  0000                     	
  3208                           ___awdiv:
  3209  0017CE                     ;incstack = 0
  3210                           	opt	stack 26
  3211                           	line	13
  3212                           	
  3213                           l2412:
  3214  0017CE                     	movlw	low(0)
  3215  0017CE  0E00               	movlb	0	; () banked
  3216  0017D0  0100               	movwf	((___awdiv@sign))&0ffh
  3217  0017D2  6F79               	line	14
  3218                           	
  3219                           l2414:; BSR set to: 0
  3220  0017D4                     
  3221                           	btfsc	((c:___awdiv@divisor+1)),c,7
  3222  0017D4  BE1C               	goto	u1520
  3223  0017D6  EFF1  F00B         	goto	u1521
  3224  0017DA  EFEF  F00B         
  3225                           u1521:
  3226  0017DE                     	goto	l2420
  3227  0017DE  EFF9  F00B         u1520:
  3228  0017E2                     	line	15
  3229                           	
  3230                           l2416:; BSR set to: 0
  3231  0017E2                     
  3232                           	negf	((c:___awdiv@divisor)),c
  3233  0017E2  6C1B               	comf	((c:___awdiv@divisor+1)),c
  3234  0017E4  1E1C               	btfsc	status,0
  3235  0017E6  B0D8               	incf	((c:___awdiv@divisor+1)),c
  3236  0017E8  2A1C               	line	16
  3237                           	
  3238                           l2418:; BSR set to: 0
  3239  0017EA                     
  3240                           	movlw	low(01h)
  3241  0017EA  0E01               	movwf	((___awdiv@sign))&0ffh
  3242  0017EC  6F79               	goto	l2420
  3243  0017EE  EFF9  F00B         	line	17
  3244                           	
  3245                           l586:; BSR set to: 0
  3246  0017F2                     
  3247                           	line	18
  3248                           	
  3249                           l2420:; BSR set to: 0
  3250  0017F2                     
  3251                           	btfsc	((c:___awdiv@dividend+1)),c,7
  3252  0017F2  BE1A               	goto	u1530
  3253  0017F4  EF00  F00C         	goto	u1531
  3254  0017F8  EFFE  F00B         
  3255                           u1531:
  3256  0017FC                     	goto	l2426
  3257  0017FC  EF08  F00C         u1530:
  3258  001800                     	line	19
  3259                           	
  3260                           l2422:; BSR set to: 0
  3261  001800                     
  3262                           	negf	((c:___awdiv@dividend)),c
  3263  001800  6C19               	comf	((c:___awdiv@dividend+1)),c
  3264  001802  1E1A               	btfsc	status,0
  3265  001804  B0D8               	incf	((c:___awdiv@dividend+1)),c
  3266  001806  2A1A               	line	20
  3267                           	
  3268                           l2424:; BSR set to: 0
  3269  001808                     
  3270                           	movlw	(01h)&0ffh
  3271  001808  0E01               	xorwf	((___awdiv@sign))&0ffh
  3272  00180A  1B79               	goto	l2426
  3273  00180C  EF08  F00C         	line	21
  3274                           	
  3275                           l587:; BSR set to: 0
  3276  001810                     
  3277                           	line	22
  3278                           	
  3279                           l2426:; BSR set to: 0
  3280  001810                     
  3281                           	movlw	high(0)
  3282  001810  0E00               	movwf	((___awdiv@quotient+1))&0ffh
  3283  001812  6F7B               	movlw	low(0)
  3284  001814  0E00               	movwf	((___awdiv@quotient))&0ffh
  3285  001816  6F7A               	line	23
  3286                           	
  3287                           l2428:; BSR set to: 0
  3288  001818                     
  3289                           	movf	((c:___awdiv@divisor)),c,w
  3290  001818  501B               iorwf	((c:___awdiv@divisor+1)),c,w
  3291  00181A  101C               	btfsc	status,2
  3292  00181C  B4D8               	goto	u1541
  3293  00181E  EF13  F00C         	goto	u1540
  3294  001822  EF15  F00C         
  3295                           u1541:
  3296  001826                     	goto	l2448
  3297  001826  EF49  F00C         u1540:
  3298  00182A                     	line	24
  3299                           	
  3300                           l2430:; BSR set to: 0
  3301  00182A                     
  3302                           	movlw	low(01h)
  3303  00182A  0E01               	movwf	((___awdiv@counter))&0ffh
  3304  00182C  6F78               	line	25
  3305                           	goto	l2434
  3306  00182E  EF1F  F00C         	
  3307                           l590:; BSR set to: 0
  3308  001832                     
  3309                           	line	26
  3310                           	
  3311                           l2432:; BSR set to: 0
  3312  001832                     
  3313                           	bcf	status,0
  3314  001832  90D8               	rlcf	((c:___awdiv@divisor)),c
  3315  001834  361B               	rlcf	((c:___awdiv@divisor+1)),c
  3316  001836  361C               	line	27
  3317                           	incf	((___awdiv@counter))&0ffh
  3318  001838  2B78               	goto	l2434
  3319  00183A  EF1F  F00C         	line	28
  3320                           	
  3321                           l589:; BSR set to: 0
  3322  00183E                     
  3323                           	line	25
  3324                           	
  3325                           l2434:; BSR set to: 0
  3326  00183E                     
  3327                           	
  3328                           	btfss	((c:___awdiv@divisor+1)),c,(15)&7
  3329  00183E  AE1C               	goto	u1551
  3330  001840  EF24  F00C         	goto	u1550
  3331  001844  EF26  F00C         u1551:
  3332  001848                     	goto	l2432
  3333  001848  EF19  F00C         u1550:
  3334  00184C                     	goto	l2436
  3335  00184C  EF2A  F00C         	
  3336                           l591:; BSR set to: 0
  3337  001850                     
  3338                           	goto	l2436
  3339  001850  EF2A  F00C         	line	29
  3340                           	
  3341                           l592:; BSR set to: 0
  3342  001854                     
  3343                           	line	30
  3344                           	
  3345                           l2436:; BSR set to: 0
  3346  001854                     
  3347                           	bcf	status,0
  3348  001854  90D8               	rlcf	((___awdiv@quotient))&0ffh
  3349  001856  377A               	rlcf	((___awdiv@quotient+1))&0ffh
  3350  001858  377B               	line	31
  3351                           	
  3352                           l2438:; BSR set to: 0
  3353  00185A                     
  3354                           		movf	((c:___awdiv@divisor)),c,w
  3355  00185A  501B               	subwf	((c:___awdiv@dividend)),c,w
  3356  00185C  5C19               	movf	((c:___awdiv@divisor+1)),c,w
  3357  00185E  501C               	subwfb	((c:___awdiv@dividend+1)),c,w
  3358  001860  581A               	btfss	status,0
  3359  001862  A0D8               	goto	u1561
  3360  001864  EF36  F00C         	goto	u1560
  3361  001868  EF38  F00C         
  3362                           u1561:
  3363  00186C                     	goto	l2444
  3364  00186C  EF3F  F00C         u1560:
  3365  001870                     	line	32
  3366                           	
  3367                           l2440:; BSR set to: 0
  3368  001870                     
  3369                           	movf	((c:___awdiv@divisor)),c,w
  3370  001870  501B               	subwf	((c:___awdiv@dividend)),c
  3371  001872  5E19               	movf	((c:___awdiv@divisor+1)),c,w
  3372  001874  501C               	subwfb	((c:___awdiv@dividend+1)),c
  3373  001876  5A1A               
  3374                           	line	33
  3375                           	
  3376                           l2442:; BSR set to: 0
  3377  001878                     
  3378                           	bsf	(0+(0/8)+(___awdiv@quotient))&0ffh,(0)&7
  3379  001878  817A               	goto	l2444
  3380  00187A  EF3F  F00C         	line	34
  3381                           	
  3382                           l593:; BSR set to: 0
  3383  00187E                     
  3384                           	line	35
  3385                           	
  3386                           l2444:; BSR set to: 0
  3387  00187E                     
  3388                           	bcf	status,0
  3389  00187E  90D8               	rrcf	((c:___awdiv@divisor+1)),c
  3390  001880  321C               	rrcf	((c:___awdiv@divisor)),c
  3391  001882  321B               	line	36
  3392                           	
  3393                           l2446:; BSR set to: 0
  3394  001884                     
  3395                           	decfsz	((___awdiv@counter))&0ffh
  3396  001884  2F78               	
  3397                           	goto	l2436
  3398  001886  EF2A  F00C         	goto	l2448
  3399  00188A  EF49  F00C         	
  3400                           l594:; BSR set to: 0
  3401  00188E                     
  3402                           	goto	l2448
  3403  00188E  EF49  F00C         	line	37
  3404                           	
  3405                           l588:; BSR set to: 0
  3406  001892                     
  3407                           	line	38
  3408                           	
  3409                           l2448:; BSR set to: 0
  3410  001892                     
  3411                           	movf	((___awdiv@sign))&0ffh,w
  3412  001892  5179               	btfsc	status,2
  3413  001894  B4D8               	goto	u1571
  3414  001896  EF4F  F00C         	goto	u1570
  3415  00189A  EF51  F00C         u1571:
  3416  00189E                     	goto	l2452
  3417  00189E  EF57  F00C         u1570:
  3418  0018A2                     	line	39
  3419                           	
  3420                           l2450:; BSR set to: 0
  3421  0018A2                     
  3422                           	negf	((___awdiv@quotient))&0ffh
  3423  0018A2  6D7A               	comf	((___awdiv@quotient+1))&0ffh
  3424  0018A4  1F7B               	btfsc	status,0
  3425  0018A6  B0D8               	incf	((___awdiv@quotient+1))&0ffh
  3426  0018A8  2B7B               	goto	l2452
  3427  0018AA  EF57  F00C         	
  3428                           l595:; BSR set to: 0
  3429  0018AE                     
  3430                           	line	40
  3431                           	
  3432                           l2452:; BSR set to: 0
  3433  0018AE                     
  3434                           	movff	(___awdiv@quotient),(c:?___awdiv)
  3435  0018AE  C07A  F019         	movff	(___awdiv@quotient+1),(c:?___awdiv+1)
  3436  0018B2  C07B  F01A         	goto	l596
  3437  0018B6  EF5D  F00C         	
  3438                           l2454:; BSR set to: 0
  3439  0018BA                     
  3440                           	line	41
  3441                           	
  3442                           l596:; BSR set to: 0
  3443  0018BA                     
  3444                           	return	;funcret
  3445  0018BA  0012               	opt stack 0
  3446                           GLOBAL	__end_of___awdiv
  3447                           	__end_of___awdiv:
  3448  0018BC                     	signat	___awdiv,8314
  3449                           	global	_init2
  3450                           
  3451 ;; *************** function _init2 *****************
  3452 ;; Defined at:
  3453 ;;		line 151 in file "main.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;		None
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;		None
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  1    wreg      void 
  3460 ;; Registers used:
  3461 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  3467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3471 ;;Total ram usage:        0 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; Hardware stack levels required when called:    6
  3474 ;; This function calls:
  3475 ;;		_ClearLCDScreen
  3476 ;;		_WriteCommandToLCD
  3477 ;;		_WriteStringToLCD
  3478 ;;		_numToStringPrint
  3479 ;; This function is called by:
  3480 ;;		_main
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           psect	text6,class=CODE,space=0,reloc=2,group=0
  3484                           	file	"main.c"
  3485                           	line	151
  3486                           global __ptext6
  3487                           __ptext6:
  3488  001D76                     psect	text6
  3489                           	file	"main.c"
  3490                           	line	151
  3491                           	global	__size_of_init2
  3492                           	__size_of_init2	equ	__end_of_init2-_init2
  3493  0000                     	
  3494                           _init2:; BSR set to: 0
  3495  001D76                     
  3496                           ;incstack = 0
  3497                           	opt	stack 24
  3498                           	line	152
  3499                           	
  3500                           l2600:
  3501  001D76                     ;main.c: 152:     PORTB;
  3502                           	movf	((c:3969)),c,w	;volatile
  3503  001D76  5081               	line	153
  3504                           	
  3505                           l2602:
  3506  001D78                     ;main.c: 153:     RBIF = 0;
  3507                           	bcf	c:(32656/8),(32656)&7	;volatile
  3508  001D78  90F2               	line	154
  3509                           	
  3510                           l2604:
  3511  001D7A                     ;main.c: 154:     TRISB = 0xC0;
  3512                           	movlw	low(0C0h)
  3513  001D7A  0EC0               	movwf	((c:3987)),c	;volatile
  3514  001D7C  6E93               	line	155
  3515                           	
  3516                           l2606:
  3517  001D7E                     ;main.c: 155:     TRISE = 0;
  3518                           	movlw	low(0)
  3519  001D7E  0E00               	movwf	((c:3990)),c	;volatile
  3520  001D80  6E96               	line	156
  3521                           	
  3522                           l2608:
  3523  001D82                     ;main.c: 156:     INTCON2bits.RBIP = 1;
  3524                           	bsf	((c:4081)),c,0	;volatile
  3525  001D82  80F1               	line	158
  3526                           	
  3527                           l2610:
  3528  001D84                     ;main.c: 158:     PIR1bits.TMR1IF = 0;
  3529                           	bcf	((c:3998)),c,0	;volatile
  3530  001D84  909E               	line	159
  3531                           	
  3532                           l2612:
  3533  001D86                     ;main.c: 159:     PIE1bits.TMR1IE = 0;
  3534                           	bcf	((c:3997)),c,0	;volatile
  3535  001D86  909D               	line	160
  3536                           	
  3537                           l2614:
  3538  001D88                     ;main.c: 160:     INTCON = 0xC8;
  3539                           	movlw	low(0C8h)
  3540  001D88  0EC8               	movwf	((c:4082)),c	;volatile
  3541  001D8A  6EF2               	line	161
  3542                           	
  3543                           l2616:
  3544  001D8C                     ;main.c: 161:     T0CONbits.TMR0ON = 0;
  3545                           	bcf	((c:4053)),c,7	;volatile
  3546  001D8C  9ED5               	line	162
  3547                           	
  3548                           l2618:
  3549  001D8E                     ;main.c: 162:     T1CONbits.TMR1ON = 0;
  3550                           	bcf	((c:4045)),c,0	;volatile
  3551  001D8E  90CD               	line	164
  3552                           	
  3553                           l2620:
  3554  001D90                     ;main.c: 164:     ClearLCDScreen();
  3555                           	call	_ClearLCDScreen	;wreg free
  3556  001D90  EC75  F00F         	line	165
  3557                           	
  3558                           l2622:
  3559  001D94                     ;main.c: 165:     WriteCommandToLCD(0x80);
  3560                           	movlw	(080h)&0ffh
  3561  001D94  0E80               	
  3562                           	call	_WriteCommandToLCD
  3563  001D96  EC05  F00F         	line	166
  3564                           	
  3565                           l2624:
  3566  001D9A                     ;main.c: 166:     WriteStringToLCD(enterVotersText);
  3567                           		movlw	low(_enterVotersText)
  3568  001D9A  0E49               	movwf	((c:WriteStringToLCD@s)),c
  3569  001D9C  6E1B               	movlw	high(_enterVotersText)
  3570  001D9E  0E10               	movwf	((c:WriteStringToLCD@s+1)),c
  3571  001DA0  6E1C               
  3572                           	call	_WriteStringToLCD	;wreg free
  3573  001DA2  EC3A  F00E         	line	167
  3574                           	
  3575                           l2626:
  3576  001DA6                     ;main.c: 167:     WriteCommandToLCD(0xC0);
  3577                           	movlw	(0C0h)&0ffh
  3578  001DA6  0EC0               	
  3579                           	call	_WriteCommandToLCD
  3580  001DA8  EC05  F00F         	line	168
  3581                           	
  3582                           l2628:
  3583  001DAC                     ;main.c: 168:     numToStringPrint();
  3584                           	call	_numToStringPrint	;wreg free
  3585  001DAC  EC30  F00F         	line	169
  3586                           	
  3587                           l187:
  3588  001DB0                     	return	;funcret
  3589  001DB0  0012               	opt stack 0
  3590                           GLOBAL	__end_of_init2
  3591                           	__end_of_init2:
  3592  001DB2                     	signat	_init2,89
  3593                           	global	_numToStringPrint
  3594                           
  3595 ;; *************** function _numToStringPrint *****************
  3596 ;; Defined at:
  3597 ;;		line 109 in file "main.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;		None
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  temp            1   26[COMRAM] unsigned char 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  1    wreg      void 
  3604 ;; Registers used:
  3605 ;;		wreg, status,2, status,0, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  3611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3614 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3615 ;;Total ram usage:        1 bytes
  3616 ;; Hardware stack levels used:    1
  3617 ;; Hardware stack levels required when called:    5
  3618 ;; This function calls:
  3619 ;;		_WriteCommandToLCD
  3620 ;;		_WriteDataToLCD
  3621 ;; This function is called by:
  3622 ;;		_init2
  3623 ;;		_main
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           psect	text7,class=CODE,space=0,reloc=2,group=0
  3627                           	line	109
  3628                           global __ptext7
  3629                           __ptext7:
  3630  001E60                     psect	text7
  3631                           	file	"main.c"
  3632                           	line	109
  3633                           	global	__size_of_numToStringPrint
  3634                           	__size_of_numToStringPrint	equ	__end_of_numToStringPrint-_numToStringPrint
  3635  0000                     	
  3636                           _numToStringPrint:
  3637  001E60                     ;incstack = 0
  3638                           	opt	stack 25
  3639                           	line	111
  3640                           	
  3641                           l2400:
  3642  001E60                     ;main.c: 111:     WriteCommandToLCD(0xC0);
  3643                           	movlw	(0C0h)&0ffh
  3644  001E60  0EC0               	
  3645                           	call	_WriteCommandToLCD
  3646  001E62  EC05  F00F         	line	112
  3647                           ;main.c: 112:     WriteDataToLCD(' ');
  3648                           	movlw	(020h)&0ffh
  3649  001E66  0E20               	
  3650                           	call	_WriteDataToLCD
  3651  001E68  ECEF  F00E         	line	113
  3652                           	
  3653                           l2402:
  3654  001E6C                     ;main.c: 113:     unsigned char temp = (unsigned char)((int)'0'+onlarDigit);
  3655                           	movf	((c:_onlarDigit)),c,w	;volatile
  3656  001E6C  5030               	addlw	low(030h)
  3657  001E6E  0F30               	movwf	((c:numToStringPrint@temp)),c
  3658  001E70  6E1B               	line	114
  3659                           	
  3660                           l2404:
  3661  001E72                     ;main.c: 114:     WriteDataToLCD(temp);
  3662                           	movf	((c:numToStringPrint@temp)),c,w
  3663  001E72  501B               	
  3664                           	call	_WriteDataToLCD
  3665  001E74  ECEF  F00E         	line	115
  3666                           ;main.c: 115:     temp = (unsigned char)((int)'0'+birlerDigit);
  3667                           	movf	((c:_birlerDigit)),c,w	;volatile
  3668  001E78  502F               	addlw	low(030h)
  3669  001E7A  0F30               	movwf	((c:numToStringPrint@temp)),c
  3670  001E7C  6E1B               	line	116
  3671                           	
  3672                           l2406:
  3673  001E7E                     ;main.c: 116:     WriteDataToLCD(temp);
  3674                           	movf	((c:numToStringPrint@temp)),c,w
  3675  001E7E  501B               	
  3676                           	call	_WriteDataToLCD
  3677  001E80  ECEF  F00E         	line	117
  3678                           	
  3679                           l178:
  3680  001E84                     	return	;funcret
  3681  001E84  0012               	opt stack 0
  3682                           GLOBAL	__end_of_numToStringPrint
  3683                           	__end_of_numToStringPrint:
  3684  001E86                     	signat	_numToStringPrint,89
  3685                           	global	_ClearLCDScreen
  3686                           
  3687 ;; *************** function _ClearLCDScreen *****************
  3688 ;; Defined at:
  3689 ;;		line 124 in file "LCD.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;		None
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;		None
  3694 ;; Return value:  Size  Location     Type
  3695 ;;                  1    wreg      void 
  3696 ;; Registers used:
  3697 ;;		wreg, status,2, status,0, cstack
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  3703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3705 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3706 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3707 ;;Total ram usage:        1 bytes
  3708 ;; Hardware stack levels used:    1
  3709 ;; Hardware stack levels required when called:    5
  3710 ;; This function calls:
  3711 ;;		_WriteCommandToLCD
  3712 ;; This function is called by:
  3713 ;;		_init2
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           psect	text8,class=CODE,space=0,reloc=2,group=0
  3717                           	file	"LCD.c"
  3718                           	line	124
  3719                           global __ptext8
  3720                           __ptext8:
  3721  001EEA                     psect	text8
  3722                           	file	"LCD.c"
  3723                           	line	124
  3724                           	global	__size_of_ClearLCDScreen
  3725                           	__size_of_ClearLCDScreen	equ	__end_of_ClearLCDScreen-_ClearLCDScreen
  3726  0000                     	
  3727                           _ClearLCDScreen:
  3728  001EEA                     ;incstack = 0
  3729                           	opt	stack 24
  3730                           	line	126
  3731                           	
  3732                           l2408:
  3733  001EEA                     ;LCD.c: 126:     WriteCommandToLCD(0x01);
  3734                           	movlw	(01h)&0ffh
  3735  001EEA  0E01               	
  3736                           	call	_WriteCommandToLCD
  3737  001EEC  EC05  F00F         	line	127
  3738                           	
  3739                           l2410:
  3740  001EF0                     ;LCD.c: 127:     _delay((unsigned long)((2)*(40000000/4000.0)));
  3741                           	opt asmopt_push
  3742                           opt asmopt_off
  3743                           movlw	26
  3744  001EF0  0E1A               movwf	(??_ClearLCDScreen+0+0)&0ffh,c,f
  3745  001EF2  6E1B               	movlw	248
  3746  001EF4  0EF8               u1767:
  3747  001EF6                     decfsz	wreg,f
  3748  001EF6  2EE8               	bra	u1767
  3749  001EF8  D7FE               	decfsz	(??_ClearLCDScreen+0+0)&0ffh,c,f
  3750  001EFA  2E1B               	bra	u1767
  3751  001EFC  D7FC               	nop2
  3752  001EFE  D000               opt asmopt_pop
  3753                           
  3754                           	line	128
  3755                           	
  3756                           l362:
  3757  001F00                     	return	;funcret
  3758  001F00  0012               	opt stack 0
  3759                           GLOBAL	__end_of_ClearLCDScreen
  3760                           	__end_of_ClearLCDScreen:
  3761  001F02                     	signat	_ClearLCDScreen,89
  3762                           	global	_init1
  3763                           
  3764 ;; *************** function _init1 *****************
  3765 ;; Defined at:
  3766 ;;		line 36 in file "main.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;		None
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;		None
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1    wreg      void 
  3773 ;; Registers used:
  3774 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  3780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3782 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3783 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3784 ;;Total ram usage:        1 bytes
  3785 ;; Hardware stack levels used:    1
  3786 ;; Hardware stack levels required when called:    6
  3787 ;; This function calls:
  3788 ;;		_ToggleEpinOfLCD
  3789 ;;		_WriteCommandToLCD
  3790 ;;		_WriteStringToLCD
  3791 ;; This function is called by:
  3792 ;;		_main
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           psect	text9,class=CODE,space=0,reloc=2,group=0
  3796                           	file	"main.c"
  3797                           	line	36
  3798                           global __ptext9
  3799                           __ptext9:
  3800  001384                     psect	text9
  3801                           	file	"main.c"
  3802                           	line	36
  3803                           	global	__size_of_init1
  3804                           	__size_of_init1	equ	__end_of_init1-_init1
  3805  0000                     	
  3806                           _init1:
  3807  001384                     ;incstack = 0
  3808                           	opt	stack 24
  3809                           	line	37
  3810                           	
  3811                           l2492:
  3812  001384                     ;main.c: 37:     tmr0count=0;
  3813                           	movlw	high(0)
  3814  001384  0E00               	movwf	((c:_tmr0count+1)),c	;volatile
  3815  001386  6E28               	movlw	low(0)
  3816  001388  0E00               	movwf	((c:_tmr0count)),c	;volatile
  3817  00138A  6E27               	line	38
  3818                           ;main.c: 38:     tmr1count=0;
  3819                           	movlw	low(0)
  3820  00138C  0E00               	movwf	((c:_tmr1count)),c	;volatile
  3821  00138E  6E33               	line	39
  3822                           ;main.c: 39:     blinkStatus = 0;
  3823                           	movlw	low(0)
  3824  001390  0E00               	movwf	((c:_blinkStatus)),c	;volatile
  3825  001392  6E32               	line	40
  3826                           ;main.c: 40:     for (i=0; i < 8; i++)
  3827                           	movlw	low(0)
  3828  001394  0E00               	movwf	((c:_i)),c
  3829  001396  6E39               	
  3830                           l2494:
  3831  001398                     		movlw	08h-1
  3832  001398  0E07               	cpfsgt	((c:_i)),c
  3833  00139A  6439               	goto	u1641
  3834  00139C  EFD2  F009         	goto	u1640
  3835  0013A0  EFD4  F009         
  3836                           u1641:
  3837  0013A4                     	goto	l2498
  3838  0013A4  EFD8  F009         u1640:
  3839  0013A8                     	goto	l2504
  3840  0013A8  EFED  F009         	
  3841                           l2496:
  3842  0013AC                     	goto	l2504
  3843  0013AC  EFED  F009         	
  3844                           l173:
  3845  0013B0                     	line	41
  3846                           	
  3847                           l2498:
  3848  0013B0                     ;main.c: 41:         votes[i] = 0;
  3849                           	movf	((c:_i)),c,w
  3850  0013B0  5039               	mullw	01h
  3851  0013B2  0D01               	movlw	low(_votes)
  3852  0013B4  0E1F               	addwf	(prodl),c,w
  3853  0013B6  24F3               	movwf	c:fsr2l
  3854  0013B8  6ED9               	movlw	high(_votes)
  3855  0013BA  0E00               	addwfc	prod+1,w
  3856  0013BC  20F4               	movwf	1+c:fsr2l
  3857  0013BE  6EDA               	movlw	low(0)
  3858  0013C0  0E00               	movwf	indf2
  3859  0013C2  6EDF               	
  3860                           l2500:
  3861  0013C4                     	incf	((c:_i)),c
  3862  0013C4  2A39               	
  3863                           l2502:
  3864  0013C6                     		movlw	08h-1
  3865  0013C6  0E07               	cpfsgt	((c:_i)),c
  3866  0013C8  6439               	goto	u1651
  3867  0013CA  EFE9  F009         	goto	u1650
  3868  0013CE  EFEB  F009         
  3869                           u1651:
  3870  0013D2                     	goto	l2498
  3871  0013D2  EFD8  F009         u1650:
  3872  0013D6                     	goto	l2504
  3873  0013D6  EFED  F009         	
  3874                           l174:
  3875  0013DA                     	line	42
  3876                           	
  3877                           l2504:
  3878  0013DA                     ;main.c: 42:     onlarDigit=0;
  3879                           	movlw	low(0)
  3880  0013DA  0E00               	movwf	((c:_onlarDigit)),c	;volatile
  3881  0013DC  6E30               	line	43
  3882                           ;main.c: 43:     birlerDigit=0;
  3883                           	movlw	low(0)
  3884  0013DE  0E00               	movwf	((c:_birlerDigit)),c	;volatile
  3885  0013E0  6E2F               	line	44
  3886                           ;main.c: 44:     digitStage=0;
  3887                           	movlw	low(0)
  3888  0013E2  0E00               	movwf	((c:_digitStage)),c	;volatile
  3889  0013E4  6E2E               	line	45
  3890                           ;main.c: 45:     timeH=9;
  3891                           	movlw	low(09h)
  3892  0013E6  0E09               	movwf	((c:_timeH)),c	;volatile
  3893  0013E8  6E46               	line	46
  3894                           ;main.c: 46:     timeL=1;
  3895                           	movlw	low(01h)
  3896  0013EA  0E01               	movwf	((c:_timeL)),c	;volatile
  3897  0013EC  6E45               	line	47
  3898                           ;main.c: 47:     currentPerson=0;
  3899                           	movlw	low(0)
  3900  0013EE  0E00               	movwf	((c:_currentPerson)),c	;volatile
  3901  0013F0  6E2D               	line	48
  3902                           ;main.c: 48:     voteEnds=0;
  3903                           	movlw	low(0)
  3904  0013F2  0E00               	movwf	((c:_voteEnds)),c	;volatile
  3905  0013F4  6E2C               	line	49
  3906                           ;main.c: 49:     totalVotes = 0;
  3907                           	movlw	low(0)
  3908  0013F6  0E00               	movwf	((c:_totalVotes)),c	;volatile
  3909  0013F8  6E2A               	line	50
  3910                           ;main.c: 50:     INTCON = 0x00;
  3911                           	movlw	low(0)
  3912  0013FA  0E00               	movwf	((c:4082)),c	;volatile
  3913  0013FC  6EF2               	line	51
  3914                           	
  3915                           l2506:
  3916  0013FE                     ;main.c: 51:     RCONbits.IPEN = 1;
  3917                           	bsf	((c:4048)),c,7	;volatile
  3918  0013FE  8ED0               	line	52
  3919                           ;main.c: 52:     TRISA = 0;
  3920                           	movlw	low(0)
  3921  001400  0E00               	movwf	((c:3986)),c	;volatile
  3922  001402  6E92               	line	53
  3923                           ;main.c: 53:     TRISB = 0;
  3924                           	movlw	low(0)
  3925  001404  0E00               	movwf	((c:3987)),c	;volatile
  3926  001406  6E93               	line	54
  3927                           ;main.c: 54:     TRISC = 0;
  3928                           	movlw	low(0)
  3929  001408  0E00               	movwf	((c:3988)),c	;volatile
  3930  00140A  6E94               	line	55
  3931                           ;main.c: 55:     TRISD = 0;
  3932                           	movlw	low(0)
  3933  00140C  0E00               	movwf	((c:3989)),c	;volatile
  3934  00140E  6E95               	line	56
  3935                           ;main.c: 56:     TRISE = 0x02;
  3936                           	movlw	low(02h)
  3937  001410  0E02               	movwf	((c:3990)),c	;volatile
  3938  001412  6E96               	line	57
  3939                           ;main.c: 57:     TRISF = 0;
  3940                           	movlw	low(0)
  3941  001414  0E00               	movwf	((c:3991)),c	;volatile
  3942  001416  6E97               	line	58
  3943                           ;main.c: 58:     TRISG = 0;
  3944                           	movlw	low(0)
  3945  001418  0E00               	movwf	((c:3992)),c	;volatile
  3946  00141A  6E98               	line	59
  3947                           ;main.c: 59:     TRISH = 0;
  3948                           	movlw	low(0)
  3949  00141C  0E00               	movwf	((c:3993)),c	;volatile
  3950  00141E  6E99               	line	60
  3951                           ;main.c: 60:     TRISJ = 0;
  3952                           	movlw	low(0)
  3953  001420  0E00               	movwf	((c:3994)),c	;volatile
  3954  001422  6E9A               	line	61
  3955                           ;main.c: 61:     LATA = 0;
  3956                           	movlw	low(0)
  3957  001424  0E00               	movwf	((c:3977)),c	;volatile
  3958  001426  6E89               	line	62
  3959                           ;main.c: 62:     LATA = 0;
  3960                           	movlw	low(0)
  3961  001428  0E00               	movwf	((c:3977)),c	;volatile
  3962  00142A  6E89               	line	63
  3963                           ;main.c: 63:     LATB = 0;
  3964                           	movlw	low(0)
  3965  00142C  0E00               	movwf	((c:3978)),c	;volatile
  3966  00142E  6E8A               	line	64
  3967                           ;main.c: 64:     LATC = 0;
  3968                           	movlw	low(0)
  3969  001430  0E00               	movwf	((c:3979)),c	;volatile
  3970  001432  6E8B               	line	65
  3971                           ;main.c: 65:     LATD = 0;
  3972                           	movlw	low(0)
  3973  001434  0E00               	movwf	((c:3980)),c	;volatile
  3974  001436  6E8C               	line	66
  3975                           ;main.c: 66:     LATE = 0;
  3976                           	movlw	low(0)
  3977  001438  0E00               	movwf	((c:3981)),c	;volatile
  3978  00143A  6E8D               	line	67
  3979                           ;main.c: 67:     LATF = 0;
  3980                           	movlw	low(0)
  3981  00143C  0E00               	movwf	((c:3982)),c	;volatile
  3982  00143E  6E8E               	line	68
  3983                           ;main.c: 68:     LATG = 0;
  3984                           	movlw	low(0)
  3985  001440  0E00               	movwf	((c:3983)),c	;volatile
  3986  001442  6E8F               	line	69
  3987                           ;main.c: 69:     LATH = 0;
  3988                           	movlw	low(0)
  3989  001444  0E00               	movwf	((c:3984)),c	;volatile
  3990  001446  6E90               	line	70
  3991                           ;main.c: 70:     LATJ = 0;
  3992                           	movlw	low(0)
  3993  001448  0E00               	movwf	((c:3985)),c	;volatile
  3994  00144A  6E91               	line	71
  3995                           	
  3996                           l2508:
  3997  00144C                     ;main.c: 71:     LATH0=0x01;
  3998                           	bsf	c:(31872/8),(31872)&7	;volatile
  3999  00144C  8090               	line	73
  4000                           	
  4001                           l2510:
  4002  00144E                     ;main.c: 73:     _delay((unsigned long)((15)*(40000000/4000.0)));
  4003                           	opt asmopt_push
  4004                           opt asmopt_off
  4005                           movlw	195
  4006  00144E  0EC3               movwf	(??_init1+0+0)&0ffh,c,f
  4007  001450  6E1D               	movlw	205
  4008  001452  0ECD               u1777:
  4009  001454                     decfsz	wreg,f
  4010  001454  2EE8               	bra	u1777
  4011  001456  D7FE               	decfsz	(??_init1+0+0)&0ffh,c,f
  4012  001458  2E1D               	bra	u1777
  4013  00145A  D7FC               	nop
  4014  00145C  F000               opt asmopt_pop
  4015                           
  4016                           	line	74
  4017                           	
  4018                           l2512:
  4019  00145E                     ;main.c: 74:     _delay((unsigned long)((15)*(40000000/4000.0)));
  4020                           	opt asmopt_push
  4021                           opt asmopt_off
  4022                           movlw	195
  4023  00145E  0EC3               movwf	(??_init1+0+0)&0ffh,c,f
  4024  001460  6E1D               	movlw	205
  4025  001462  0ECD               u1787:
  4026  001464                     decfsz	wreg,f
  4027  001464  2EE8               	bra	u1787
  4028  001466  D7FE               	decfsz	(??_init1+0+0)&0ffh,c,f
  4029  001468  2E1D               	bra	u1787
  4030  00146A  D7FC               	nop
  4031  00146C  F000               opt asmopt_pop
  4032                           
  4033                           	line	76
  4034                           	
  4035                           l2514:
  4036  00146E                     ;main.c: 76:  PORTD &= 0x0F;
  4037                           	movlw	(0Fh)&0ffh
  4038  00146E  0E0F               	andwf	((c:3971)),c	;volatile
  4039  001470  1683               	line	77
  4040                           	
  4041                           l2516:
  4042  001472                     ;main.c: 77:  PORTD |= 0x30;
  4043                           	movlw	(030h)&0ffh
  4044  001472  0E30               	iorwf	((c:3971)),c	;volatile
  4045  001474  1283               	line	78
  4046                           	
  4047                           l2518:
  4048  001476                     ;main.c: 78:  ToggleEpinOfLCD();
  4049                           	call	_ToggleEpinOfLCD	;wreg free
  4050  001476  EC1B  F00F         	line	80
  4051                           	
  4052                           l2520:
  4053  00147A                     ;main.c: 80:     _delay((unsigned long)((6)*(40000000/4000.0)));
  4054                           	opt asmopt_push
  4055                           opt asmopt_off
  4056                           movlw	78
  4057  00147A  0E4E               movwf	(??_init1+0+0)&0ffh,c,f
  4058  00147C  6E1D               	movlw	235
  4059  00147E  0EEB               u1797:
  4060  001480                     decfsz	wreg,f
  4061  001480  2EE8               	bra	u1797
  4062  001482  D7FE               	decfsz	(??_init1+0+0)&0ffh,c,f
  4063  001484  2E1D               	bra	u1797
  4064  001486  D7FC               	nop
  4065  001488  F000               opt asmopt_pop
  4066                           
  4067                           	line	82
  4068                           	
  4069                           l2522:
  4070  00148A                     ;main.c: 82:  PORTD &= 0x0F;
  4071                           	movlw	(0Fh)&0ffh
  4072  00148A  0E0F               	andwf	((c:3971)),c	;volatile
  4073  00148C  1683               	line	83
  4074                           	
  4075                           l2524:
  4076  00148E                     ;main.c: 83:  PORTD |= 0x30;
  4077                           	movlw	(030h)&0ffh
  4078  00148E  0E30               	iorwf	((c:3971)),c	;volatile
  4079  001490  1283               	line	84
  4080                           	
  4081                           l2526:
  4082  001492                     ;main.c: 84:  ToggleEpinOfLCD();
  4083                           	call	_ToggleEpinOfLCD	;wreg free
  4084  001492  EC1B  F00F         	line	86
  4085                           	
  4086                           l2528:
  4087  001496                     ;main.c: 86:     _delay((unsigned long)((300)*(40000000/4000000.0)));
  4088                           	opt asmopt_push
  4089                           opt asmopt_off
  4090                           movlw	4
  4091  001496  0E04               movwf	(??_init1+0+0)&0ffh,c,f
  4092  001498  6E1D               	movlw	228
  4093  00149A  0EE4               u1807:
  4094  00149C                     decfsz	wreg,f
  4095  00149C  2EE8               	bra	u1807
  4096  00149E  D7FE               	decfsz	(??_init1+0+0)&0ffh,c,f
  4097  0014A0  2E1D               	bra	u1807
  4098  0014A2  D7FC               	nop2
  4099  0014A4  D000               opt asmopt_pop
  4100                           
  4101                           	line	88
  4102                           	
  4103                           l2530:
  4104  0014A6                     ;main.c: 88:  PORTD &= 0x0F;
  4105                           	movlw	(0Fh)&0ffh
  4106  0014A6  0E0F               	andwf	((c:3971)),c	;volatile
  4107  0014A8  1683               	line	89
  4108                           	
  4109                           l2532:
  4110  0014AA                     ;main.c: 89:  PORTD |= 0x30;
  4111                           	movlw	(030h)&0ffh
  4112  0014AA  0E30               	iorwf	((c:3971)),c	;volatile
  4113  0014AC  1283               	line	90
  4114                           	
  4115                           l2534:
  4116  0014AE                     ;main.c: 90:  ToggleEpinOfLCD();
  4117                           	call	_ToggleEpinOfLCD	;wreg free
  4118  0014AE  EC1B  F00F         	line	92
  4119                           	
  4120                           l2536:
  4121  0014B2                     ;main.c: 92:     _delay((unsigned long)((2)*(40000000/4000.0)));
  4122                           	opt asmopt_push
  4123                           opt asmopt_off
  4124                           movlw	26
  4125  0014B2  0E1A               movwf	(??_init1+0+0)&0ffh,c,f
  4126  0014B4  6E1D               	movlw	248
  4127  0014B6  0EF8               u1817:
  4128  0014B8                     decfsz	wreg,f
  4129  0014B8  2EE8               	bra	u1817
  4130  0014BA  D7FE               	decfsz	(??_init1+0+0)&0ffh,c,f
  4131  0014BC  2E1D               	bra	u1817
  4132  0014BE  D7FC               	nop2
  4133  0014C0  D000               opt asmopt_pop
  4134                           
  4135                           	line	94
  4136                           	
  4137                           l2538:
  4138  0014C2                     ;main.c: 94:  PORTD &= 0x0F;
  4139                           	movlw	(0Fh)&0ffh
  4140  0014C2  0E0F               	andwf	((c:3971)),c	;volatile
  4141  0014C4  1683               	line	95
  4142                           	
  4143                           l2540:
  4144  0014C6                     ;main.c: 95:  PORTD |= 0x20;
  4145                           	bsf	(0+(5/8)+(c:3971)),c,(5)&7	;volatile
  4146  0014C6  8A83               	line	96
  4147                           	
  4148                           l2542:
  4149  0014C8                     ;main.c: 96:  ToggleEpinOfLCD();
  4150                           	call	_ToggleEpinOfLCD	;wreg free
  4151  0014C8  EC1B  F00F         	line	98
  4152                           	
  4153                           l2544:
  4154  0014CC                     ;main.c: 98:  _delay((unsigned long)((2)*(40000000/4000.0)));
  4155                           	opt asmopt_push
  4156                           opt asmopt_off
  4157                           movlw	26
  4158  0014CC  0E1A               movwf	(??_init1+0+0)&0ffh,c,f
  4159  0014CE  6E1D               	movlw	248
  4160  0014D0  0EF8               u1827:
  4161  0014D2                     decfsz	wreg,f
  4162  0014D2  2EE8               	bra	u1827
  4163  0014D4  D7FE               	decfsz	(??_init1+0+0)&0ffh,c,f
  4164  0014D6  2E1D               	bra	u1827
  4165  0014D8  D7FC               	nop2
  4166  0014DA  D000               opt asmopt_pop
  4167                           
  4168                           	line	100
  4169                           	
  4170                           l2546:
  4171  0014DC                     ;main.c: 100:  WriteCommandToLCD(0x2C);
  4172                           	movlw	(02Ch)&0ffh
  4173  0014DC  0E2C               	
  4174                           	call	_WriteCommandToLCD
  4175  0014DE  EC05  F00F         	line	101
  4176                           	
  4177                           l2548:
  4178  0014E2                     ;main.c: 101:  WriteCommandToLCD(0x0C);
  4179                           	movlw	(0Ch)&0ffh
  4180  0014E2  0E0C               	
  4181                           	call	_WriteCommandToLCD
  4182  0014E4  EC05  F00F         	line	102
  4183                           	
  4184                           l2550:
  4185  0014E8                     ;main.c: 102:  WriteCommandToLCD(0x01);
  4186                           	movlw	(01h)&0ffh
  4187  0014E8  0E01               	
  4188                           	call	_WriteCommandToLCD
  4189  0014EA  EC05  F00F         	line	103
  4190                           	
  4191                           l2552:
  4192  0014EE                     ;main.c: 103:     WriteCommandToLCD(0x80);
  4193                           	movlw	(080h)&0ffh
  4194  0014EE  0E80               	
  4195                           	call	_WriteCommandToLCD
  4196  0014F0  EC05  F00F         	line	104
  4197                           	
  4198                           l2554:
  4199  0014F4                     ;main.c: 104:     WriteStringToLCD(electroVote);
  4200                           		movlw	low(_electroVote)
  4201  0014F4  0E59               	movwf	((c:WriteStringToLCD@s)),c
  4202  0014F6  6E1B               	movlw	high(_electroVote)
  4203  0014F8  0E10               	movwf	((c:WriteStringToLCD@s+1)),c
  4204  0014FA  6E1C               
  4205                           	call	_WriteStringToLCD	;wreg free
  4206  0014FC  EC3A  F00E         	line	105
  4207                           	
  4208                           l2556:
  4209  001500                     ;main.c: 105:     WriteCommandToLCD(0xC0);
  4210                           	movlw	(0C0h)&0ffh
  4211  001500  0EC0               	
  4212                           	call	_WriteCommandToLCD
  4213  001502  EC05  F00F         	line	106
  4214                           	
  4215                           l2558:
  4216  001506                     ;main.c: 106:     WriteStringToLCD(emptyline);
  4217                           		movlw	low(_emptyline)
  4218  001506  0E39               	movwf	((c:WriteStringToLCD@s)),c
  4219  001508  6E1B               	movlw	high(_emptyline)
  4220  00150A  0E10               	movwf	((c:WriteStringToLCD@s+1)),c
  4221  00150C  6E1C               
  4222                           	call	_WriteStringToLCD	;wreg free
  4223  00150E  EC3A  F00E         	line	107
  4224                           	
  4225                           l175:
  4226  001512                     	return	;funcret
  4227  001512  0012               	opt stack 0
  4228                           GLOBAL	__end_of_init1
  4229                           	__end_of_init1:
  4230  001514                     	signat	_init1,89
  4231                           	global	_WriteStringToLCD
  4232                           
  4233 ;; *************** function _WriteStringToLCD *****************
  4234 ;; Defined at:
  4235 ;;		line 118 in file "LCD.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  s               2   26[COMRAM] PTR const unsigned char 
  4238 ;;		 -> enterVotersText(16), names(56), ids(24), STR_1(14), 
  4239 ;;		 -> emptyline(16), electroVote(16), 
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;		None
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  1    wreg      void 
  4244 ;; Registers used:
  4245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  4251 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4254 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4255 ;;Total ram usage:        2 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:    5
  4258 ;; This function calls:
  4259 ;;		_WriteDataToLCD
  4260 ;; This function is called by:
  4261 ;;		_init1
  4262 ;;		_refreshTimeLeft
  4263 ;;		_refreshPerson
  4264 ;;		_init2
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           psect	text10,class=CODE,space=0,reloc=2,group=0
  4268                           	file	"LCD.c"
  4269                           	line	118
  4270                           global __ptext10
  4271                           __ptext10:
  4272  001C74                     psect	text10
  4273                           	file	"LCD.c"
  4274                           	line	118
  4275                           	global	__size_of_WriteStringToLCD
  4276                           	__size_of_WriteStringToLCD	equ	__end_of_WriteStringToLCD-_WriteStringToLCD
  4277  0000                     	
  4278                           _WriteStringToLCD:
  4279  001C74                     ;incstack = 0
  4280                           	opt	stack 24
  4281                           	line	120
  4282                           	
  4283                           l2392:
  4284  001C74                     ;LCD.c: 118: void WriteStringToLCD(const char *s);LCD.c: 119: {;LCD.c: 120:     while(*s
                                 )
  4285                           	goto	l2398
  4286  001C74  EF53  F00E         	
  4287                           l357:
  4288  001C78                     	line	121
  4289                           	
  4290                           l2394:
  4291  001C78                     ;LCD.c: 121:         WriteDataToLCD(*s++);
  4292                           	movff	(c:WriteStringToLCD@s),tblptrl
  4293  001C78  C01B  FFF6         	movff	(c:WriteStringToLCD@s+1),tblptrh
  4294  001C7C  C01C  FFF7         	movlw	low highword(__smallconst)
  4295  001C80  0E00               	movwf	tblptru
  4296  001C82  6EF8               	
  4297                           	movlw	high __ramtop-1
  4298  001C84  0E0F               	cpfsgt	tblptrh
  4299  001C86  64F7               	bra	u1497
  4300  001C88  D003               	tblrd	*
  4301  001C8A  0008               	
  4302                           	movf	tablat,w
  4303  001C8C  50F5               	bra	u1490
  4304  001C8E  D005               u1497:
  4305  001C90                     	movff	tblptrl,fsr0l
  4306  001C90  CFF6 FFE9          	movff	tblptrh,fsr0h
  4307  001C94  CFF7 FFEA          	movf	indf0,w
  4308  001C98  50EF               u1490:
  4309  001C9A                     	
  4310                           	call	_WriteDataToLCD
  4311  001C9A  ECEF  F00E         	
  4312                           l2396:
  4313  001C9E                     	infsnz	((c:WriteStringToLCD@s)),c
  4314  001C9E  4A1B               	incf	((c:WriteStringToLCD@s+1)),c
  4315  001CA0  2A1C               	goto	l2398
  4316  001CA2  EF53  F00E         	
  4317                           l356:
  4318  001CA6                     	line	120
  4319                           	
  4320                           l2398:
  4321  001CA6                     ;LCD.c: 120:     while(*s)
  4322                           	movff	(c:WriteStringToLCD@s),tblptrl
  4323  001CA6  C01B  FFF6         	movff	(c:WriteStringToLCD@s+1),tblptrh
  4324  001CAA  C01C  FFF7         	movlw	low highword(__smallconst)
  4325  001CAE  0E00               	movwf	tblptru
  4326  001CB0  6EF8               	
  4327                           	movlw	high __ramtop-1
  4328  001CB2  0E0F               	cpfsgt	tblptrh
  4329  001CB4  64F7               	bra	u1507
  4330  001CB6  D003               	tblrd	*
  4331  001CB8  0008               	
  4332                           	movf	tablat,w
  4333  001CBA  50F5               	bra	u1500
  4334  001CBC  D005               u1507:
  4335  001CBE                     	movff	tblptrl,fsr0l
  4336  001CBE  CFF6 FFE9          	movff	tblptrh,fsr0h
  4337  001CC2  CFF7 FFEA          	movf	indf0,w
  4338  001CC6  50EF               u1500:
  4339  001CC8                     	iorlw	0
  4340  001CC8  0900               	btfss	status,2
  4341  001CCA  A4D8               	goto	u1511
  4342  001CCC  EF6A  F00E         	goto	u1510
  4343  001CD0  EF6C  F00E         u1511:
  4344  001CD4                     	goto	l2394
  4345  001CD4  EF3C  F00E         u1510:
  4346  001CD8                     	goto	l359
  4347  001CD8  EF6E  F00E         	
  4348                           l358:
  4349  001CDC                     	line	122
  4350                           	
  4351                           l359:
  4352  001CDC                     	return	;funcret
  4353  001CDC  0012               	opt stack 0
  4354                           GLOBAL	__end_of_WriteStringToLCD
  4355                           	__end_of_WriteStringToLCD:
  4356  001CDE                     	signat	_WriteStringToLCD,4217
  4357                           	global	_WriteDataToLCD
  4358                           
  4359 ;; *************** function _WriteDataToLCD *****************
  4360 ;; Defined at:
  4361 ;;		line 31 in file "LCD.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;  LCDChar         1    wreg     unsigned char 
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;  LCDChar         1   25[COMRAM] unsigned char 
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  1    wreg      void 
  4368 ;; Registers used:
  4369 ;;		wreg, status,2, status,0, cstack
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  4375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4376 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4378 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4379 ;;Total ram usage:        1 bytes
  4380 ;; Hardware stack levels used:    1
  4381 ;; Hardware stack levels required when called:    4
  4382 ;; This function calls:
  4383 ;;		_ToggleEpinOfLCD
  4384 ;; This function is called by:
  4385 ;;		_numToStringPrint
  4386 ;;		_refreshTimeLeft
  4387 ;;		_refreshPerson
  4388 ;;		_main
  4389 ;;		_WriteStringToLCD
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           psect	text11,class=CODE,space=0,reloc=2,group=0
  4393                           	line	31
  4394                           global __ptext11
  4395                           __ptext11:
  4396  001DDE                     psect	text11
  4397                           	file	"LCD.c"
  4398                           	line	31
  4399                           	global	__size_of_WriteDataToLCD
  4400                           	__size_of_WriteDataToLCD	equ	__end_of_WriteDataToLCD-_WriteDataToLCD
  4401  0000                     	
  4402                           _WriteDataToLCD:
  4403  001DDE                     ;incstack = 0
  4404                           	opt	stack 24
  4405                           ;WriteDataToLCD@LCDChar stored from wreg
  4406                           	movwf	((c:WriteDataToLCD@LCDChar)),c
  4407  001DDE  6E1A               	line	33
  4408                           	
  4409                           l2380:
  4410  001DE0                     ;LCD.c: 31: void WriteDataToLCD(char LCDChar);LCD.c: 32: {;LCD.c: 33:     LATB2 = 1;
  4411                           	bsf	c:(31826/8),(31826)&7	;volatile
  4412  001DE0  848A               	line	35
  4413                           	
  4414                           l2382:
  4415  001DE2                     ;LCD.c: 35:     PORTD = PORTD & 0x0F;
  4416                           	movf	((c:3971)),c,w	;volatile
  4417  001DE2  5083               	andlw	low(0Fh)
  4418  001DE4  0B0F               	movwf	((c:3971)),c	;volatile
  4419  001DE6  6E83               	line	36
  4420                           ;LCD.c: 36:     PORTD = PORTD | (LCDChar&0xF0);
  4421                           	movf	((c:WriteDataToLCD@LCDChar)),c,w
  4422  001DE8  501A               	andlw	low(0F0h)
  4423  001DEA  0BF0               	iorwf	((c:3971)),c,w	;volatile
  4424  001DEC  1083               	movwf	((c:3971)),c	;volatile
  4425  001DEE  6E83               	line	37
  4426                           	
  4427                           l2384:
  4428  001DF0                     ;LCD.c: 37:     ToggleEpinOfLCD();
  4429                           	call	_ToggleEpinOfLCD	;wreg free
  4430  001DF0  EC1B  F00F         	line	39
  4431                           	
  4432                           l2386:
  4433  001DF4                     ;LCD.c: 39:     PORTD = PORTD & 0x0F;
  4434                           	movf	((c:3971)),c,w	;volatile
  4435  001DF4  5083               	andlw	low(0Fh)
  4436  001DF6  0B0F               	movwf	((c:3971)),c	;volatile
  4437  001DF8  6E83               	line	40
  4438                           	
  4439                           l2388:
  4440  001DFA                     ;LCD.c: 40:     PORTD = PORTD | ((LCDChar<<4)& 0xF0);
  4441                           	swapf	((c:WriteDataToLCD@LCDChar)),c,w
  4442  001DFA  381A               	andlw	(0ffh shl 4) & 0ffh
  4443  001DFC  0BF0               	andlw	low(0F0h)
  4444  001DFE  0BF0               	iorwf	((c:3971)),c,w	;volatile
  4445  001E00  1083               	movwf	((c:3971)),c	;volatile
  4446  001E02  6E83               	line	43
  4447                           	
  4448                           l2390:
  4449  001E04                     ;LCD.c: 43:     ToggleEpinOfLCD();
  4450                           	call	_ToggleEpinOfLCD	;wreg free
  4451  001E04  EC1B  F00F         	line	44
  4452                           	
  4453                           l350:
  4454  001E08                     	return	;funcret
  4455  001E08  0012               	opt stack 0
  4456                           GLOBAL	__end_of_WriteDataToLCD
  4457                           	__end_of_WriteDataToLCD:
  4458  001E0A                     	signat	_WriteDataToLCD,4217
  4459                           	global	_WriteCommandToLCD
  4460                           
  4461 ;; *************** function _WriteCommandToLCD *****************
  4462 ;; Defined at:
  4463 ;;		line 17 in file "LCD.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;  Command         1    wreg     unsigned char 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  Command         1   25[COMRAM] unsigned char 
  4468 ;; Return value:  Size  Location     Type
  4469 ;;                  1    wreg      void 
  4470 ;; Registers used:
  4471 ;;		wreg, status,2, status,0, cstack
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  4477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4478 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4480 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4481 ;;Total ram usage:        1 bytes
  4482 ;; Hardware stack levels used:    1
  4483 ;; Hardware stack levels required when called:    4
  4484 ;; This function calls:
  4485 ;;		_ToggleEpinOfLCD
  4486 ;; This function is called by:
  4487 ;;		_init1
  4488 ;;		_numToStringPrint
  4489 ;;		_refreshTimeLeft
  4490 ;;		_refreshPerson
  4491 ;;		_init2
  4492 ;;		_main
  4493 ;;		_ClearLCDScreen
  4494 ;;		_InitLCD
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           psect	text12,class=CODE,space=0,reloc=2,group=0
  4498                           	line	17
  4499                           global __ptext12
  4500                           __ptext12:
  4501  001E0A                     psect	text12
  4502                           	file	"LCD.c"
  4503                           	line	17
  4504                           	global	__size_of_WriteCommandToLCD
  4505                           	__size_of_WriteCommandToLCD	equ	__end_of_WriteCommandToLCD-_WriteCommandToLCD
  4506  0000                     	
  4507                           _WriteCommandToLCD:
  4508  001E0A                     ;incstack = 0
  4509                           	opt	stack 25
  4510                           ;WriteCommandToLCD@Command stored from wreg
  4511                           	movwf	((c:WriteCommandToLCD@Command)),c
  4512  001E0A  6E1A               	line	19
  4513                           	
  4514                           l2368:
  4515  001E0C                     ;LCD.c: 17: void WriteCommandToLCD(unsigned char Command);LCD.c: 18: {;LCD.c: 19:     LA
                                 TB2 = 0;
  4516                           	bcf	c:(31826/8),(31826)&7	;volatile
  4517  001E0C  948A               	line	21
  4518                           	
  4519                           l2370:
  4520  001E0E                     ;LCD.c: 21:     PORTD = PORTD & 0x0F;
  4521                           	movf	((c:3971)),c,w	;volatile
  4522  001E0E  5083               	andlw	low(0Fh)
  4523  001E10  0B0F               	movwf	((c:3971)),c	;volatile
  4524  001E12  6E83               	line	22
  4525                           ;LCD.c: 22:     PORTD = PORTD |(Command&0xF0);
  4526                           	movf	((c:WriteCommandToLCD@Command)),c,w
  4527  001E14  501A               	andlw	low(0F0h)
  4528  001E16  0BF0               	iorwf	((c:3971)),c,w	;volatile
  4529  001E18  1083               	movwf	((c:3971)),c	;volatile
  4530  001E1A  6E83               	line	23
  4531                           	
  4532                           l2372:
  4533  001E1C                     ;LCD.c: 23:     ToggleEpinOfLCD();
  4534                           	call	_ToggleEpinOfLCD	;wreg free
  4535  001E1C  EC1B  F00F         	line	25
  4536                           	
  4537                           l2374:
  4538  001E20                     ;LCD.c: 25:     PORTD = PORTD & 0x0F;
  4539                           	movf	((c:3971)),c,w	;volatile
  4540  001E20  5083               	andlw	low(0Fh)
  4541  001E22  0B0F               	movwf	((c:3971)),c	;volatile
  4542  001E24  6E83               	line	26
  4543                           	
  4544                           l2376:
  4545  001E26                     ;LCD.c: 26:     PORTD = PORTD | ((Command<<4)&0xF0);
  4546                           	swapf	((c:WriteCommandToLCD@Command)),c,w
  4547  001E26  381A               	andlw	(0ffh shl 4) & 0ffh
  4548  001E28  0BF0               	andlw	low(0F0h)
  4549  001E2A  0BF0               	iorwf	((c:3971)),c,w	;volatile
  4550  001E2C  1083               	movwf	((c:3971)),c	;volatile
  4551  001E2E  6E83               	line	28
  4552                           	
  4553                           l2378:
  4554  001E30                     ;LCD.c: 28:     ToggleEpinOfLCD();
  4555                           	call	_ToggleEpinOfLCD	;wreg free
  4556  001E30  EC1B  F00F         	line	29
  4557                           	
  4558                           l347:
  4559  001E34                     	return	;funcret
  4560  001E34  0012               	opt stack 0
  4561                           GLOBAL	__end_of_WriteCommandToLCD
  4562                           	__end_of_WriteCommandToLCD:
  4563  001E36                     	signat	_WriteCommandToLCD,4217
  4564                           	global	_ToggleEpinOfLCD
  4565                           
  4566 ;; *************** function _ToggleEpinOfLCD *****************
  4567 ;; Defined at:
  4568 ;;		line 5 in file "LCD.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;		None
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;		None
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1    wreg      void 
  4575 ;; Registers used:
  4576 ;;		wreg
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  4582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4584 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4585 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4586 ;;Total ram usage:        1 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    3
  4589 ;; This function calls:
  4590 ;;		Nothing
  4591 ;; This function is called by:
  4592 ;;		_init1
  4593 ;;		_WriteCommandToLCD
  4594 ;;		_WriteDataToLCD
  4595 ;;		_InitLCD
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           psect	text13,class=CODE,space=0,reloc=2,group=0
  4599                           	line	5
  4600                           global __ptext13
  4601                           __ptext13:
  4602  001E36                     psect	text13
  4603                           	file	"LCD.c"
  4604                           	line	5
  4605                           	global	__size_of_ToggleEpinOfLCD
  4606                           	__size_of_ToggleEpinOfLCD	equ	__end_of_ToggleEpinOfLCD-_ToggleEpinOfLCD
  4607  0000                     	
  4608                           _ToggleEpinOfLCD:
  4609  001E36                     ;incstack = 0
  4610                           	opt	stack 24
  4611                           	line	7
  4612                           	
  4613                           l2358:
  4614  001E36                     ;LCD.c: 7:     INTCONbits.RBIE=0x00;
  4615                           	bcf	((c:4082)),c,3	;volatile
  4616  001E36  96F2               	line	8
  4617                           ;LCD.c: 8:     LATB5 = 1;
  4618                           	bsf	c:(31829/8),(31829)&7	;volatile
  4619  001E38  8A8A               	line	9
  4620                           ;LCD.c: 9:     INTCONbits.RBIE=0x01;
  4621                           	bsf	((c:4082)),c,3	;volatile
  4622  001E3A  86F2               	line	10
  4623                           	
  4624                           l2360:
  4625  001E3C                     ;LCD.c: 10:     _delay((unsigned long)((1000)*(40000000/4000000.0)));
  4626                           	opt asmopt_push
  4627                           opt asmopt_off
  4628                           movlw	13
  4629  001E3C  0E0D               movwf	(??_ToggleEpinOfLCD+0+0)&0ffh,c,f
  4630  001E3E  6E19               	movlw	252
  4631  001E40  0EFC               u1837:
  4632  001E42                     decfsz	wreg,f
  4633  001E42  2EE8               	bra	u1837
  4634  001E44  D7FE               	decfsz	(??_ToggleEpinOfLCD+0+0)&0ffh,c,f
  4635  001E46  2E19               	bra	u1837
  4636  001E48  D7FC               opt asmopt_pop
  4637                           
  4638                           	line	11
  4639                           	
  4640                           l2362:
  4641  001E4A                     ;LCD.c: 11:     INTCONbits.RBIE=0x00;
  4642                           	bcf	((c:4082)),c,3	;volatile
  4643  001E4A  96F2               	line	12
  4644                           	
  4645                           l2364:
  4646  001E4C                     ;LCD.c: 12:     LATB5 = 0;
  4647                           	bcf	c:(31829/8),(31829)&7	;volatile
  4648  001E4C  9A8A               	line	13
  4649                           	
  4650                           l2366:
  4651  001E4E                     ;LCD.c: 13:     INTCONbits.RBIE=0x01;
  4652                           	bsf	((c:4082)),c,3	;volatile
  4653  001E4E  86F2               	line	14
  4654                           ;LCD.c: 14:     _delay((unsigned long)((1000)*(40000000/4000000.0)));
  4655                           	opt asmopt_push
  4656                           opt asmopt_off
  4657                           movlw	13
  4658  001E50  0E0D               movwf	(??_ToggleEpinOfLCD+0+0)&0ffh,c,f
  4659  001E52  6E19               	movlw	252
  4660  001E54  0EFC               u1847:
  4661  001E56                     decfsz	wreg,f
  4662  001E56  2EE8               	bra	u1847
  4663  001E58  D7FE               	decfsz	(??_ToggleEpinOfLCD+0+0)&0ffh,c,f
  4664  001E5A  2E19               	bra	u1847
  4665  001E5C  D7FC               opt asmopt_pop
  4666                           
  4667                           	line	15
  4668                           	
  4669                           l344:
  4670  001E5E                     	return	;funcret
  4671  001E5E  0012               	opt stack 0
  4672                           GLOBAL	__end_of_ToggleEpinOfLCD
  4673                           	__end_of_ToggleEpinOfLCD:
  4674  001E60                     	signat	_ToggleEpinOfLCD,89
  4675                           	global	_enableTimers
  4676                           
  4677 ;; *************** function _enableTimers *****************
  4678 ;; Defined at:
  4679 ;;		line 170 in file "main.c"
  4680 ;; Parameters:    Size  Location     Type
  4681 ;;		None
  4682 ;; Auto vars:     Size  Location     Type
  4683 ;;		None
  4684 ;; Return value:  Size  Location     Type
  4685 ;;                  1    wreg      void 
  4686 ;; Registers used:
  4687 ;;		wreg, status,2
  4688 ;; Tracked objects:
  4689 ;;		On entry : 0/0
  4690 ;;		On exit  : 0/0
  4691 ;;		Unchanged: 0/0
  4692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  4693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4697 ;;Total ram usage:        0 bytes
  4698 ;; Hardware stack levels used:    1
  4699 ;; Hardware stack levels required when called:    3
  4700 ;; This function calls:
  4701 ;;		Nothing
  4702 ;; This function is called by:
  4703 ;;		_main
  4704 ;; This function uses a non-reentrant model
  4705 ;;
  4706                           psect	text14,class=CODE,space=0,reloc=2,group=0
  4707                           	file	"main.c"
  4708                           	line	170
  4709                           global __ptext14
  4710                           __ptext14:
  4711  001E86                     psect	text14
  4712                           	file	"main.c"
  4713                           	line	170
  4714                           	global	__size_of_enableTimers
  4715                           	__size_of_enableTimers	equ	__end_of_enableTimers-_enableTimers
  4716  0000                     	
  4717                           _enableTimers:
  4718  001E86                     ;incstack = 0
  4719                           	opt	stack 27
  4720                           	line	171
  4721                           	
  4722                           l1390:
  4723  001E86                     ;main.c: 171:     INTCON2bits.TMR0IP = 1;
  4724                           	bsf	((c:4081)),c,2	;volatile
  4725  001E86  84F1               	line	172
  4726                           ;main.c: 172:     IPR1bits.TMR1IP = 1;
  4727                           	bsf	((c:3999)),c,0	;volatile
  4728  001E88  809F               	line	174
  4729                           	
  4730                           l1392:
  4731  001E8A                     ;main.c: 174:     T0CON = 0xC5;
  4732                           	movlw	low(0C5h)
  4733  001E8A  0EC5               	movwf	((c:4053)),c	;volatile
  4734  001E8C  6ED5               	line	175
  4735                           	
  4736                           l1394:
  4737  001E8E                     ;main.c: 175:     T1CONbits.RD16 = 1;
  4738                           	bsf	((c:4045)),c,7	;volatile
  4739  001E8E  8ECD               	line	176
  4740                           	
  4741                           l1396:
  4742  001E90                     ;main.c: 176:     T1CONbits.T1RUN = 1;
  4743                           	bsf	((c:4045)),c,6	;volatile
  4744  001E90  8CCD               	line	178
  4745                           ;main.c: 178:     TMR0 = 0;
  4746                           	movlw	high(0)
  4747  001E92  0E00               	movwf	((c:4054+1)),c	;volatile
  4748  001E94  6ED7               	movlw	low(0)
  4749  001E96  0E00               	movwf	((c:4054)),c	;volatile
  4750  001E98  6ED6               	line	179
  4751                           ;main.c: 179:     TMR1 = 0;
  4752                           	movlw	high(0)
  4753  001E9A  0E00               	movwf	((c:4046+1)),c	;volatile
  4754  001E9C  6ECF               	movlw	low(0)
  4755  001E9E  0E00               	movwf	((c:4046)),c	;volatile
  4756  001EA0  6ECE               	line	180
  4757                           	
  4758                           l1398:
  4759  001EA2                     ;main.c: 180:     PIE1bits.TMR1IE = 1;
  4760                           	bsf	((c:3997)),c,0	;volatile
  4761  001EA2  809D               	line	181
  4762                           	
  4763                           l1400:
  4764  001EA4                     ;main.c: 181:     INTCONbits.TMR0IE = 1;
  4765                           	bsf	((c:4082)),c,5	;volatile
  4766  001EA4  8AF2               	line	182
  4767                           	
  4768                           l1402:
  4769  001EA6                     ;main.c: 182:     T0CONbits.TMR0ON = 1;
  4770                           	bsf	((c:4053)),c,7	;volatile
  4771  001EA6  8ED5               	line	183
  4772                           	
  4773                           l1404:
  4774  001EA8                     ;main.c: 183:     T1CONbits.TMR1ON = 1;
  4775                           	bsf	((c:4045)),c,0	;volatile
  4776  001EA8  80CD               	line	184
  4777                           	
  4778                           l190:
  4779  001EAA                     	return	;funcret
  4780  001EAA  0012               	opt stack 0
  4781                           GLOBAL	__end_of_enableTimers
  4782                           	__end_of_enableTimers:
  4783  001EAC                     	signat	_enableTimers,89
  4784                           	global	_decrementTime
  4785                           
  4786 ;; *************** function _decrementTime *****************
  4787 ;; Defined at:
  4788 ;;		line 267 in file "main.c"
  4789 ;; Parameters:    Size  Location     Type
  4790 ;;		None
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;		None
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  1    wreg      void 
  4795 ;; Registers used:
  4796 ;;		wreg, status,2, status,0
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  4802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4806 ;;Total ram usage:        0 bytes
  4807 ;; Hardware stack levels used:    1
  4808 ;; Hardware stack levels required when called:    3
  4809 ;; This function calls:
  4810 ;;		Nothing
  4811 ;; This function is called by:
  4812 ;;		_main
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           psect	text15,class=CODE,space=0,reloc=2,group=0
  4816                           	line	267
  4817                           global __ptext15
  4818                           __ptext15:
  4819  001D38                     psect	text15
  4820                           	file	"main.c"
  4821                           	line	267
  4822                           	global	__size_of_decrementTime
  4823                           	__size_of_decrementTime	equ	__end_of_decrementTime-_decrementTime
  4824  0000                     	
  4825                           _decrementTime:
  4826  001D38                     ;incstack = 0
  4827                           	opt	stack 27
  4828                           	line	269
  4829                           	
  4830                           l1484:
  4831  001D38                     ;main.c: 269:     if(timeL == 0)
  4832                           	movf	((c:_timeL)),c,w	;volatile
  4833  001D38  5045               	btfss	status,2
  4834  001D3A  A4D8               	goto	u391
  4835  001D3C  EFA2  F00E         	goto	u390
  4836  001D40  EFA4  F00E         u391:
  4837  001D44                     	goto	l1494
  4838  001D44  EFB7  F00E         u390:
  4839  001D48                     	line	271
  4840                           	
  4841                           l1486:
  4842  001D48                     ;main.c: 270:     {;main.c: 271:         if(timeH==0)
  4843                           	movf	((c:_timeH)),c,w	;volatile
  4844  001D48  5046               	btfss	status,2
  4845  001D4A  A4D8               	goto	u401
  4846  001D4C  EFAA  F00E         	goto	u400
  4847  001D50  EFAC  F00E         u401:
  4848  001D54                     	goto	l1490
  4849  001D54  EFB0  F00E         u400:
  4850  001D58                     	line	273
  4851                           	
  4852                           l1488:
  4853  001D58                     ;main.c: 272:         {;main.c: 273:             voteEnds=1;
  4854                           	movlw	low(01h)
  4855  001D58  0E01               	movwf	((c:_voteEnds)),c	;volatile
  4856  001D5A  6E2C               	line	274
  4857                           ;main.c: 274:         }
  4858                           	goto	l228
  4859  001D5C  EFBA  F00E         	line	275
  4860                           ;main.c: 275:         else
  4861                           	
  4862                           l225:
  4863  001D60                     	line	277
  4864                           	
  4865                           l1490:
  4866  001D60                     ;main.c: 276:         {;main.c: 277:             timeH--;
  4867                           	decf	((c:_timeH)),c	;volatile
  4868  001D60  0646               	line	278
  4869                           	
  4870                           l1492:
  4871  001D62                     ;main.c: 278:             timeL=9;
  4872                           	movlw	low(09h)
  4873  001D62  0E09               	movwf	((c:_timeL)),c	;volatile
  4874  001D64  6E45               	goto	l228
  4875  001D66  EFBA  F00E         	line	279
  4876                           ;main.c: 279:         }
  4877                           	
  4878                           l226:
  4879  001D6A                     	line	280
  4880                           ;main.c: 280:     }
  4881                           	goto	l228
  4882  001D6A  EFBA  F00E         	line	281
  4883                           ;main.c: 281:     else
  4884                           	
  4885                           l224:
  4886  001D6E                     	line	283
  4887                           	
  4888                           l1494:
  4889  001D6E                     ;main.c: 282:     {;main.c: 283:         timeL--;
  4890                           	decf	((c:_timeL)),c	;volatile
  4891  001D6E  0645               	goto	l228
  4892  001D70  EFBA  F00E         	line	284
  4893                           ;main.c: 284:     }
  4894                           	
  4895                           l227:
  4896  001D74                     	line	285
  4897                           	
  4898                           l228:
  4899  001D74                     	return	;funcret
  4900  001D74  0012               	opt stack 0
  4901                           GLOBAL	__end_of_decrementTime
  4902                           	__end_of_decrementTime:
  4903  001D76                     	signat	_decrementTime,89
  4904                           	global	_highISR
  4905                           
  4906 ;; *************** function _highISR *****************
  4907 ;; Defined at:
  4908 ;;		line 287 in file "main.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;		None
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  value           2   22[COMRAM] unsigned int 
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  1    wreg      void 
  4915 ;; Registers used:
  4916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  4922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4923 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4924 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4925 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4926 ;;Total ram usage:       11 bytes
  4927 ;; Hardware stack levels used:    1
  4928 ;; Hardware stack levels required when called:    2
  4929 ;; This function calls:
  4930 ;;		_enableADC
  4931 ;;		_incrementDigit
  4932 ;;		_refreshSevenSegment
  4933 ;; This function is called by:
  4934 ;;		Interrupt level 2
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           psect	intcode,class=CODE,space=0,reloc=2
  4938                           global __pintcode
  4939                           __pintcode:
  4940  000008                     psect	intcode
  4941                           	file	"main.c"
  4942                           	line	287
  4943                           	global	__size_of_highISR
  4944                           	__size_of_highISR	equ	__end_of_highISR-_highISR
  4945  0000                     	
  4946                           _highISR:
  4947  000008                     ;incstack = 0
  4948                           	opt	stack 24
  4949                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  4950  000008  8247               	global	int_func
  4951                           	call	int_func,f	;refresh shadow registers
  4952  00000A  ED3C  F008         psect	intcode_body,class=CODE,space=0,reloc=2
  4953                           global __pintcode_body
  4954                           __pintcode_body:
  4955  001078                     int_func:
  4956  001078                     
  4957                           	pop	; remove dummy address from shadow register refresh
  4958  001078  0006               	movff	fsr1l+0,??_highISR+3
  4959  00107A  CFE1 F011          	movff	fsr1h+0,??_highISR+4
  4960  00107E  CFE2 F012          	movff	fsr2l+0,??_highISR+5
  4961  001082  CFD9 F013          	movff	fsr2h+0,??_highISR+6
  4962  001086  CFDA F014          	movff	prodl+0,??_highISR+7
  4963  00108A  CFF3 F015          	movff	prodh+0,??_highISR+8
  4964  00108E  CFF4 F016          	line	288
  4965                           	
  4966                           i2l2122:
  4967  001092                     ;main.c: 288:     if (TMR1IE && TMR1IF) {
  4968                           	btfss	c:(31976/8),(31976)&7	;volatile
  4969  001092  A09D               	goto	i2u112_41
  4970  001094  EF4E  F008         	goto	i2u112_40
  4971  001098  EF50  F008         i2u112_41:
  4972  00109C                     	goto	i2l2138
  4973  00109C  EF75  F008         i2u112_40:
  4974  0010A0                     	
  4975                           i2l2124:
  4976  0010A0                     	btfss	c:(31984/8),(31984)&7	;volatile
  4977  0010A0  A09E               	goto	i2u113_41
  4978  0010A2  EF55  F008         	goto	i2u113_40
  4979  0010A6  EF57  F008         i2u113_41:
  4980  0010AA                     	goto	i2l2138
  4981  0010AA  EF75  F008         i2u113_40:
  4982  0010AE                     	line	289
  4983                           	
  4984                           i2l2126:
  4985  0010AE                     ;main.c: 289:         TMR1IF = 0;
  4986                           	bcf	c:(31984/8),(31984)&7	;volatile
  4987  0010AE  909E               	line	290
  4988                           	
  4989                           i2l2128:
  4990  0010B0                     ;main.c: 290:         tmr1count++;
  4991                           	incf	((c:_tmr1count)),c	;volatile
  4992  0010B0  2A33               	line	291
  4993                           	
  4994                           i2l2130:
  4995  0010B2                     ;main.c: 291:         if(tmr1count==152)
  4996                           		movlw	152
  4997  0010B2  0E98               	xorwf	((c:_tmr1count)),c,w	;volatile
  4998  0010B4  1833               	btfss	status,2
  4999  0010B6  A4D8               	goto	i2u114_41
  5000  0010B8  EF60  F008         	goto	i2u114_40
  5001  0010BC  EF62  F008         
  5002                           i2u114_41:
  5003  0010C0                     	goto	i2l2138
  5004  0010C0  EF75  F008         i2u114_40:
  5005  0010C4                     	line	293
  5006                           	
  5007                           i2l2132:
  5008  0010C4                     ;main.c: 292:         {;main.c: 293:             tmr1count=0;
  5009                           	movlw	low(0)
  5010  0010C4  0E00               	movwf	((c:_tmr1count)),c	;volatile
  5011  0010C6  6E33               	line	294
  5012                           	
  5013                           i2l2134:
  5014  0010C8                     ;main.c: 294:             if(digitStage==2)
  5015                           		movlw	2
  5016  0010C8  0E02               	xorwf	((c:_digitStage)),c,w	;volatile
  5017  0010CA  182E               	btfss	status,2
  5018  0010CC  A4D8               	goto	i2u115_41
  5019  0010CE  EF6B  F008         	goto	i2u115_40
  5020  0010D2  EF6D  F008         
  5021                           i2u115_41:
  5022  0010D6                     	goto	i2l2138
  5023  0010D6  EF75  F008         i2u115_40:
  5024  0010DA                     	line	296
  5025                           	
  5026                           i2l2136:
  5027  0010DA                     ;main.c: 295:             {;main.c: 296:                 timer1Flag=1;
  5028                           	movlw	low(01h)
  5029  0010DA  0E01               	movwf	((c:_timer1Flag)),c	;volatile
  5030  0010DC  6E38               	goto	i2l2138
  5031  0010DE  EF75  F008         	line	297
  5032                           ;main.c: 297:             }
  5033                           	
  5034                           i2l235:
  5035  0010E2                     	goto	i2l2138
  5036  0010E2  EF75  F008         	line	298
  5037                           ;main.c: 298:         }
  5038                           	
  5039                           i2l234:
  5040  0010E6                     	goto	i2l2138
  5041  0010E6  EF75  F008         	line	299
  5042                           ;main.c: 299:     }
  5043                           	
  5044                           i2l233:
  5045  0010EA                     	line	300
  5046                           	
  5047                           i2l2138:
  5048  0010EA                     ;main.c: 300:     if (RBIE && RBIF) {
  5049                           	btfss	c:(32659/8),(32659)&7	;volatile
  5050  0010EA  A6F2               	goto	i2u116_41
  5051  0010EC  EF7A  F008         	goto	i2u116_40
  5052  0010F0  EF7C  F008         i2u116_41:
  5053  0010F4                     	goto	i2l2186
  5054  0010F4  EF29  F009         i2u116_40:
  5055  0010F8                     	
  5056                           i2l2140:
  5057  0010F8                     	btfss	c:(32656/8),(32656)&7	;volatile
  5058  0010F8  A0F2               	goto	i2u117_41
  5059  0010FA  EF81  F008         	goto	i2u117_40
  5060  0010FE  EF83  F008         i2u117_41:
  5061  001102                     	goto	i2l2186
  5062  001102  EF29  F009         i2u117_40:
  5063  001106                     	line	301
  5064                           	
  5065                           i2l2142:
  5066  001106                     ;main.c: 301:         rb_var = PORTB;
  5067                           	movff	(c:3969),(c:_rb_var)	;volatile
  5068  001106  CF81 F031          	line	302
  5069                           ;main.c: 302:         RBIF = 0;
  5070                           	bcf	c:(32656/8),(32656)&7	;volatile
  5071  00110A  90F2               	line	304
  5072                           	
  5073                           i2l2144:
  5074  00110C                     ;main.c: 304:         if(digitStage==0)
  5075                           	movf	((c:_digitStage)),c,w	;volatile
  5076  00110C  502E               	btfss	status,2
  5077  00110E  A4D8               	goto	i2u118_41
  5078  001110  EF8C  F008         	goto	i2u118_40
  5079  001114  EF8E  F008         i2u118_41:
  5080  001118                     	goto	i2l2156
  5081  001118  EFAA  F008         i2u118_40:
  5082  00111C                     	line	306
  5083                           	
  5084                           i2l2146:
  5085  00111C                     ;main.c: 305:         {;main.c: 306:             if(rb_var & 0x80)
  5086                           	
  5087                           	btfss	((c:_rb_var)),c,(7)&7	;volatile
  5088  00111C  AE31               	goto	i2u119_41
  5089  00111E  EF93  F008         	goto	i2u119_40
  5090  001122  EF95  F008         i2u119_41:
  5091  001126                     	goto	i2l2150
  5092  001126  EF99  F008         i2u119_40:
  5093  00112A                     	line	308
  5094                           	
  5095                           i2l2148:
  5096  00112A                     ;main.c: 307:             {;main.c: 308:                 digitStage=1;
  5097                           	movlw	low(01h)
  5098  00112A  0E01               	movwf	((c:_digitStage)),c	;volatile
  5099  00112C  6E2E               	goto	i2l2150
  5100  00112E  EF99  F008         	line	309
  5101                           ;main.c: 309:             }
  5102                           	
  5103                           i2l238:
  5104  001132                     	line	310
  5105                           	
  5106                           i2l2150:
  5107  001132                     ;main.c: 310:             if(rb_var & 0x40)
  5108                           	
  5109                           	btfss	((c:_rb_var)),c,(6)&7	;volatile
  5110  001132  AC31               	goto	i2u120_41
  5111  001134  EF9E  F008         	goto	i2u120_40
  5112  001138  EFA0  F008         i2u120_41:
  5113  00113C                     	goto	i2l2186
  5114  00113C  EF29  F009         i2u120_40:
  5115  001140                     	line	312
  5116                           	
  5117                           i2l2152:
  5118  001140                     ;main.c: 311:             {;main.c: 312:                 onlarDigit = incrementDigit(onl
                                 arDigit);
  5119                           	movf	((c:_onlarDigit)),c,w	;volatile
  5120  001140  5030               	
  5121                           	call	_incrementDigit
  5122  001142  EC56  F00F         	movwf	((c:_onlarDigit)),c	;volatile
  5123  001146  6E30               	line	313
  5124                           	
  5125                           i2l2154:
  5126  001148                     ;main.c: 313:                 numToStringPrintFlag=1;
  5127                           	movlw	low(01h)
  5128  001148  0E01               	movwf	((c:_numToStringPrintFlag)),c	;volatile
  5129  00114A  6E37               	goto	i2l2186
  5130  00114C  EF29  F009         	line	314
  5131                           ;main.c: 314:             }
  5132                           	
  5133                           i2l239:
  5134  001150                     	line	315
  5135                           ;main.c: 315:         }
  5136                           	goto	i2l2186
  5137  001150  EF29  F009         	line	316
  5138                           ;main.c: 316:         else if(digitStage==1)
  5139                           	
  5140                           i2l237:
  5141  001154                     	
  5142                           i2l2156:
  5143  001154                     		decf	((c:_digitStage)),c,w	;volatile
  5144  001154  042E               	btfss	status,2
  5145  001156  A4D8               	goto	i2u121_41
  5146  001158  EFB0  F008         	goto	i2u121_40
  5147  00115C  EFB2  F008         
  5148                           i2u121_41:
  5149  001160                     	goto	i2l2168
  5150  001160  EFCE  F008         i2u121_40:
  5151  001164                     	line	318
  5152                           	
  5153                           i2l2158:
  5154  001164                     ;main.c: 317:         {;main.c: 318:             if(rb_var & 0x80)
  5155                           	
  5156                           	btfss	((c:_rb_var)),c,(7)&7	;volatile
  5157  001164  AE31               	goto	i2u122_41
  5158  001166  EFB7  F008         	goto	i2u122_40
  5159  00116A  EFB9  F008         i2u122_41:
  5160  00116E                     	goto	i2l2162
  5161  00116E  EFBD  F008         i2u122_40:
  5162  001172                     	line	321
  5163                           	
  5164                           i2l2160:
  5165  001172                     ;main.c: 319:             {;main.c: 321:                 digitStage=2;
  5166                           	movlw	low(02h)
  5167  001172  0E02               	movwf	((c:_digitStage)),c	;volatile
  5168  001174  6E2E               	goto	i2l2162
  5169  001176  EFBD  F008         	line	323
  5170                           ;main.c: 323:             }
  5171                           	
  5172                           i2l242:
  5173  00117A                     	line	324
  5174                           	
  5175                           i2l2162:
  5176  00117A                     ;main.c: 324:             if(rb_var & 0x40)
  5177                           	
  5178                           	btfss	((c:_rb_var)),c,(6)&7	;volatile
  5179  00117A  AC31               	goto	i2u123_41
  5180  00117C  EFC2  F008         	goto	i2u123_40
  5181  001180  EFC4  F008         i2u123_41:
  5182  001184                     	goto	i2l2186
  5183  001184  EF29  F009         i2u123_40:
  5184  001188                     	line	327
  5185                           	
  5186                           i2l2164:
  5187  001188                     ;main.c: 325:             {;main.c: 327:                 birlerDigit = incrementDigit(bi
                                 rlerDigit);
  5188                           	movf	((c:_birlerDigit)),c,w	;volatile
  5189  001188  502F               	
  5190                           	call	_incrementDigit
  5191  00118A  EC56  F00F         	movwf	((c:_birlerDigit)),c	;volatile
  5192  00118E  6E2F               	line	328
  5193                           	
  5194                           i2l2166:
  5195  001190                     ;main.c: 328:                 numToStringPrintFlag=1;
  5196                           	movlw	low(01h)
  5197  001190  0E01               	movwf	((c:_numToStringPrintFlag)),c	;volatile
  5198  001192  6E37               	goto	i2l2186
  5199  001194  EF29  F009         	line	329
  5200                           ;main.c: 329:             }
  5201                           	
  5202                           i2l243:
  5203  001198                     	line	330
  5204                           ;main.c: 330:         }
  5205                           	goto	i2l2186
  5206  001198  EF29  F009         	line	331
  5207                           ;main.c: 331:         else
  5208                           	
  5209                           i2l241:
  5210  00119C                     	line	333
  5211                           	
  5212                           i2l2168:
  5213  00119C                     ;main.c: 332:         {;main.c: 333:             if(!voteEnds)
  5214                           	movf	((c:_voteEnds)),c,w	;volatile
  5215  00119C  502C               	btfss	status,2
  5216  00119E  A4D8               	goto	i2u124_41
  5217  0011A0  EFD4  F008         	goto	i2u124_40
  5218  0011A4  EFD6  F008         i2u124_41:
  5219  0011A8                     	goto	i2l2186
  5220  0011A8  EF29  F009         i2u124_40:
  5221  0011AC                     	line	335
  5222                           	
  5223                           i2l2170:
  5224  0011AC                     ;main.c: 334:             {;main.c: 335:                 if(rb_var & 0x80)
  5225                           	
  5226                           	btfss	((c:_rb_var)),c,(7)&7	;volatile
  5227  0011AC  AE31               	goto	i2u125_41
  5228  0011AE  EFDB  F008         	goto	i2u125_40
  5229  0011B2  EFDD  F008         i2u125_41:
  5230  0011B6                     	goto	i2l2186
  5231  0011B6  EF29  F009         i2u125_40:
  5232  0011BA                     	line	337
  5233                           	
  5234                           i2l2172:
  5235  0011BA                     ;main.c: 336:                 {;main.c: 337:                 votes[currentPerson]++;
  5236                           	movf	((c:_currentPerson)),c,w	;volatile
  5237  0011BA  502D               	mullw	01h
  5238  0011BC  0D01               	movlw	low(_votes)
  5239  0011BE  0E1F               	addwf	(prodl),c,w
  5240  0011C0  24F3               	movwf	c:fsr2l
  5241  0011C2  6ED9               	movlw	high(_votes)
  5242  0011C4  0E00               	addwfc	prod+1,w
  5243  0011C6  20F4               	movwf	1+c:fsr2l
  5244  0011C8  6EDA               	incf	indf2
  5245  0011CA  2ADF               
  5246                           	line	338
  5247                           	
  5248                           i2l2174:
  5249  0011CC                     ;main.c: 338:                 totalVotes++;
  5250                           	incf	((c:_totalVotes)),c	;volatile
  5251  0011CC  2A2A               	line	339
  5252                           	
  5253                           i2l2176:
  5254  0011CE                     ;main.c: 339:                 refreshPersonFlag=1;
  5255                           	movlw	low(01h)
  5256  0011CE  0E01               	movwf	((c:_refreshPersonFlag)),c	;volatile
  5257  0011D0  6E36               	line	340
  5258                           	
  5259                           i2l2178:
  5260  0011D2                     ;main.c: 340:                 if(votes[currentPerson]>votes[maxVotedPerson])
  5261                           	movf	((c:_currentPerson)),c,w	;volatile
  5262  0011D2  502D               	mullw	01h
  5263  0011D4  0D01               	movlw	low(_votes)
  5264  0011D6  0E1F               	addwf	(prodl),c,w
  5265  0011D8  24F3               	movwf	c:fsr2l
  5266  0011DA  6ED9               	movlw	high(_votes)
  5267  0011DC  0E00               	addwfc	prod+1,w
  5268  0011DE  20F4               	movwf	1+c:fsr2l
  5269  0011E0  6EDA               	movf	((c:_maxVotedPerson)),c,w	;volatile
  5270  0011E2  5029               	mullw	01h
  5271  0011E4  0D01               	movlw	low(_votes)
  5272  0011E6  0E1F               	addwf	(prodl),c,w
  5273  0011E8  24F3               	movwf	c:fsr1l
  5274  0011EA  6EE1               	movlw	high(_votes)
  5275  0011EC  0E00               	addwfc	prod+1,w
  5276  0011EE  20F4               	movwf	1+c:fsr1l
  5277  0011F0  6EE2               		movf	postinc2,w
  5278  0011F2  50DE               	subwf	postinc1,w
  5279  0011F4  5CE6               	btfsc	status,0
  5280  0011F6  B0D8               	goto	i2u126_41
  5281  0011F8  EF00  F009         	goto	i2u126_40
  5282  0011FC  EF02  F009         
  5283                           i2u126_41:
  5284  001200                     	goto	i2l2182
  5285  001200  EF06  F009         i2u126_40:
  5286  001204                     	line	342
  5287                           	
  5288                           i2l2180:
  5289  001204                     ;main.c: 341:                 {;main.c: 342:                     maxVotedPerson = curren
                                 tPerson;
  5290                           	movff	(c:_currentPerson),(c:_maxVotedPerson)	;volatile
  5291  001204  C02D  F029         	goto	i2l2182
  5292  001208  EF06  F009         	line	343
  5293                           ;main.c: 343:                 }
  5294                           	
  5295                           i2l247:
  5296  00120C                     	line	344
  5297                           	
  5298                           i2l2182:
  5299  00120C                     ;main.c: 344:                 if (totalVotes == 10*onlarDigit + birlerDigit)
  5300                           	movf	((c:_totalVotes)),c,w	;volatile
  5301  00120C  502A               	movwf	(??_highISR+0+0)&0ffh,c
  5302  00120E  6E0E               	clrf	(??_highISR+0+0+1)&0ffh,c
  5303  001210  6A0F               
  5304                           	movf	((c:_onlarDigit)),c,w	;volatile
  5305  001212  5030               	mullw	0Ah
  5306  001214  0D0A               	movf	((c:_birlerDigit)),c,w	;volatile
  5307  001216  502F               	addwf	(prodl),c
  5308  001218  26F3               	movlw	0
  5309  00121A  0E00               	addwfc	(prodh),c
  5310  00121C  22F4               	movf	(??_highISR+0+0),c,w
  5311  00121E  500E               xorwf	(prodl),c,w
  5312  001220  18F3               	bnz	i2u127_41
  5313  001222  E107               movf	(??_highISR+0+1),c,w
  5314  001224  500F               xorwf	(prodh),c,w
  5315  001226  18F4               	btfss	status,2
  5316  001228  A4D8               	goto	i2u127_41
  5317  00122A  EF19  F009         	goto	i2u127_40
  5318  00122E  EF1B  F009         
  5319                           i2u127_41:
  5320  001232                     	goto	i2l2186
  5321  001232  EF29  F009         i2u127_40:
  5322  001236                     	line	345
  5323                           	
  5324                           i2l2184:
  5325  001236                     ;main.c: 345:                     voteEnds = 1;
  5326                           	movlw	low(01h)
  5327  001236  0E01               	movwf	((c:_voteEnds)),c	;volatile
  5328  001238  6E2C               	goto	i2l2186
  5329  00123A  EF29  F009         	
  5330                           i2l248:
  5331  00123E                     	goto	i2l2186
  5332  00123E  EF29  F009         	line	346
  5333                           ;main.c: 346:                 }
  5334                           	
  5335                           i2l246:
  5336  001242                     	goto	i2l2186
  5337  001242  EF29  F009         	line	347
  5338                           ;main.c: 347:             }
  5339                           	
  5340                           i2l245:
  5341  001246                     	goto	i2l2186
  5342  001246  EF29  F009         	line	349
  5343                           ;main.c: 349:         }
  5344                           	
  5345                           i2l244:
  5346  00124A                     	goto	i2l2186
  5347  00124A  EF29  F009         	
  5348                           i2l240:
  5349  00124E                     	goto	i2l2186
  5350  00124E  EF29  F009         	line	350
  5351                           ;main.c: 350:     }
  5352                           	
  5353                           i2l236:
  5354  001252                     	line	352
  5355                           	
  5356                           i2l2186:
  5357  001252                     ;main.c: 352:     if (TMR0IE && TMR0IF) {
  5358                           	btfss	c:(32661/8),(32661)&7	;volatile
  5359  001252  AAF2               	goto	i2u128_41
  5360  001254  EF2E  F009         	goto	i2u128_40
  5361  001258  EF30  F009         i2u128_41:
  5362  00125C                     	goto	i2l2216
  5363  00125C  EF7E  F009         i2u128_40:
  5364  001260                     	
  5365                           i2l2188:
  5366  001260                     	btfss	c:(32658/8),(32658)&7	;volatile
  5367  001260  A4F2               	goto	i2u129_41
  5368  001262  EF35  F009         	goto	i2u129_40
  5369  001266  EF37  F009         i2u129_41:
  5370  00126A                     	goto	i2l2216
  5371  00126A  EF7E  F009         i2u129_40:
  5372  00126E                     	line	353
  5373                           	
  5374                           i2l2190:
  5375  00126E                     ;main.c: 353:         refreshSevenSegment();
  5376                           	call	_refreshSevenSegment	;wreg free
  5377  00126E  EC8A  F00A         	line	354
  5378                           	
  5379                           i2l2192:
  5380  001272                     ;main.c: 354:         TMR0IF = 0;
  5381                           	bcf	c:(32658/8),(32658)&7	;volatile
  5382  001272  94F2               	line	355
  5383                           	
  5384                           i2l2194:
  5385  001274                     ;main.c: 355:         tmr0count++;
  5386                           	infsnz	((c:_tmr0count)),c	;volatile
  5387  001274  4A27               	incf	((c:_tmr0count+1)),c	;volatile
  5388  001276  2A28               	line	356
  5389                           	
  5390                           i2l2196:
  5391  001278                     ;main.c: 356:         adcCount++;
  5392                           	incf	((c:_adcCount)),c	;volatile
  5393  001278  2A34               	line	358
  5394                           	
  5395                           i2l2198:
  5396  00127A                     ;main.c: 358:         if(adcCount==60)
  5397                           		movlw	60
  5398  00127A  0E3C               	xorwf	((c:_adcCount)),c,w	;volatile
  5399  00127C  1834               	btfss	status,2
  5400  00127E  A4D8               	goto	i2u130_41
  5401  001280  EF44  F009         	goto	i2u130_40
  5402  001284  EF46  F009         
  5403                           i2u130_41:
  5404  001288                     	goto	i2l2206
  5405  001288  EF57  F009         i2u130_40:
  5406  00128C                     	line	360
  5407                           	
  5408                           i2l2200:
  5409  00128C                     ;main.c: 359:         {;main.c: 360:             adcCount=0;
  5410                           	movlw	low(0)
  5411  00128C  0E00               	movwf	((c:_adcCount)),c	;volatile
  5412  00128E  6E34               	line	362
  5413                           	
  5414                           i2l2202:
  5415  001290                     ;main.c: 362:             if(digitStage==2)
  5416                           		movlw	2
  5417  001290  0E02               	xorwf	((c:_digitStage)),c,w	;volatile
  5418  001292  182E               	btfss	status,2
  5419  001294  A4D8               	goto	i2u131_41
  5420  001296  EF4F  F009         	goto	i2u131_40
  5421  00129A  EF51  F009         
  5422                           i2u131_41:
  5423  00129E                     	goto	i2l2206
  5424  00129E  EF57  F009         i2u131_40:
  5425  0012A2                     	line	364
  5426                           	
  5427                           i2l2204:
  5428  0012A2                     ;main.c: 363:             {;main.c: 364:                 enableADC();
  5429                           	call	_enableADC	;wreg free
  5430  0012A2  EC81  F00F         	goto	i2l2206
  5431  0012A6  EF57  F009         	line	365
  5432                           ;main.c: 365:             }
  5433                           	
  5434                           i2l251:
  5435  0012AA                     	goto	i2l2206
  5436  0012AA  EF57  F009         	line	366
  5437                           ;main.c: 366:         }
  5438                           	
  5439                           i2l250:
  5440  0012AE                     	line	367
  5441                           	
  5442                           i2l2206:
  5443  0012AE                     ;main.c: 367:         if(!voteEnds && tmr0count==152)
  5444                           	movf	((c:_voteEnds)),c,w	;volatile
  5445  0012AE  502C               	btfss	status,2
  5446  0012B0  A4D8               	goto	i2u132_41
  5447  0012B2  EF5D  F009         	goto	i2u132_40
  5448  0012B6  EF5F  F009         i2u132_41:
  5449  0012BA                     	goto	i2l2216
  5450  0012BA  EF7E  F009         i2u132_40:
  5451  0012BE                     	
  5452                           i2l2208:
  5453  0012BE                     		movlw	152
  5454  0012BE  0E98               	xorwf	((c:_tmr0count)),c,w	;volatile
  5455  0012C0  1827               iorwf	((c:_tmr0count+1)),c,w	;volatile
  5456  0012C2  1028               	btfss	status,2
  5457  0012C4  A4D8               	goto	i2u133_41
  5458  0012C6  EF67  F009         	goto	i2u133_40
  5459  0012CA  EF69  F009         
  5460                           i2u133_41:
  5461  0012CE                     	goto	i2l2216
  5462  0012CE  EF7E  F009         i2u133_40:
  5463  0012D2                     	line	370
  5464                           	
  5465                           i2l2210:
  5466  0012D2                     ;main.c: 368:         {;main.c: 370:             tmr0count=0;
  5467                           	movlw	high(0)
  5468  0012D2  0E00               	movwf	((c:_tmr0count+1)),c	;volatile
  5469  0012D4  6E28               	movlw	low(0)
  5470  0012D6  0E00               	movwf	((c:_tmr0count)),c	;volatile
  5471  0012D8  6E27               	line	372
  5472                           	
  5473                           i2l2212:
  5474  0012DA                     ;main.c: 372:             if(digitStage==2)
  5475                           		movlw	2
  5476  0012DA  0E02               	xorwf	((c:_digitStage)),c,w	;volatile
  5477  0012DC  182E               	btfss	status,2
  5478  0012DE  A4D8               	goto	i2u134_41
  5479  0012E0  EF74  F009         	goto	i2u134_40
  5480  0012E4  EF76  F009         
  5481                           i2u134_41:
  5482  0012E8                     	goto	i2l2216
  5483  0012E8  EF7E  F009         i2u134_40:
  5484  0012EC                     	line	374
  5485                           	
  5486                           i2l2214:
  5487  0012EC                     ;main.c: 373:             {;main.c: 374:                 timer0Flag=1;
  5488                           	movlw	low(01h)
  5489  0012EC  0E01               	movwf	((c:_timer0Flag)),c	;volatile
  5490  0012EE  6E35               	goto	i2l2216
  5491  0012F0  EF7E  F009         	line	375
  5492                           ;main.c: 375:             }
  5493                           	
  5494                           i2l253:
  5495  0012F4                     	goto	i2l2216
  5496  0012F4  EF7E  F009         	line	377
  5497                           ;main.c: 377:         }
  5498                           	
  5499                           i2l252:
  5500  0012F8                     	goto	i2l2216
  5501  0012F8  EF7E  F009         	line	379
  5502                           ;main.c: 379:     }
  5503                           	
  5504                           i2l249:
  5505  0012FC                     	line	380
  5506                           	
  5507                           i2l2216:
  5508  0012FC                     ;main.c: 380:     if(ADIE ==1 && ADIF==1)
  5509                           	btfss	c:(31982/8),(31982)&7	;volatile
  5510  0012FC  AC9D               	goto	i2u135_41
  5511  0012FE  EF83  F009         	goto	i2u135_40
  5512  001302  EF85  F009         i2u135_41:
  5513  001306                     	goto	i2l256
  5514  001306  EFB4  F009         i2u135_40:
  5515  00130A                     	
  5516                           i2l2218:
  5517  00130A                     	btfss	c:(31990/8),(31990)&7	;volatile
  5518  00130A  AC9E               	goto	i2u136_41
  5519  00130C  EF8A  F009         	goto	i2u136_40
  5520  001310  EF8C  F009         i2u136_41:
  5521  001314                     	goto	i2l256
  5522  001314  EFB4  F009         i2u136_40:
  5523  001318                     	line	382
  5524                           	
  5525                           i2l2220:
  5526  001318                     ;main.c: 381:     {;main.c: 382:         if(digitStage==2)
  5527                           		movlw	2
  5528  001318  0E02               	xorwf	((c:_digitStage)),c,w	;volatile
  5529  00131A  182E               	btfss	status,2
  5530  00131C  A4D8               	goto	i2u137_41
  5531  00131E  EF93  F009         	goto	i2u137_40
  5532  001322  EF95  F009         
  5533                           i2u137_41:
  5534  001326                     	goto	i2l256
  5535  001326  EFB4  F009         i2u137_40:
  5536  00132A                     	line	384
  5537                           	
  5538                           i2l2222:
  5539  00132A                     ;main.c: 383:         {;main.c: 384:             ADIF=0;
  5540                           	bcf	c:(31990/8),(31990)&7	;volatile
  5541  00132A  9C9E               	line	385
  5542                           	
  5543                           i2l2224:
  5544  00132C                     ;main.c: 385:             unsigned int value = 256*ADRESH + ADRESL;
  5545                           	movf	((c:4036)),c,w	;volatile
  5546  00132C  50C4               	movwf	(??_highISR+0+0+1)&0ffh,c
  5547  00132E  6E0F               	clrf	(??_highISR+0+0)&0ffh,c
  5548  001330  6A0E               	movf	((c:4035)),c,w	;volatile
  5549  001332  50C3               	addwf	(??_highISR+0+0),c,w
  5550  001334  240E               	movwf	((c:highISR@value)),c
  5551  001336  6E17               	movlw	0
  5552  001338  0E00               	addwfc	(??_highISR+0+1),c,w
  5553  00133A  200F               	movwf	1+((c:highISR@value)),c
  5554  00133C  6E18               	line	386
  5555                           ;main.c: 386:             currentPerson=value/128;
  5556                           	movff	(c:highISR@value),??_highISR+0+0
  5557  00133E  C017  F00E         	movff	(c:highISR@value+1),??_highISR+0+0+1
  5558  001342  C018  F00F         	movlw	07h
  5559  001346  0E07               	movwf	(??_highISR+2+0)&0ffh,c
  5560  001348  6E10               i2u138_45:
  5561  00134A                     	bcf	status,0
  5562  00134A  90D8               	rrcf	(??_highISR+0+1),c
  5563  00134C  320F               	rrcf	(??_highISR+0+0),c
  5564  00134E  320E               	decfsz	(??_highISR+2+0)&0ffh,c
  5565  001350  2E10               	goto	i2u138_45
  5566  001352  EFA5  F009         	movf	(??_highISR+0+0),c,w
  5567  001356  500E               	movwf	((c:_currentPerson)),c	;volatile
  5568  001358  6E2D               	line	387
  5569                           	
  5570                           i2l2226:
  5571  00135A                     ;main.c: 387:             refreshPersonFlag=1;
  5572                           	movlw	low(01h)
  5573  00135A  0E01               	movwf	((c:_refreshPersonFlag)),c	;volatile
  5574  00135C  6E36               	line	388
  5575                           	
  5576                           i2l2228:
  5577  00135E                     ;main.c: 388:             ADIE = 0;
  5578                           	bcf	c:(31982/8),(31982)&7	;volatile
  5579  00135E  9C9D               	goto	i2l256
  5580  001360  EFB4  F009         	line	389
  5581                           ;main.c: 389:         }
  5582                           	
  5583                           i2l255:
  5584  001364                     	goto	i2l256
  5585  001364  EFB4  F009         	line	390
  5586                           ;main.c: 390:     }
  5587                           	
  5588                           i2l254:
  5589  001368                     	line	391
  5590                           	
  5591                           i2l256:
  5592  001368                     	movff	??_highISR+8,prodh+0
  5593  001368  C016  FFF4         	movff	??_highISR+7,prodl+0
  5594  00136C  C015  FFF3         	movff	??_highISR+6,fsr2h+0
  5595  001370  C014  FFDA         	movff	??_highISR+5,fsr2l+0
  5596  001374  C013  FFD9         	movff	??_highISR+4,fsr1h+0
  5597  001378  C012  FFE2         	movff	??_highISR+3,fsr1l+0
  5598  00137C  C011  FFE1         	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  5599  001380  9247               	retfie f
  5600  001382  0011               	opt stack 0
  5601                           GLOBAL	__end_of_highISR
  5602                           	__end_of_highISR:
  5603  001384                     	signat	_highISR,89
  5604                           	global	_refreshSevenSegment
  5605                           
  5606 ;; *************** function _refreshSevenSegment *****************
  5607 ;; Defined at:
  5608 ;;		line 198 in file "main.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;		None
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;  currentVote     1   12[COMRAM] unsigned char 
  5613 ;;  idSecond        1   11[COMRAM] unsigned char 
  5614 ;;  idFirst         1   10[COMRAM] unsigned char 
  5615 ;;  secondDigit     1    9[COMRAM] unsigned char 
  5616 ;;  firstDigit      1    8[COMRAM] unsigned char 
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  1    wreg      void 
  5619 ;; Registers used:
  5620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  5626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  5627 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  5628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  5629 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  5630 ;;Total ram usage:        5 bytes
  5631 ;; Hardware stack levels used:    1
  5632 ;; Hardware stack levels required when called:    1
  5633 ;; This function calls:
  5634 ;;		i2___awdiv
  5635 ;;		i2___awmod
  5636 ;; This function is called by:
  5637 ;;		_highISR
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           psect	text17,class=CODE,space=0,reloc=2,group=0
  5641                           	line	198
  5642                           global __ptext17
  5643                           __ptext17:
  5644  001514                     psect	text17
  5645                           	file	"main.c"
  5646                           	line	198
  5647                           	global	__size_of_refreshSevenSegment
  5648                           	__size_of_refreshSevenSegment	equ	__end_of_refreshSevenSegment-_refreshSevenSegment
  5649  0000                     	
  5650                           _refreshSevenSegment:
  5651  001514                     ;incstack = 0
  5652                           	opt	stack 24
  5653                           	line	200
  5654                           	
  5655                           i2l2084:
  5656  001514                     ;main.c: 200:     unsigned char currentVote = votes[maxVotedPerson];
  5657                           	movf	((c:_maxVotedPerson)),c,w	;volatile
  5658  001514  5029               	mullw	01h
  5659  001516  0D01               	movlw	low(_votes)
  5660  001518  0E1F               	addwf	(prodl),c,w
  5661  00151A  24F3               	movwf	c:fsr2l
  5662  00151C  6ED9               	movlw	high(_votes)
  5663  00151E  0E00               	addwfc	prod+1,w
  5664  001520  20F4               	movwf	1+c:fsr2l
  5665  001522  6EDA               	movf	indf2,w
  5666  001524  50DF               	movwf	((c:refreshSevenSegment@currentVote)),c
  5667  001526  6E0D               	line	201
  5668                           	
  5669                           i2l2086:
  5670  001528                     ;main.c: 201:     unsigned char firstDigit = 0;
  5671                           	movlw	low(0)
  5672  001528  0E00               	movwf	((c:refreshSevenSegment@firstDigit)),c
  5673  00152A  6E09               	line	202
  5674                           	
  5675                           i2l2088:
  5676  00152C                     ;main.c: 202:     unsigned char secondDigit = 0;
  5677                           	movlw	low(0)
  5678  00152C  0E00               	movwf	((c:refreshSevenSegment@secondDigit)),c
  5679  00152E  6E0A               	line	203
  5680                           	
  5681                           i2l2090:
  5682  001530                     ;main.c: 203:     unsigned char idFirst = 0;
  5683                           	movlw	low(0)
  5684  001530  0E00               	movwf	((c:refreshSevenSegment@idFirst)),c
  5685  001532  6E0B               	line	204
  5686                           	
  5687                           i2l2092:
  5688  001534                     ;main.c: 204:     unsigned char idSecond = 0;
  5689                           	movlw	low(0)
  5690  001534  0E00               	movwf	((c:refreshSevenSegment@idSecond)),c
  5691  001536  6E0C               	line	206
  5692                           	
  5693                           i2l2094:
  5694  001538                     ;main.c: 206:     if (totalVotes==0){
  5695                           	movf	((c:_totalVotes)),c,w	;volatile
  5696  001538  502A               	btfss	status,2
  5697  00153A  A4D8               	goto	i2u107_41
  5698  00153C  EFA2  F00A         	goto	i2u107_40
  5699  001540  EFA4  F00A         i2u107_41:
  5700  001544                     	goto	i2l2098
  5701  001544  EFAE  F00A         i2u107_40:
  5702  001548                     	line	207
  5703                           	
  5704                           i2l2096:
  5705  001548                     ;main.c: 207:         idFirst = 10;
  5706                           	movlw	low(0Ah)
  5707  001548  0E0A               	movwf	((c:refreshSevenSegment@idFirst)),c
  5708  00154A  6E0B               	line	208
  5709                           ;main.c: 208:         idSecond = 10;
  5710                           	movlw	low(0Ah)
  5711  00154C  0E0A               	movwf	((c:refreshSevenSegment@idSecond)),c
  5712  00154E  6E0C               	line	209
  5713                           ;main.c: 209:         firstDigit =10;
  5714                           	movlw	low(0Ah)
  5715  001550  0E0A               	movwf	((c:refreshSevenSegment@firstDigit)),c
  5716  001552  6E09               	line	210
  5717                           ;main.c: 210:         secondDigit = 10;
  5718                           	movlw	low(0Ah)
  5719  001554  0E0A               	movwf	((c:refreshSevenSegment@secondDigit)),c
  5720  001556  6E0A               	line	211
  5721                           ;main.c: 211:     }
  5722                           	goto	i2l2104
  5723  001558  EFE0  F00A         	line	212
  5724                           ;main.c: 212:     else {
  5725                           	
  5726                           i2l196:
  5727  00155C                     	line	213
  5728                           	
  5729                           i2l2098:
  5730  00155C                     ;main.c: 213:         idFirst = (unsigned char)(ids[maxVotedPerson][0]-(int)'0');
  5731                           	movf	((c:_maxVotedPerson)),c,w	;volatile
  5732  00155C  5029               	mullw	03h
  5733  00155E  0D03               	movlw	low(_ids)
  5734  001560  0E60               	addwf	(prodl),c,w
  5735  001562  24F3               	movwf	c:fsr2l
  5736  001564  6ED9               	movlw	high(_ids)
  5737  001566  0E00               	addwfc	prod+1,w
  5738  001568  20F4               	movwf	1+c:fsr2l
  5739  00156A  6EDA               	movf	indf2,w
  5740  00156C  50DF               	addlw	low(0D0h)
  5741  00156E  0FD0               	movwf	((c:refreshSevenSegment@idFirst)),c
  5742  001570  6E0B               	line	214
  5743                           ;main.c: 214:         idSecond = (unsigned char)(ids[maxVotedPerson][1]-(int)'0');
  5744                           	movf	((c:_maxVotedPerson)),c,w	;volatile
  5745  001572  5029               	mullw	03h
  5746  001574  0D03               	movlw	01h
  5747  001576  0E01               	addwf	(prodl),c
  5748  001578  26F3               	movlw	0
  5749  00157A  0E00               	addwfc	(prodh),c
  5750  00157C  22F4               	movlw	low(_ids)
  5751  00157E  0E60               	addwf	(prodl),c,w
  5752  001580  24F3               	movwf	c:fsr2l
  5753  001582  6ED9               	movlw	high(_ids)
  5754  001584  0E00               	addwfc	(prodh),c,w
  5755  001586  20F4               	movwf	1+c:fsr2l
  5756  001588  6EDA               	movf	indf2,w
  5757  00158A  50DF               	addlw	low(0D0h)
  5758  00158C  0FD0               	movwf	((c:refreshSevenSegment@idSecond)),c
  5759  00158E  6E0C               	line	215
  5760                           	
  5761                           i2l2100:
  5762  001590                     ;main.c: 215:         firstDigit = currentVote/10;
  5763                           	movff	(c:refreshSevenSegment@currentVote),(c:i2___awdiv@dividend)
  5764  001590  C00D  F001         	clrf	((c:i2___awdiv@dividend+1)),c
  5765  001594  6A02               	movlw	high(0Ah)
  5766  001596  0E00               	movwf	((c:i2___awdiv@divisor+1)),c
  5767  001598  6E04               	movlw	low(0Ah)
  5768  00159A  0E0A               	movwf	((c:i2___awdiv@divisor)),c
  5769  00159C  6E03               	call	i2___awdiv	;wreg free
  5770  00159E  EC5E  F00C         	movf	(0+?i2___awdiv),c,w
  5771  0015A2  5001               	movwf	((c:refreshSevenSegment@firstDigit)),c
  5772  0015A4  6E09               	line	216
  5773                           	
  5774                           i2l2102:
  5775  0015A6                     ;main.c: 216:         secondDigit = currentVote%10;
  5776                           	movff	(c:refreshSevenSegment@currentVote),(c:i2___awmod@dividend)
  5777  0015A6  C00D  F001         	clrf	((c:i2___awmod@dividend+1)),c
  5778  0015AA  6A02               	movlw	high(0Ah)
  5779  0015AC  0E00               	movwf	((c:i2___awmod@divisor+1)),c
  5780  0015AE  6E04               	movlw	low(0Ah)
  5781  0015B0  0E0A               	movwf	((c:i2___awmod@divisor)),c
  5782  0015B2  6E03               	call	i2___awmod	;wreg free
  5783  0015B4  EC40  F00D         	movf	(0+?i2___awmod),c,w
  5784  0015B8  5001               	movwf	((c:refreshSevenSegment@secondDigit)),c
  5785  0015BA  6E0A               	goto	i2l2104
  5786  0015BC  EFE0  F00A         	line	217
  5787                           ;main.c: 217:     }
  5788                           	
  5789                           i2l197:
  5790  0015C0                     	line	219
  5791                           	
  5792                           i2l2104:
  5793  0015C0                     ;main.c: 219:     if(LATH3 == 0x01){
  5794                           	btfss	c:(31875/8),(31875)&7	;volatile
  5795  0015C0  A690               	goto	i2u108_41
  5796  0015C2  EFE5  F00A         	goto	i2u108_40
  5797  0015C6  EFE7  F00A         i2u108_41:
  5798  0015CA                     	goto	i2l198
  5799  0015CA  EFF5  F00A         i2u108_40:
  5800  0015CE                     	line	220
  5801                           	
  5802                           i2l2106:
  5803  0015CE                     ;main.c: 220:         LATH3 = 0X00;
  5804                           	bcf	c:(31875/8),(31875)&7	;volatile
  5805  0015CE  9690               	line	221
  5806                           ;main.c: 221:         LATH0 = 0X01;
  5807                           	bsf	c:(31872/8),(31872)&7	;volatile
  5808  0015D0  8090               	line	222
  5809                           	
  5810                           i2l2108:
  5811  0015D2                     ;main.c: 222:         LATJ = sevenSegmentTable[idFirst];
  5812                           	movf	((c:refreshSevenSegment@idFirst)),c,w
  5813  0015D2  500B               	mullw	01h
  5814  0015D4  0D01               	movlw	low(_sevenSegmentTable)
  5815  0015D6  0E3A               	addwf	(prodl),c,w
  5816  0015D8  24F3               	movwf	c:fsr2l
  5817  0015DA  6ED9               	movlw	high(_sevenSegmentTable)
  5818  0015DC  0E00               	addwfc	prod+1,w
  5819  0015DE  20F4               	movwf	1+c:fsr2l
  5820  0015E0  6EDA               	movf	indf2,w
  5821  0015E2  50DF               	movwf	((c:3985)),c	;volatile
  5822  0015E4  6E91               	line	223
  5823                           ;main.c: 223:     }
  5824                           	goto	i2l205
  5825  0015E6  EF3A  F00B         	line	224
  5826                           ;main.c: 224:     else if(LATH0 == 0x01){
  5827                           	
  5828                           i2l198:
  5829  0015EA                     	btfss	c:(31872/8),(31872)&7	;volatile
  5830  0015EA  A090               	goto	i2u109_41
  5831  0015EC  EFFA  F00A         	goto	i2u109_40
  5832  0015F0  EFFC  F00A         i2u109_41:
  5833  0015F4                     	goto	i2l200
  5834  0015F4  EF0A  F00B         i2u109_40:
  5835  0015F8                     	line	225
  5836                           	
  5837                           i2l2110:
  5838  0015F8                     ;main.c: 225:         LATH0 = 0X00;
  5839                           	bcf	c:(31872/8),(31872)&7	;volatile
  5840  0015F8  9090               	line	226
  5841                           ;main.c: 226:         LATH1 = 0X01;
  5842                           	bsf	c:(31873/8),(31873)&7	;volatile
  5843  0015FA  8290               	line	227
  5844                           	
  5845                           i2l2112:
  5846  0015FC                     ;main.c: 227:         LATJ = sevenSegmentTable[idSecond];
  5847                           	movf	((c:refreshSevenSegment@idSecond)),c,w
  5848  0015FC  500C               	mullw	01h
  5849  0015FE  0D01               	movlw	low(_sevenSegmentTable)
  5850  001600  0E3A               	addwf	(prodl),c,w
  5851  001602  24F3               	movwf	c:fsr2l
  5852  001604  6ED9               	movlw	high(_sevenSegmentTable)
  5853  001606  0E00               	addwfc	prod+1,w
  5854  001608  20F4               	movwf	1+c:fsr2l
  5855  00160A  6EDA               	movf	indf2,w
  5856  00160C  50DF               	movwf	((c:3985)),c	;volatile
  5857  00160E  6E91               	line	228
  5858                           ;main.c: 228:     }
  5859                           	goto	i2l205
  5860  001610  EF3A  F00B         	line	229
  5861                           ;main.c: 229:     else if(LATH1 == 0x01){
  5862                           	
  5863                           i2l200:
  5864  001614                     	btfss	c:(31873/8),(31873)&7	;volatile
  5865  001614  A290               	goto	i2u110_41
  5866  001616  EF0F  F00B         	goto	i2u110_40
  5867  00161A  EF11  F00B         i2u110_41:
  5868  00161E                     	goto	i2l202
  5869  00161E  EF1F  F00B         i2u110_40:
  5870  001622                     	line	231
  5871                           	
  5872                           i2l2114:
  5873  001622                     ;main.c: 231:         LATH1 = 0X00;
  5874                           	bcf	c:(31873/8),(31873)&7	;volatile
  5875  001622  9290               	line	232
  5876                           ;main.c: 232:         LATH2 = 0X01;
  5877                           	bsf	c:(31874/8),(31874)&7	;volatile
  5878  001624  8490               	line	233
  5879                           	
  5880                           i2l2116:
  5881  001626                     ;main.c: 233:         LATJ = sevenSegmentTable[firstDigit];
  5882                           	movf	((c:refreshSevenSegment@firstDigit)),c,w
  5883  001626  5009               	mullw	01h
  5884  001628  0D01               	movlw	low(_sevenSegmentTable)
  5885  00162A  0E3A               	addwf	(prodl),c,w
  5886  00162C  24F3               	movwf	c:fsr2l
  5887  00162E  6ED9               	movlw	high(_sevenSegmentTable)
  5888  001630  0E00               	addwfc	prod+1,w
  5889  001632  20F4               	movwf	1+c:fsr2l
  5890  001634  6EDA               	movf	indf2,w
  5891  001636  50DF               	movwf	((c:3985)),c	;volatile
  5892  001638  6E91               	line	234
  5893                           ;main.c: 234:     }
  5894                           	goto	i2l205
  5895  00163A  EF3A  F00B         	line	235
  5896                           ;main.c: 235:     else if(LATH2 == 0x01){
  5897                           	
  5898                           i2l202:
  5899  00163E                     	btfss	c:(31874/8),(31874)&7	;volatile
  5900  00163E  A490               	goto	i2u111_41
  5901  001640  EF24  F00B         	goto	i2u111_40
  5902  001644  EF26  F00B         i2u111_41:
  5903  001648                     	goto	i2l205
  5904  001648  EF3A  F00B         i2u111_40:
  5905  00164C                     	line	236
  5906                           	
  5907                           i2l2118:
  5908  00164C                     ;main.c: 236:         LATH2 = 0X00;
  5909                           	bcf	c:(31874/8),(31874)&7	;volatile
  5910  00164C  9490               	line	237
  5911                           ;main.c: 237:         LATH3 = 0X01;
  5912                           	bsf	c:(31875/8),(31875)&7	;volatile
  5913  00164E  8690               	line	238
  5914                           	
  5915                           i2l2120:
  5916  001650                     ;main.c: 238:         LATJ = sevenSegmentTable[secondDigit];
  5917                           	movf	((c:refreshSevenSegment@secondDigit)),c,w
  5918  001650  500A               	mullw	01h
  5919  001652  0D01               	movlw	low(_sevenSegmentTable)
  5920  001654  0E3A               	addwf	(prodl),c,w
  5921  001656  24F3               	movwf	c:fsr2l
  5922  001658  6ED9               	movlw	high(_sevenSegmentTable)
  5923  00165A  0E00               	addwfc	prod+1,w
  5924  00165C  20F4               	movwf	1+c:fsr2l
  5925  00165E  6EDA               	movf	indf2,w
  5926  001660  50DF               	movwf	((c:3985)),c	;volatile
  5927  001662  6E91               	goto	i2l205
  5928  001664  EF3A  F00B         	line	239
  5929                           ;main.c: 239:     }
  5930                           	
  5931                           i2l204:
  5932  001668                     	goto	i2l205
  5933  001668  EF3A  F00B         	
  5934                           i2l203:
  5935  00166C                     	goto	i2l205
  5936  00166C  EF3A  F00B         	
  5937                           i2l201:
  5938  001670                     	goto	i2l205
  5939  001670  EF3A  F00B         	
  5940                           i2l199:
  5941  001674                     	line	240
  5942                           	
  5943                           i2l205:
  5944  001674                     	return	;funcret
  5945  001674  0012               	opt stack 0
  5946                           GLOBAL	__end_of_refreshSevenSegment
  5947                           	__end_of_refreshSevenSegment:
  5948  001676                     	signat	_refreshSevenSegment,89
  5949                           	global	i2___awmod
  5950                           
  5951 ;; *************** function i2___awmod *****************
  5952 ;; Defined at:
  5953 ;;		line 7 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/awmod.c"
  5954 ;; Parameters:    Size  Location     Type
  5955 ;;  dividend        2    0[COMRAM] int 
  5956 ;;  divisor         2    2[COMRAM] int 
  5957 ;; Auto vars:     Size  Location     Type
  5958 ;;  __awmod         1    5[COMRAM] unsigned char 
  5959 ;;  __awmod         1    4[COMRAM] unsigned char 
  5960 ;; Return value:  Size  Location     Type
  5961 ;;                  2    0[COMRAM] int 
  5962 ;; Registers used:
  5963 ;;		wreg, status,2, status,0
  5964 ;; Tracked objects:
  5965 ;;		On entry : 0/0
  5966 ;;		On exit  : 0/0
  5967 ;;		Unchanged: 0/0
  5968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  5969 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  5970 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  5971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  5972 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  5973 ;;Total ram usage:        6 bytes
  5974 ;; Hardware stack levels used:    1
  5975 ;; This function calls:
  5976 ;;		Nothing
  5977 ;; This function is called by:
  5978 ;;		_refreshSevenSegment
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           psect	text18,class=CODE,space=0,reloc=2,group=0
  5982                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/awmod.c"
  5983                           	line	7
  5984                           global __ptext18
  5985                           __ptext18:
  5986  001A80                     psect	text18
  5987                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/awmod.c"
  5988                           	line	7
  5989                           	global	__size_ofi2___awmod
  5990                           	__size_ofi2___awmod	equ	__end_ofi2___awmod-i2___awmod
  5991  0000                     	
  5992                           i2___awmod:
  5993  001A80                     ;incstack = 0
  5994                           	opt	stack 24
  5995                           	line	12
  5996                           	
  5997                           i2l1910:
  5998  001A80                     	movlw	low(0)
  5999  001A80  0E00               	movwf	((c:i2___awmod@sign)),c
  6000  001A82  6E06               	line	13
  6001                           	
  6002                           i2l1912:
  6003  001A84                     	btfsc	((c:i2___awmod@dividend+1)),c,7
  6004  001A84  BE02               	goto	i2u99_40
  6005  001A86  EF49  F00D         	goto	i2u99_41
  6006  001A8A  EF47  F00D         
  6007                           i2u99_41:
  6008  001A8E                     	goto	i2l1918
  6009  001A8E  EF51  F00D         i2u99_40:
  6010  001A92                     	line	14
  6011                           	
  6012                           i2l1914:
  6013  001A92                     	negf	((c:i2___awmod@dividend)),c
  6014  001A92  6C01               	comf	((c:i2___awmod@dividend+1)),c
  6015  001A94  1E02               	btfsc	status,0
  6016  001A96  B0D8               	incf	((c:i2___awmod@dividend+1)),c
  6017  001A98  2A02               	line	15
  6018                           	
  6019                           i2l1916:
  6020  001A9A                     	movlw	low(01h)
  6021  001A9A  0E01               	movwf	((c:i2___awmod@sign)),c
  6022  001A9C  6E06               	goto	i2l1918
  6023  001A9E  EF51  F00D         	line	16
  6024                           	
  6025                           i2l599:
  6026  001AA2                     	line	17
  6027                           	
  6028                           i2l1918:
  6029  001AA2                     	btfsc	((c:i2___awmod@divisor+1)),c,7
  6030  001AA2  BE04               	goto	i2u100_40
  6031  001AA4  EF58  F00D         	goto	i2u100_41
  6032  001AA8  EF56  F00D         
  6033                           i2u100_41:
  6034  001AAC                     	goto	i2l1922
  6035  001AAC  EF5E  F00D         i2u100_40:
  6036  001AB0                     	line	18
  6037                           	
  6038                           i2l1920:
  6039  001AB0                     	negf	((c:i2___awmod@divisor)),c
  6040  001AB0  6C03               	comf	((c:i2___awmod@divisor+1)),c
  6041  001AB2  1E04               	btfsc	status,0
  6042  001AB4  B0D8               	incf	((c:i2___awmod@divisor+1)),c
  6043  001AB6  2A04               	goto	i2l1922
  6044  001AB8  EF5E  F00D         	
  6045                           i2l600:
  6046  001ABC                     	line	19
  6047                           	
  6048                           i2l1922:
  6049  001ABC                     	movf	((c:i2___awmod@divisor)),c,w
  6050  001ABC  5003               iorwf	((c:i2___awmod@divisor+1)),c,w
  6051  001ABE  1004               	btfsc	status,2
  6052  001AC0  B4D8               	goto	i2u101_41
  6053  001AC2  EF65  F00D         	goto	i2u101_40
  6054  001AC6  EF67  F00D         
  6055                           i2u101_41:
  6056  001ACA                     	goto	i2l1938
  6057  001ACA  EF97  F00D         i2u101_40:
  6058  001ACE                     	line	20
  6059                           	
  6060                           i2l1924:
  6061  001ACE                     	movlw	low(01h)
  6062  001ACE  0E01               	movwf	((c:i2___awmod@counter)),c
  6063  001AD0  6E05               	line	21
  6064                           	goto	i2l1928
  6065  001AD2  EF71  F00D         	
  6066                           i2l603:
  6067  001AD6                     	line	22
  6068                           	
  6069                           i2l1926:
  6070  001AD6                     	bcf	status,0
  6071  001AD6  90D8               	rlcf	((c:i2___awmod@divisor)),c
  6072  001AD8  3603               	rlcf	((c:i2___awmod@divisor+1)),c
  6073  001ADA  3604               	line	23
  6074                           	incf	((c:i2___awmod@counter)),c
  6075  001ADC  2A05               	goto	i2l1928
  6076  001ADE  EF71  F00D         	line	24
  6077                           	
  6078                           i2l602:
  6079  001AE2                     	line	21
  6080                           	
  6081                           i2l1928:
  6082  001AE2                     	
  6083                           	btfss	((c:i2___awmod@divisor+1)),c,(15)&7
  6084  001AE2  AE04               	goto	i2u102_41
  6085  001AE4  EF76  F00D         	goto	i2u102_40
  6086  001AE8  EF78  F00D         i2u102_41:
  6087  001AEC                     	goto	i2l1926
  6088  001AEC  EF6B  F00D         i2u102_40:
  6089  001AF0                     	goto	i2l1930
  6090  001AF0  EF7C  F00D         	
  6091                           i2l604:
  6092  001AF4                     	goto	i2l1930
  6093  001AF4  EF7C  F00D         	line	25
  6094                           	
  6095                           i2l605:
  6096  001AF8                     	line	26
  6097                           	
  6098                           i2l1930:
  6099  001AF8                     		movf	((c:i2___awmod@divisor)),c,w
  6100  001AF8  5003               	subwf	((c:i2___awmod@dividend)),c,w
  6101  001AFA  5C01               	movf	((c:i2___awmod@divisor+1)),c,w
  6102  001AFC  5004               	subwfb	((c:i2___awmod@dividend+1)),c,w
  6103  001AFE  5802               	btfss	status,0
  6104  001B00  A0D8               	goto	i2u103_41
  6105  001B02  EF85  F00D         	goto	i2u103_40
  6106  001B06  EF87  F00D         
  6107                           i2u103_41:
  6108  001B0A                     	goto	i2l1934
  6109  001B0A  EF8D  F00D         i2u103_40:
  6110  001B0E                     	line	27
  6111                           	
  6112                           i2l1932:
  6113  001B0E                     	movf	((c:i2___awmod@divisor)),c,w
  6114  001B0E  5003               	subwf	((c:i2___awmod@dividend)),c
  6115  001B10  5E01               	movf	((c:i2___awmod@divisor+1)),c,w
  6116  001B12  5004               	subwfb	((c:i2___awmod@dividend+1)),c
  6117  001B14  5A02               
  6118                           	goto	i2l1934
  6119  001B16  EF8D  F00D         	
  6120                           i2l606:
  6121  001B1A                     	line	28
  6122                           	
  6123                           i2l1934:
  6124  001B1A                     	bcf	status,0
  6125  001B1A  90D8               	rrcf	((c:i2___awmod@divisor+1)),c
  6126  001B1C  3204               	rrcf	((c:i2___awmod@divisor)),c
  6127  001B1E  3203               	line	29
  6128                           	
  6129                           i2l1936:
  6130  001B20                     	decfsz	((c:i2___awmod@counter)),c
  6131  001B20  2E05               	
  6132                           	goto	i2l1930
  6133  001B22  EF7C  F00D         	goto	i2l1938
  6134  001B26  EF97  F00D         	
  6135                           i2l607:
  6136  001B2A                     	goto	i2l1938
  6137  001B2A  EF97  F00D         	line	30
  6138                           	
  6139                           i2l601:
  6140  001B2E                     	line	31
  6141                           	
  6142                           i2l1938:
  6143  001B2E                     	movf	((c:i2___awmod@sign)),c,w
  6144  001B2E  5006               	btfsc	status,2
  6145  001B30  B4D8               	goto	i2u104_41
  6146  001B32  EF9D  F00D         	goto	i2u104_40
  6147  001B36  EF9F  F00D         i2u104_41:
  6148  001B3A                     	goto	i2l1942
  6149  001B3A  EFA5  F00D         i2u104_40:
  6150  001B3E                     	line	32
  6151                           	
  6152                           i2l1940:
  6153  001B3E                     	negf	((c:i2___awmod@dividend)),c
  6154  001B3E  6C01               	comf	((c:i2___awmod@dividend+1)),c
  6155  001B40  1E02               	btfsc	status,0
  6156  001B42  B0D8               	incf	((c:i2___awmod@dividend+1)),c
  6157  001B44  2A02               	goto	i2l1942
  6158  001B46  EFA5  F00D         	
  6159                           i2l608:
  6160  001B4A                     	line	33
  6161                           	
  6162                           i2l1942:
  6163  001B4A                     	movff	(c:i2___awmod@dividend),(c:?i2___awmod)
  6164  001B4A  C001  F001         	movff	(c:i2___awmod@dividend+1),(c:?i2___awmod+1)
  6165  001B4E  C002  F002         	goto	i2l609
  6166  001B52  EFAB  F00D         	
  6167                           i2l1944:
  6168  001B56                     	line	34
  6169                           	
  6170                           i2l609:
  6171  001B56                     	return	;funcret
  6172  001B56  0012               	opt stack 0
  6173                           GLOBAL	__end_ofi2___awmod
  6174                           	__end_ofi2___awmod:
  6175  001B58                     	signat	i2___awmod,90
  6176                           	global	i2___awdiv
  6177                           
  6178 ;; *************** function i2___awdiv *****************
  6179 ;; Defined at:
  6180 ;;		line 7 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/awdiv.c"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;  dividend        2    0[COMRAM] int 
  6183 ;;  divisor         2    2[COMRAM] int 
  6184 ;; Auto vars:     Size  Location     Type
  6185 ;;  __awdiv         2    6[COMRAM] int 
  6186 ;;  __awdiv         1    5[COMRAM] unsigned char 
  6187 ;;  __awdiv         1    4[COMRAM] unsigned char 
  6188 ;; Return value:  Size  Location     Type
  6189 ;;                  2    0[COMRAM] int 
  6190 ;; Registers used:
  6191 ;;		wreg, status,2, status,0
  6192 ;; Tracked objects:
  6193 ;;		On entry : 0/0
  6194 ;;		On exit  : 0/0
  6195 ;;		Unchanged: 0/0
  6196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  6197 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  6198 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  6199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  6200 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  6201 ;;Total ram usage:        8 bytes
  6202 ;; Hardware stack levels used:    1
  6203 ;; This function calls:
  6204 ;;		Nothing
  6205 ;; This function is called by:
  6206 ;;		_refreshSevenSegment
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           psect	text19,class=CODE,space=0,reloc=2,group=0
  6210                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/awdiv.c"
  6211                           	line	7
  6212                           global __ptext19
  6213                           __ptext19:
  6214  0018BC                     psect	text19
  6215                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/awdiv.c"
  6216                           	line	7
  6217                           	global	__size_ofi2___awdiv
  6218                           	__size_ofi2___awdiv	equ	__end_ofi2___awdiv-i2___awdiv
  6219  0000                     	
  6220                           i2___awdiv:
  6221  0018BC                     ;incstack = 0
  6222                           	opt	stack 24
  6223                           	line	13
  6224                           	
  6225                           i2l1866:
  6226  0018BC                     	movlw	low(0)
  6227  0018BC  0E00               	movwf	((c:i2___awdiv@sign)),c
  6228  0018BE  6E06               	line	14
  6229                           	
  6230                           i2l1868:
  6231  0018C0                     	btfsc	((c:i2___awdiv@divisor+1)),c,7
  6232  0018C0  BE04               	goto	i2u93_40
  6233  0018C2  EF67  F00C         	goto	i2u93_41
  6234  0018C6  EF65  F00C         
  6235                           i2u93_41:
  6236  0018CA                     	goto	i2l1874
  6237  0018CA  EF6F  F00C         i2u93_40:
  6238  0018CE                     	line	15
  6239                           	
  6240                           i2l1870:
  6241  0018CE                     	negf	((c:i2___awdiv@divisor)),c
  6242  0018CE  6C03               	comf	((c:i2___awdiv@divisor+1)),c
  6243  0018D0  1E04               	btfsc	status,0
  6244  0018D2  B0D8               	incf	((c:i2___awdiv@divisor+1)),c
  6245  0018D4  2A04               	line	16
  6246                           	
  6247                           i2l1872:
  6248  0018D6                     	movlw	low(01h)
  6249  0018D6  0E01               	movwf	((c:i2___awdiv@sign)),c
  6250  0018D8  6E06               	goto	i2l1874
  6251  0018DA  EF6F  F00C         	line	17
  6252                           	
  6253                           i2l586:
  6254  0018DE                     	line	18
  6255                           	
  6256                           i2l1874:
  6257  0018DE                     	btfsc	((c:i2___awdiv@dividend+1)),c,7
  6258  0018DE  BE02               	goto	i2u94_40
  6259  0018E0  EF76  F00C         	goto	i2u94_41
  6260  0018E4  EF74  F00C         
  6261                           i2u94_41:
  6262  0018E8                     	goto	i2l1880
  6263  0018E8  EF7E  F00C         i2u94_40:
  6264  0018EC                     	line	19
  6265                           	
  6266                           i2l1876:
  6267  0018EC                     	negf	((c:i2___awdiv@dividend)),c
  6268  0018EC  6C01               	comf	((c:i2___awdiv@dividend+1)),c
  6269  0018EE  1E02               	btfsc	status,0
  6270  0018F0  B0D8               	incf	((c:i2___awdiv@dividend+1)),c
  6271  0018F2  2A02               	line	20
  6272                           	
  6273                           i2l1878:
  6274  0018F4                     	movlw	(01h)&0ffh
  6275  0018F4  0E01               	xorwf	((c:i2___awdiv@sign)),c
  6276  0018F6  1A06               	goto	i2l1880
  6277  0018F8  EF7E  F00C         	line	21
  6278                           	
  6279                           i2l587:
  6280  0018FC                     	line	22
  6281                           	
  6282                           i2l1880:
  6283  0018FC                     	movlw	high(0)
  6284  0018FC  0E00               	movwf	((c:i2___awdiv@quotient+1)),c
  6285  0018FE  6E08               	movlw	low(0)
  6286  001900  0E00               	movwf	((c:i2___awdiv@quotient)),c
  6287  001902  6E07               	line	23
  6288                           	
  6289                           i2l1882:
  6290  001904                     	movf	((c:i2___awdiv@divisor)),c,w
  6291  001904  5003               iorwf	((c:i2___awdiv@divisor+1)),c,w
  6292  001906  1004               	btfsc	status,2
  6293  001908  B4D8               	goto	i2u95_41
  6294  00190A  EF89  F00C         	goto	i2u95_40
  6295  00190E  EF8B  F00C         
  6296                           i2u95_41:
  6297  001912                     	goto	i2l1902
  6298  001912  EFBF  F00C         i2u95_40:
  6299  001916                     	line	24
  6300                           	
  6301                           i2l1884:
  6302  001916                     	movlw	low(01h)
  6303  001916  0E01               	movwf	((c:i2___awdiv@counter)),c
  6304  001918  6E05               	line	25
  6305                           	goto	i2l1888
  6306  00191A  EF95  F00C         	
  6307                           i2l590:
  6308  00191E                     	line	26
  6309                           	
  6310                           i2l1886:
  6311  00191E                     	bcf	status,0
  6312  00191E  90D8               	rlcf	((c:i2___awdiv@divisor)),c
  6313  001920  3603               	rlcf	((c:i2___awdiv@divisor+1)),c
  6314  001922  3604               	line	27
  6315                           	incf	((c:i2___awdiv@counter)),c
  6316  001924  2A05               	goto	i2l1888
  6317  001926  EF95  F00C         	line	28
  6318                           	
  6319                           i2l589:
  6320  00192A                     	line	25
  6321                           	
  6322                           i2l1888:
  6323  00192A                     	
  6324                           	btfss	((c:i2___awdiv@divisor+1)),c,(15)&7
  6325  00192A  AE04               	goto	i2u96_41
  6326  00192C  EF9A  F00C         	goto	i2u96_40
  6327  001930  EF9C  F00C         i2u96_41:
  6328  001934                     	goto	i2l1886
  6329  001934  EF8F  F00C         i2u96_40:
  6330  001938                     	goto	i2l1890
  6331  001938  EFA0  F00C         	
  6332                           i2l591:
  6333  00193C                     	goto	i2l1890
  6334  00193C  EFA0  F00C         	line	29
  6335                           	
  6336                           i2l592:
  6337  001940                     	line	30
  6338                           	
  6339                           i2l1890:
  6340  001940                     	bcf	status,0
  6341  001940  90D8               	rlcf	((c:i2___awdiv@quotient)),c
  6342  001942  3607               	rlcf	((c:i2___awdiv@quotient+1)),c
  6343  001944  3608               	line	31
  6344                           	
  6345                           i2l1892:
  6346  001946                     		movf	((c:i2___awdiv@divisor)),c,w
  6347  001946  5003               	subwf	((c:i2___awdiv@dividend)),c,w
  6348  001948  5C01               	movf	((c:i2___awdiv@divisor+1)),c,w
  6349  00194A  5004               	subwfb	((c:i2___awdiv@dividend+1)),c,w
  6350  00194C  5802               	btfss	status,0
  6351  00194E  A0D8               	goto	i2u97_41
  6352  001950  EFAC  F00C         	goto	i2u97_40
  6353  001954  EFAE  F00C         
  6354                           i2u97_41:
  6355  001958                     	goto	i2l1898
  6356  001958  EFB5  F00C         i2u97_40:
  6357  00195C                     	line	32
  6358                           	
  6359                           i2l1894:
  6360  00195C                     	movf	((c:i2___awdiv@divisor)),c,w
  6361  00195C  5003               	subwf	((c:i2___awdiv@dividend)),c
  6362  00195E  5E01               	movf	((c:i2___awdiv@divisor+1)),c,w
  6363  001960  5004               	subwfb	((c:i2___awdiv@dividend+1)),c
  6364  001962  5A02               
  6365                           	line	33
  6366                           	
  6367                           i2l1896:
  6368  001964                     	bsf	(0+(0/8)+(c:i2___awdiv@quotient)),c,(0)&7
  6369  001964  8007               	goto	i2l1898
  6370  001966  EFB5  F00C         	line	34
  6371                           	
  6372                           i2l593:
  6373  00196A                     	line	35
  6374                           	
  6375                           i2l1898:
  6376  00196A                     	bcf	status,0
  6377  00196A  90D8               	rrcf	((c:i2___awdiv@divisor+1)),c
  6378  00196C  3204               	rrcf	((c:i2___awdiv@divisor)),c
  6379  00196E  3203               	line	36
  6380                           	
  6381                           i2l1900:
  6382  001970                     	decfsz	((c:i2___awdiv@counter)),c
  6383  001970  2E05               	
  6384                           	goto	i2l1890
  6385  001972  EFA0  F00C         	goto	i2l1902
  6386  001976  EFBF  F00C         	
  6387                           i2l594:
  6388  00197A                     	goto	i2l1902
  6389  00197A  EFBF  F00C         	line	37
  6390                           	
  6391                           i2l588:
  6392  00197E                     	line	38
  6393                           	
  6394                           i2l1902:
  6395  00197E                     	movf	((c:i2___awdiv@sign)),c,w
  6396  00197E  5006               	btfsc	status,2
  6397  001980  B4D8               	goto	i2u98_41
  6398  001982  EFC5  F00C         	goto	i2u98_40
  6399  001986  EFC7  F00C         i2u98_41:
  6400  00198A                     	goto	i2l1906
  6401  00198A  EFCD  F00C         i2u98_40:
  6402  00198E                     	line	39
  6403                           	
  6404                           i2l1904:
  6405  00198E                     	negf	((c:i2___awdiv@quotient)),c
  6406  00198E  6C07               	comf	((c:i2___awdiv@quotient+1)),c
  6407  001990  1E08               	btfsc	status,0
  6408  001992  B0D8               	incf	((c:i2___awdiv@quotient+1)),c
  6409  001994  2A08               	goto	i2l1906
  6410  001996  EFCD  F00C         	
  6411                           i2l595:
  6412  00199A                     	line	40
  6413                           	
  6414                           i2l1906:
  6415  00199A                     	movff	(c:i2___awdiv@quotient),(c:?i2___awdiv)
  6416  00199A  C007  F001         	movff	(c:i2___awdiv@quotient+1),(c:?i2___awdiv+1)
  6417  00199E  C008  F002         	goto	i2l596
  6418  0019A2  EFD3  F00C         	
  6419                           i2l1908:
  6420  0019A6                     	line	41
  6421                           	
  6422                           i2l596:
  6423  0019A6                     	return	;funcret
  6424  0019A6  0012               	opt stack 0
  6425                           GLOBAL	__end_ofi2___awdiv
  6426                           	__end_ofi2___awdiv:
  6427  0019A8                     	signat	i2___awdiv,90
  6428                           	global	_incrementDigit
  6429                           
  6430 ;; *************** function _incrementDigit *****************
  6431 ;; Defined at:
  6432 ;;		line 259 in file "main.c"
  6433 ;; Parameters:    Size  Location     Type
  6434 ;;  number          1    wreg     unsigned char 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;  number          1    0[COMRAM] unsigned char 
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  1    wreg      unsigned char 
  6439 ;; Registers used:
  6440 ;;		wreg, status,2, status,0
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  6446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  6447 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  6448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  6449 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  6450 ;;Total ram usage:        1 bytes
  6451 ;; Hardware stack levels used:    1
  6452 ;; This function calls:
  6453 ;;		Nothing
  6454 ;; This function is called by:
  6455 ;;		_highISR
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           psect	text20,class=CODE,space=0,reloc=2,group=0
  6459                           	file	"main.c"
  6460                           	line	259
  6461                           global __ptext20
  6462                           __ptext20:
  6463  001EAC                     psect	text20
  6464                           	file	"main.c"
  6465                           	line	259
  6466                           	global	__size_of_incrementDigit
  6467                           	__size_of_incrementDigit	equ	__end_of_incrementDigit-_incrementDigit
  6468  0000                     	
  6469                           _incrementDigit:
  6470  001EAC                     ;incstack = 0
  6471                           	opt	stack 25
  6472                           ;incrementDigit@number stored from wreg
  6473                           	movwf	((c:incrementDigit@number)),c
  6474  001EAC  6E01               	line	261
  6475                           	
  6476                           i2l1474:
  6477  001EAE                     ;main.c: 259: unsigned char incrementDigit(unsigned char number);main.c: 260: {;main.c: 
                                 261:     if(number==9)
  6478                           		movlw	9
  6479  001EAE  0E09               	xorwf	((c:incrementDigit@number)),c,w
  6480  001EB0  1801               	btfss	status,2
  6481  001EB2  A4D8               	goto	i2u38_41
  6482  001EB4  EF5E  F00F         	goto	i2u38_40
  6483  001EB8  EF60  F00F         
  6484                           i2u38_41:
  6485  001EBC                     	goto	i2l1480
  6486  001EBC  EF65  F00F         i2u38_40:
  6487  001EC0                     	line	263
  6488                           	
  6489                           i2l1476:
  6490  001EC0                     ;main.c: 262:     {;main.c: 263:         return 0;
  6491                           	movlw	(0)&0ffh
  6492  001EC0  0E00               	goto	i2l221
  6493  001EC2  EF68  F00F         	
  6494                           i2l1478:
  6495  001EC6                     	goto	i2l221
  6496  001EC6  EF68  F00F         	line	264
  6497                           ;main.c: 264:     }
  6498                           	
  6499                           i2l220:
  6500  001ECA                     	line	265
  6501                           	
  6502                           i2l1480:
  6503  001ECA                     ;main.c: 265:     return number+1;
  6504                           	incf	((c:incrementDigit@number)),c,w
  6505  001ECA  2801               	goto	i2l221
  6506  001ECC  EF68  F00F         	
  6507                           i2l1482:
  6508  001ED0                     	line	266
  6509                           	
  6510                           i2l221:
  6511  001ED0                     	return	;funcret
  6512  001ED0  0012               	opt stack 0
  6513                           GLOBAL	__end_of_incrementDigit
  6514                           	__end_of_incrementDigit:
  6515  001ED2                     	signat	_incrementDigit,4217
  6516                           	global	_enableADC
  6517                           
  6518 ;; *************** function _enableADC *****************
  6519 ;; Defined at:
  6520 ;;		line 186 in file "main.c"
  6521 ;; Parameters:    Size  Location     Type
  6522 ;;		None
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;		None
  6525 ;; Return value:  Size  Location     Type
  6526 ;;                  1    wreg      void 
  6527 ;; Registers used:
  6528 ;;		wreg, status,2
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  6534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  6535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  6536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  6537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  6538 ;;Total ram usage:        0 bytes
  6539 ;; Hardware stack levels used:    1
  6540 ;; This function calls:
  6541 ;;		Nothing
  6542 ;; This function is called by:
  6543 ;;		_highISR
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           psect	text21,class=CODE,space=0,reloc=2,group=0
  6547                           	line	186
  6548                           global __ptext21
  6549                           __ptext21:
  6550  001F02                     psect	text21
  6551                           	file	"main.c"
  6552                           	line	186
  6553                           	global	__size_of_enableADC
  6554                           	__size_of_enableADC	equ	__end_of_enableADC-_enableADC
  6555  0000                     	
  6556                           _enableADC:
  6557  001F02                     ;incstack = 0
  6558                           	opt	stack 25
  6559                           	line	188
  6560                           	
  6561                           i2l1406:
  6562  001F02                     ;main.c: 188:     ADCON0 = 0x33;
  6563                           	movlw	low(033h)
  6564  001F02  0E33               	movwf	((c:4034)),c	;volatile
  6565  001F04  6EC2               	line	189
  6566                           ;main.c: 189:     ADCON1 = 0x02;
  6567                           	movlw	low(02h)
  6568  001F06  0E02               	movwf	((c:4033)),c	;volatile
  6569  001F08  6EC1               	line	190
  6570                           	
  6571                           i2l1408:
  6572  001F0A                     ;main.c: 190:     ADFM = 1;
  6573                           	bsf	c:(32263/8),(32263)&7	;volatile
  6574  001F0A  8EC0               	line	191
  6575                           	
  6576                           i2l1410:
  6577  001F0C                     ;main.c: 191:     TRISH4 = 1;
  6578                           	bsf	c:(31948/8),(31948)&7	;volatile
  6579  001F0C  8899               	line	193
  6580                           	
  6581                           i2l1412:
  6582  001F0E                     ;main.c: 193:     ADIP=1;
  6583                           	bsf	c:(31998/8),(31998)&7	;volatile
  6584  001F0E  8C9F               	line	194
  6585                           	
  6586                           i2l1414:
  6587  001F10                     ;main.c: 194:     ADIE=1;
  6588                           	bsf	c:(31982/8),(31982)&7	;volatile
  6589  001F10  8C9D               	line	195
  6590                           	
  6591                           i2l1416:
  6592  001F12                     ;main.c: 195:     ADIF=0;
  6593                           	bcf	c:(31990/8),(31990)&7	;volatile
  6594  001F12  9C9E               	line	196
  6595                           	
  6596                           i2l193:
  6597  001F14                     	return	;funcret
  6598  001F14  0012               	opt stack 0
  6599                           GLOBAL	__end_of_enableADC
  6600                           	__end_of_enableADC:
  6601  001F16                     	signat	_enableADC,89
  6602                           psect	smallconst
  6603                           	db 0	; dummy byte at the end
  6604  001077  00                 	global	__smallconst
  6605                           	global	__mediumconst
  6606                           	GLOBAL	__activetblptr
  6607                           __activetblptr	EQU	2
  6608  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  6609                           	PSECT	rparam,class=COMRAM,space=1,noexec
  6610                           	GLOBAL	__Lrparam
  6611                           	FNCONF	rparam,??,?
  6612                           	GLOBAL	___rparam_used
  6613                           	___rparam_used EQU 1
  6614  0000                     	GLOBAL	___param_bank
  6615                           	___param_bank EQU 0
  6616  0000                     GLOBAL	__Lparam, __Hparam
  6617                           GLOBAL	__Lrparam, __Hrparam
  6618                           __Lparam	EQU	__Lrparam
  6619  0000                     __Hparam	EQU	__Hrparam
  6620  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  6621                           	global	btemp
  6622                           btemp:
  6623  000047                     	ds	1
  6624  000047                     	global	int$flags
  6625                           	int$flags	set btemp
  6626  0000                     	global	wtemp8
  6627                           	wtemp8 set btemp+1
  6628  0000                     	global	ttemp5
  6629                           	ttemp5 set btemp+1
  6630  0000                     	global	ttemp6
  6631                           	ttemp6 set btemp+4
  6632  0000                     	global	ttemp7
  6633                           	ttemp7 set btemp+8
  6634  0000                     	end


Data Sizes:
    Strings     14
    Constant    104
    Data        37
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      70
    BANK0           160      8      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    WriteStringToLCD@s	PTR const unsigned char  size(2) Largest target is 56
		 -> enterVotersText(CODE[16]), names(CODE[56]), ids(BANK0[24]), STR_1(CODE[14]), 
		 -> emptyline(CODE[16]), electroVote(CODE[16]), 


Critical Paths under _main in COMRAM

    _refreshTimeLeft->_WriteStringToLCD
    _refreshPerson->___awmod
    _init2->_WriteStringToLCD
    _numToStringPrint->_WriteCommandToLCD
    _numToStringPrint->_WriteDataToLCD
    _ClearLCDScreen->_WriteCommandToLCD
    _init1->_WriteStringToLCD
    _WriteStringToLCD->_WriteDataToLCD
    _WriteDataToLCD->_ToggleEpinOfLCD
    _WriteCommandToLCD->_ToggleEpinOfLCD

Critical Paths under _highISR in COMRAM

    _highISR->_refreshSevenSegment
    _refreshSevenSegment->i2___awdiv

Critical Paths under _main in BANK0

    _main->_refreshPerson
    _refreshPerson->___awdiv

Critical Paths under _highISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _highISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _highISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _highISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _highISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _highISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _highISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _highISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _highISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _highISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _highISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _highISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _highISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _highISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _highISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _highISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5388
                  _WriteCommandToLCD
                     _WriteDataToLCD
                      _decrementTime
                       _enableTimers
                              _init1
                              _init2
                   _numToStringPrint
                      _refreshPerson
                    _refreshTimeLeft
                             _wait3s
 ---------------------------------------------------------------------------------
 (1) _wait3s                                               3     3      0      45
                                             24 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _refreshTimeLeft                                      1     1      0     859
                                             28 COMRAM     1     1      0
                  _WriteCommandToLCD
                     _WriteDataToLCD
                   _WriteStringToLCD
 ---------------------------------------------------------------------------------
 (1) _refreshPerson                                        4     4      0    2456
                                              4 BANK0      4     4      0
                  _WriteCommandToLCD
                     _WriteDataToLCD
                   _WriteStringToLCD
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     723
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     735
                                             24 COMRAM     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _init2                                                0     0      0     983
                     _ClearLCDScreen
                  _WriteCommandToLCD
                   _WriteStringToLCD
                   _numToStringPrint
 ---------------------------------------------------------------------------------
 (1) _numToStringPrint                                     1     1      0     192
                                             26 COMRAM     1     1      0
                  _WriteCommandToLCD
                     _WriteDataToLCD
 ---------------------------------------------------------------------------------
 (2) _ClearLCDScreen                                       1     1      0      62
                                             26 COMRAM     1     1      0
                  _WriteCommandToLCD
 ---------------------------------------------------------------------------------
 (1) _init1                                                1     1      0     729
                                             28 COMRAM     1     1      0
                    _ToggleEpinOfLCD
                  _WriteCommandToLCD
                   _WriteStringToLCD
 ---------------------------------------------------------------------------------
 (2) _WriteStringToLCD                                     2     0      2     667
                                             26 COMRAM     2     0      2
                     _WriteDataToLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataToLCD                                       1     1      0      62
                                             25 COMRAM     1     1      0
                    _ToggleEpinOfLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCommandToLCD                                    1     1      0      62
                                             25 COMRAM     1     1      0
                    _ToggleEpinOfLCD
 ---------------------------------------------------------------------------------
 (4) _ToggleEpinOfLCD                                      1     1      0       0
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _enableTimers                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decrementTime                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _highISR                                             11    11      0     898
                                             13 COMRAM    11    11      0
                          _enableADC
                     _incrementDigit
                _refreshSevenSegment
 ---------------------------------------------------------------------------------
 (6) _refreshSevenSegment                                  5     5      0     845
                                              8 COMRAM     5     5      0
                          i2___awdiv
                          i2___awmod
 ---------------------------------------------------------------------------------
 (7) i2___awmod                                            6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) i2___awdiv                                            8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _incrementDigit                                       1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _enableADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _WriteCommandToLCD
     _ToggleEpinOfLCD
   _WriteDataToLCD
     _ToggleEpinOfLCD
   _decrementTime
   _enableTimers
   _init1
     _ToggleEpinOfLCD
     _WriteCommandToLCD
       _ToggleEpinOfLCD
     _WriteStringToLCD
       _WriteDataToLCD
         _ToggleEpinOfLCD
   _init2
     _ClearLCDScreen
       _WriteCommandToLCD
         _ToggleEpinOfLCD
     _WriteCommandToLCD
       _ToggleEpinOfLCD
     _WriteStringToLCD
       _WriteDataToLCD
         _ToggleEpinOfLCD
     _numToStringPrint
       _WriteCommandToLCD
         _ToggleEpinOfLCD
       _WriteDataToLCD
         _ToggleEpinOfLCD
   _numToStringPrint
     _WriteCommandToLCD
       _ToggleEpinOfLCD
     _WriteDataToLCD
       _ToggleEpinOfLCD
   _refreshPerson
     _WriteCommandToLCD
       _ToggleEpinOfLCD
     _WriteDataToLCD
       _ToggleEpinOfLCD
     _WriteStringToLCD
       _WriteDataToLCD
         _ToggleEpinOfLCD
     ___awdiv
     ___awmod
   _refreshTimeLeft
     _WriteCommandToLCD
       _ToggleEpinOfLCD
     _WriteDataToLCD
       _ToggleEpinOfLCD
     _WriteStringToLCD
       _WriteDataToLCD
         _ToggleEpinOfLCD
   _wait3s

 _highISR (ROOT)
   _enableADC
   _incrementDigit
   _refreshSevenSegment
     i2___awdiv
     i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      20       5       20.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1E      46       1       74.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      66      32        0.0%
DATA                 0      0      66       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Apr 29 17:54:37 2019

                             _i 0039                    ___awdiv@sign 0079                             l210 1C44  
                           l211 1C1A                             l212 1C2A                             l213 1C22  
                           l214 1C3E                             l215 1C58                             l224 1D6E  
                           l216 1C72                             l208 1C5E                             l225 1D60  
                           l217 1C72                             l209 1C12                             l226 1D6A  
                           l227 1D74                             l228 1D74                             l173 13B0  
                           l181 1DDC                             l261 167E                             l190 1EAA  
                           l350 1E08                             l174 13DA                             l270 16F0  
                           l262 167E                             l175 1512                             l271 16EC  
                           l263 1690                             l344 1E5E                             l600 19E4  
                           l184 1C00                             l280 1798                             l272 16F4  
                           l264 1694                             l601 1A56                             l281 17A6  
                           l273 1714                             l265 1694                             l362 1F00  
                           l178 1E84                             l602 1A0A                             l282 17C2  
                           l274 1760                             l266 16A6                             l347 1E34  
                           l187 1DB0                             l603 19FE                             l283 17C6  
                           l275 1748                             l267 16B2                             l356 1CA6  
                           l604 1A1C                             l284 17CA                             l276 175C  
                           l268 16CE                             l357 1C78                             l605 1A20  
                           l285 17CA                             l277 177C                             l269 16E8  
                           l358 1CDC                             l606 1A42                             l278 1794  
                           l359 1CDC                             l607 1A52                             l279 179C  
                           l608 1A72                             l609 1A7E                             l590 1832  
                           l591 1850                             l592 1854                             l593 187E  
                           l594 188E                             l586 17F2                             l595 18AE  
                           l587 1810                             l596 18BA                             l588 1892  
                           l589 183E                             l599 19CA                             _RE1 007C21  
                           u400 1D58                             u401 1D54                             u350 1C3A  
                           u351 1C36                             u360 1C54                             u361 1C50  
                           u370 1C6E                             u371 1C6A                             u390 1D48  
                           u391 1D44                             _ids 0060                    ___awmod@sign 001E  
                           prod 000FF3                             wreg 000FE8                    __CFG_LVP$OFF 000000  
                  __CFG_WDT$OFF 000000                            l1400 1EA4                            l1402 1EA6  
                          l1404 1EA8                            l2400 1E60                            l2410 1EF0  
                          l2402 1E6C                            l2500 13C4                            l2404 1E72  
                          l2420 17F2                            l2412 17CE                            l1460 1C1A  
                          l1390 1E86                            l2510 144E                            l2502 13C6  
                          l2406 1E7E                            l2430 182A                            l2422 1800  
                          l2414 17D4                            l1470 1C58                            l1462 1C24  
                          l1392 1E8A                            l2360 1E3C                            l2520 147A  
                          l2512 145E                            l2504 13DA                            l2408 1EEA  
                          l2600 1D76                            l2440 1870                            l2432 1832  
                          l2424 1808                            l2416 17E2                            l1464 1C2A  
                          l1472 1C5E                            l1456 1C02                            l1490 1D60  
                          l1394 1E8E                            l2362 1E4A                            l2370 1E0E  
                          l2530 14A6                            l2522 148A                            l2514 146E  
                          l2506 13FE                            l2610 1D84                            l2602 1D78  
                          l2450 18A2                            l2442 1878                            l2434 183E  
                          l2426 1810                            l2418 17EA                            l1466 1C3E  
                          l1458 1C12                            l1492 1D62                            l1484 1D38  
                          l1396 1E90                            l2364 1E4C                            l2372 1E1C  
                          l2380 1DE0                            l2540 14C6                            l2532 14AA  
                          l2524 148E                            l2516 1472                            l2508 144C  
                          l2620 1D90                            l2612 1D86                            l2604 1D7A  
                          l2452 18AE                            l2444 187E                            l2436 1854  
                          l2428 1818                            l2460 19BA                            l1468 1C44  
                          l1486 1D48                            l1494 1D6E                            l1398 1EA2  
                          l2366 1E4E                            l2358 1E36                            l2374 1E20  
                          l2390 1E04                            l2382 1DE2                            l2550 14E8  
                          l2542 14C8                            l2534 14AE                            l2526 1492  
                          l2518 1476                            l2622 1D94                            l2614 1D88  
                          l2606 1D7E                            l2454 18BA                            l2446 1884  
                          l2438 185A                            l2470 19F6                            l2462 19C2  
                          l2630 1676                            l1488 1D58                            l2376 1E26  
                          l2368 1E0C                            l2384 1DF0                            l2392 1C74  
                          l2552 14EE                            l2544 14CC                            l2536 14B2  
                          l2528 1496                            l2624 1D9A                            l2616 1D8C  
                          l2608 1D82                            l2448 1892                            l2480 1A42  
                          l2472 19FE                            l2464 19CA                            l2456 19A8  
                          l2560 1DB2                            l2640 16C6                            l2632 16A6  
                          l2378 1E30                            l2386 1DF4                            l2394 1C78  
                          l2554 14F4                            l2546 14DC                            l2538 14C2  
                          l2626 1DA6                            l2618 1D8E                            l2490 1A7E  
                          l2482 1A48                            l2474 1A0A                            l2466 19D8  
                          l2458 19AC                            l2570 1DD6                            l2562 1DB8  
                          l2650 1708                            l2642 16CE                            l2634 16AA  
                          l2388 1DFA                            l2396 1C9E                            l2556 1500  
                          l2548 14E2                            l2492 1384                            l2628 1DAC  
                          l2476 1A20                            l2484 1A56                            l2468 19E4  
                          l2580 1B92                            l2572 1B58                            l2564 1DC4  
                          l2660 1740                            l2652 170C                            l2644 16E0  
                          l2636 16B2                            l2398 1CA6                            l2558 1506  
                          l2494 1398                            l2486 1A66                            l2478 1A36  
                          l2590 1BCE                            l2582 1B98                            l2574 1B5E  
                          l2566 1DCA                            l2670 1774                            l2662 1748  
                          l2654 1714                            l2646 16F4                            l2638 16C2  
                          l2496 13AC                            l2488 1A72                            l2592 1BE6  
                          l2584 1BAE                            l2576 1B72                            l2568 1DD0  
                          l2680 17A6                            l2672 177C                            l2664 1754  
                          l2656 1724                            l2648 1704                            l2498 13B0  
                          l2594 1BEC                            l2586 1BB2                            l2578 1B8C  
                          l2682 17B6                            l2674 1790                            l2658 1734  
                          l2666 1760                            l2596 1BF2                            l2588 1BB6  
                          l2684 17BA                            l2676 179E                            l2668 1770  
                          l2598 1BFA                            l2678 17A0                            _ADIE 007CEE  
                          _ADIF 007CF6                            _ADFM 007E07                            _ADIP 007CFE  
                          STR_1 1069                            u1500 1CC8                            _LATA 000F89  
                          u1510 1CD8                            _LATB 000F8A                            u1511 1CD4  
                          _LATC 000F8B                            u1520 17E2                            u1600 19F6  
                          _LATD 000F8C                            u1521 17DE                            u1601 19F2  
                          _LATE 000F8D                            u1530 1800                            u1610 1A18  
                          _LATF 000F8E                            u1507 1CBE                            u1531 17FC  
                          u1611 1A14                            _LATG 000F8F                            u1540 182A  
                          u1620 1A36                            u1700 1704                            _LATH 000F90  
                          u1541 1826                            u1621 1A32                            u1701 1700  
                          u1550 184C                            u1630 1A66                            u1710 1724  
                          _LATJ 000F91                            u1551 1848                            u1631 1A62  
                          u1711 1720                            u1640 13A8                            u1560 1870  
                          u1720 1734                            u1641 13A4                            u1561 186C  
                          u1721 1730                            u1490 1C9A                            u1650 13D6  
                          u1570 18A2                            u1730 1770                            u1651 13D2  
                          u1571 189E                            u1731 176C                            u1580 19BA  
                          u1740 178C                            u1660 168C                            u1581 19B6  
                          u1741 1788                            u1661 1688                            u1590 19D8  
                          u1750 17B6                            u1670 16A2                            u1807 149C  
                          u1591 19D4                            u1751 17B2                            u1671 169E  
                          u1680 16C2                            u1497 1C90                            u1817 14B8  
                          u1681 16BE                            u1690 16E0                            u1827 14D2  
                          u1691 16DC                            u1837 1E42                            u1847 1E56  
                          u1767 1EF6                            u1777 1454                            u1787 1464  
                          u1797 1480                            _RBIE 007F93                            _RBIF 007F90  
                          _TMR0 000FD6                            _TMR1 000FCE                            _main 1676  
                          fsr0h 000FEA                            fsr1h 000FE2                            indf0 000FEF  
                          fsr2h 000FDA                            fsr0l 000FE9                            indf2 000FDF  
                          fsr1l 000FE1                            fsr2l 000FD9                            btemp 0047  
             ??_refreshTimeLeft 001D        refreshPerson@secondDigit 007D                            prodh 000FF4  
                          prodl 000FF3                            start 000E                   __CFG_IESO$OFF 000000  
                 __CFG_MCLRE$ON 000000                    ___param_bank 000000                           ?_main 0001  
               __end_of___awdiv 18BC                 __end_of___awmod 1A80                           _T0CON 000FD5  
               ___awdiv@divisor 001B                           _LATB2 007C52                           _LATB5 007C55  
                         _LATD4 007C64                           _LATD5 007C65                           _LATD6 007C66  
                         _LATD7 007C67                           _LATH0 007C80                           _LATH1 007C81  
                         _LATH2 007C82                           _LATH3 007C83                  __CFG_DEBUG$OFF 000000  
                         i2l200 1614                           i2l201 1670                           i2l202 163E  
                         i2l203 166C                           i2l220 1ECA                           i2l204 1668  
                         i2l221 1ED0                           i2l205 1674                           i2l240 124E  
                         i2l241 119C                           i2l233 10EA                           i2l250 12AE  
                         i2l242 117A                           i2l234 10E6                           i2l251 12AA  
                         i2l243 1198                           i2l235 10E2                           i2l252 12F8  
                         i2l236 1252                           i2l244 124A                           i2l253 12F4  
                         i2l245 1246                           i2l237 1154                           i2l254 1368  
                         i2l246 1242                           i2l238 1132                           i2l255 1364  
                         i2l247 120C                           i2l239 1150                           i2l600 1ABC  
                         i2l256 1368                           i2l248 123E                           i2l193 1F14  
                         i2l601 1B2E                           i2l249 12FC                           i2l602 1AE2  
                         i2l603 1AD6                           i2l604 1AF4                           i2l196 155C  
                         i2l605 1AF8                           i2l197 15C0                           i2l606 1B1A  
                         i2l198 15EA                           i2l607 1B2A                           i2l199 1674  
                         i2l608 1B4A                           i2l609 1B56                           i2l590 191E  
                         i2l591 193C                           i2l592 1940                           i2l593 196A  
                         i2l594 197A                           i2l586 18DE                           i2l595 199A  
                         i2l587 18FC                           i2l596 19A6                           i2l588 197E  
                         i2l589 192A                           i2l599 1AA2                 ___awdiv@counter 0078  
                         _PORTA 000F80                           _PORTB 000F81                           _PORTC 000F82  
                         _PORTD 000F83                           _PORTE 000F84                           _PORTF 000F85  
                         _PORTG 000F86                           _PORTH 000F87                           _PORTJ 000F88  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                         _TRISD 000F95                           _TRISE 000F96                           _TRISF 000F97  
                         _TRISG 000F98                           _TRISH 000F99                           _TRISJ 000F9A  
                 __CFG_PWRT$OFF 000000                 __end_of_highISR 1384                  __CFG_FCMEN$OFF 000000  
         __end_of_refreshPerson 1C02           __end_of_decrementTime 1D76                           _init1 1384  
                         _init2 1D76                           _names 1001                           _timeH 0046  
                         _timeL 0045                           _votes 001F                  __CFG_BOREN$OFF 000000  
                         tablat 000FF5      refreshSevenSegment@idFirst 000B                           ttemp5 0048  
                         ttemp6 004B                           ttemp7 004F                           status 000FD8  
       __size_of_WriteDataToLCD 002C                           wtemp8 0048              __size_ofi2___awdiv 00EC  
            __size_ofi2___awmod 00D8                 _ToggleEpinOfLCD 1E36                 __initialization 1CDE  
                  __end_of_main 17CE                  __CFG_OSC$HSPLL 000000            __end_of_enableTimers 1EAC  
                        ??_main 001F                ??_ClearLCDScreen 001B                   __activetblptr 000002  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          ?_init1 0001  
                        ?_init2 0001                          _ADRESH 000FC4                          _ADRESL 000FC3  
              ___awdiv@dividend 0019                          i2l2100 1590                          i2l2110 15F8  
                        i2l2102 15A6                          i2l2120 1650                          i2l2112 15FC  
                        i2l2104 15C0                          i2l2200 128C                          i2l1410 1F0C  
                        i2l2114 1622                          i2l2106 15CE                          i2l2210 12D2  
                        i2l2202 1290                          i2l2130 10B2                          i2l2122 1092  
                        i2l1412 1F0E                          i2l2116 1626                          i2l2108 15D2  
                        i2l2220 1318                          i2l2212 12DA                          i2l2204 12A2  
                        i2l2140 10F8                          i2l2132 10C4                          i2l2124 10A0  
                        i2l1414 1F10                          i2l1406 1F02                          i2l2118 164C  
                        i2l2222 132A                          i2l2214 12EC                          i2l2206 12AE  
                        i2l2150 1132                          i2l2142 1106                          i2l2134 10C8  
                        i2l2126 10AE                          i2l1416 1F12                          i2l1408 1F0A  
                        i2l2224 132C                          i2l2208 12BE                          i2l2216 12FC  
                        i2l2160 1172                          i2l2152 1140                          i2l2144 110C  
                        i2l2136 10DA                          i2l2128 10B0                          i2l2090 1530  
                        i2l2226 135A                          i2l2218 130A                          i2l2170 11AC  
                        i2l2162 117A                          i2l2154 1148                          i2l2146 111C  
                        i2l2138 10EA                          i2l2092 1534                          i2l2084 1514  
                        i2l2228 135E                          i2l2180 1204                          i2l2172 11BA  
                        i2l2164 1188                          i2l2148 112A                          i2l2156 1154  
                        i2l2094 1538                          i2l2086 1528                          i2l2190 126E  
                        i2l2182 120C                          i2l2174 11CC                          i2l2166 1190  
                        i2l2158 1164                          i2l1480 1ECA                          i2l2096 1548  
                        i2l2088 152C                          i2l2192 1272                          i2l2184 1236  
                        i2l2176 11CE                          i2l2168 119C                          i2l1482 1ED0  
                        i2l1474 1EAE                          i2l2098 155C                          i2l2194 1274  
                        i2l2178 11D2                          i2l2186 1252                          i2l1476 1EC0  
                        i2l1900 1970                          i2l2196 1278                          i2l2188 1260  
                        i2l1478 1EC6                          i2l1902 197E                          i2l1910 1A80  
                        i2l2198 127A                          i2l1904 198E                          i2l1920 1AB0  
                        i2l1912 1A84                          i2l1906 199A                          i2l1930 1AF8  
                        i2l1922 1ABC                          i2l1914 1A92                          i2l1908 19A6  
                        i2l1940 1B3E                          i2l1932 1B0E                          i2l1924 1ACE  
                        i2l1916 1A9A                          i2l1870 18CE                          i2l1942 1B4A  
                        i2l1934 1B1A                          i2l1926 1AD6                          i2l1918 1AA2  
                        i2l1880 18FC                          i2l1872 18D6                          i2l1944 1B56  
                        i2l1936 1B20                          i2l1928 1AE2                          i2l1890 1940  
                        i2l1882 1904                          i2l1874 18DE                          i2l1866 18BC  
                        i2l1938 1B2E                          i2l1892 1946                          i2l1884 1916  
                        i2l1876 18EC                          i2l1868 18C0                          i2l1894 195C  
                        i2l1886 191E                          i2l1878 18F4                          i2l1896 1964  
                        i2l1888 192A                          i2l1898 196A                          _INTCON 000FF2  
                        _TMR0IE 007F95                          _TMR0IF 007F92                          _TMR1IE 007CE8  
                        _TMR1IF 007CF0                          _TRISB2 007C9A                          _TRISB5 007C9D  
                        _TRISD4 007CAC                          _TRISD5 007CAD                          _TRISD6 007CAE  
                        _TRISD7 007CAF                          _TRISH4 007CCC               _refreshPersonFlag 0036  
                __CFG_XINST$OFF 000000                       ??___awdiv 001D                       ??___awmod 001D  
                        _rb_var 0031                          clear_0 1D24                ___awdiv@quotient 007A  
               ___awmod@divisor 001B                          _wait3s 1C02               ?_numToStringPrint 0001  
             WriteStringToLCD@s 001B                       ??_highISR 000E                 ___awmod@counter 001D  
                i2___awdiv@sign 0006              ??_numToStringPrint 001B                    __pdataCOMRAM 003A  
   __end_of_refreshSevenSegment 1676               __end_ofi2___awdiv 19A8               ?_WriteStringToLCD 001B  
             __end_ofi2___awmod 1B58                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8         __size_of_incrementDigit 0026  
            ??_WriteStringToLCD 001D                  i2___awmod@sign 0006     refreshSevenSegment@idSecond 000C  
       __end_of_ToggleEpinOfLCD 1E60                      __accesstop 0060         __end_of__initialization 1D2A  
                 ___rparam_used 000001                  __pcstackCOMRAM 0001                    __pidataBANK0 1ED2  
                 __end_of_init1 1514                   __end_of_init2 1DB2                   __end_of_names 1039  
            __size_of_enableADC 0014        WriteCommandToLCD@Command 001A                 _refreshTimeLeft 1DB2  
                 _currentPerson 002D                         ??_init1 001D                         ??_init2 001D  
                _WriteDataToLCD 1DDE           __size_of_enableTimers 0026           WriteDataToLCD@LCDChar 001A  
                    _digitStage 002E                         ?_wait3s 0001            numToStringPrint@temp 001B  
                    _ledPointer 002B                         i2u38_40 1EC0                         i2u38_41 1EBC  
                       i2u93_40 18CE                         i2u93_41 18CA                         i2u94_40 18EC  
                       i2u94_41 18E8                         i2u95_40 1916                         i2u95_41 1912  
                       i2u96_40 1938                         i2u96_41 1934                         i2u97_40 195C  
                       i2u97_41 1958                         i2u98_40 198E                         i2u98_41 198A  
                       i2u99_40 1A92                         i2u99_41 1A8E          __end_of_WriteDataToLCD 1E0A  
              ?_ToggleEpinOfLCD 0001                    _enableTimers 1E86               __end_of_enableADC 1F16  
          _numToStringPrintFlag 0037                         __Hparam 0000                         __Lparam 0000  
                       ___awdiv 17CE                         ___awmod 19A8                    __psmallconst 1000  
                       __pcinit 1CDE         __end_of_refreshTimeLeft 1DDE                         __ramtop 1000  
                       _highISR 0008                 __size_of_wait3s 0072                         __ptext0 1676  
                       __ptext1 1C02                         __ptext2 1DB2                         __ptext3 1B58  
                       __ptext4 19A8                         __ptext5 17CE                         __ptext6 1D76  
                       __ptext7 1E60                         __ptext8 1EEA                         __ptext9 1384  
                     _T0CONbits 000FD5               __end_of_emptyline 1049                       _T1CONbits 000FCD  
                _maxVotedPerson 0029                ___awmod@dividend 0019                  _incrementDigit 1EAC  
                __pintcode_body 1078            end_of_initialization 1D2A                 ?_WriteDataToLCD 0001  
                    _onlarDigit 0030                   __Lmediumconst 0000                         int_func 1078  
                       wait3s@i 0019                         wait3s@j 001A                         wait3s@k 001B  
                    _timer0Flag 0035                      _timer1Flag 0038         refreshPerson@firstDigit 007C  
                       postdec1 000FE5                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE          __size_of_refreshPerson 00AA          __size_of_decrementTime 003E  
        __end_of_incrementDigit 1ED2                       i2___awdiv 18BC                       i2___awmod 1A80  
     __size_of_numToStringPrint 0026               _sevenSegmentTable 003A                      _totalVotes 002A  
     __size_of_WriteStringToLCD 006A              i2___awdiv@dividend 0001                   __pidataCOMRAM 1F16  
              ?_refreshTimeLeft 0001                  __end_of_wait3s 1C74                 ?_incrementDigit 0001  
           start_initialization 1CDE              i2___awdiv@quotient 0007                      ?i2___awdiv 0001  
                    ?i2___awmod 0001                   _refreshPerson 1B58                   _decrementTime 1D38  
       __size_of_ClearLCDScreen 0018    __size_of_refreshSevenSegment 0162                 _enterVotersText 1049  
           __end_of_electroVote 1069                     __pdataBANK0 0060                __CFG_LPT1OSC$OFF 000000  
                      ??_wait3s 0019                     __pbssCOMRAM 001F                   __pcstackBANK0 0078  
                ?_refreshPerson 0001                  ?_decrementTime 0001  refreshSevenSegment@currentVote 000D  
                     _enableADC 1F02                       __pintcode 0008                        ?___awdiv 0019  
                      ?___awmod 0019                     _blinkStatus 0032                        ?_highISR 0001  
                   _birlerDigit 002F                     __smallconst 1000                ??_WriteDataToLCD 001A  
             refreshPerson@temp 007F         __end_of_enterVotersText 1059                       _emptyline 1039  
                   ??i2___awdiv 0005                     ??i2___awmod 0005                  __size_of_init1 0190  
                __size_of_init2 003C                _numToStringPrint 1E60                     _electroVote 1059  
refreshSevenSegment@secondDigit 000A                _WriteStringToLCD 1C74                        _IPR1bits 000F9F  
                      _PIE1bits 000F9D                       _tmr0count 0027                       _tmr1count 0033  
                      i2u100_40 1AB0                        i2u100_41 1AAC                        i2u101_40 1ACE  
                      i2u101_41 1ACA                        i2u102_40 1AF0                        i2u110_40 1622  
                      i2u102_41 1AEC                        i2u110_41 161E                        i2u103_40 1B0E  
                      i2u111_40 164C                        i2u103_41 1B0A                        i2u111_41 1648  
                      i2u104_40 1B3E                        i2u120_40 1140                        i2u112_40 10A0  
                      i2u104_41 1B3A                        i2u120_41 113C                        i2u112_41 109C  
                      i2u121_40 1164                        i2u113_40 10AE                        i2u121_41 1160  
                      i2u113_41 10AA                        i2u130_40 128C                        i2u122_40 1172  
                      i2u114_40 10C4                        i2u130_41 1288                        i2u122_41 116E  
                      i2u114_41 10C0                        i2u107_40 1548                        i2u131_40 12A2  
                      i2u123_40 1188                        i2u115_40 10DA                        i2u107_41 1544  
                      i2u131_41 129E                        i2u123_41 1184                        i2u115_41 10D6  
                      i2u108_40 15CE                        i2u132_40 12BE                        i2u124_40 11AC  
                      i2u116_40 10F8                        i2u108_41 15CA                        i2u132_41 12BA  
                      i2u124_41 11A8                        i2u116_41 10F4                        i2u109_40 15F8  
                      i2u133_40 12D2                        i2u125_40 11BA                        i2u117_40 1106  
                      i2u109_41 15F4                        i2u133_41 12CE                        i2u125_41 11B6  
                      i2u117_41 1102                        i2u134_40 12EC                        i2u126_40 1204  
                      i2u118_40 111C                        i2u134_41 12E8                        i2u126_41 1200  
                      i2u118_41 1118                        i2u135_40 130A                        i2u127_40 1236  
                      i2u119_40 112A                        i2u135_41 1306                        i2u127_41 1232  
                      i2u119_41 1126                        i2u136_40 1318                        i2u128_40 1260  
                      i2u136_41 1314                        i2u128_41 125C                        i2u137_40 132A  
                      i2u129_40 126E                        i2u137_41 1326                        i2u129_41 126A  
                      i2u138_45 134A                        _PIR1bits 000F9E        __size_of_ToggleEpinOfLCD 002A  
                      _RCONbits 000FD0                      ?_enableADC 0001                 ??_refreshPerson 001F  
             i2___awdiv@divisor 0003                 ??_decrementTime 0019               i2___awdiv@counter 0005  
                   _INTCON2bits 000FF1                       copy_data0 1CF2                       copy_data1 1D12  
                _ClearLCDScreen 1EEA              i2___awmod@dividend 0001               _WriteCommandToLCD 1E0A  
            ?_WriteCommandToLCD 0001                        __Hrparam 0000                        __Lrparam 0000  
 refreshSevenSegment@firstDigit 0009             ??_WriteCommandToLCD 001A                ??_incrementDigit 0001  
              __size_of___awdiv 00EE                __size_of___awmod 00D8             _refreshSevenSegment 1514  
                      _adcCount 0034                __size_of_highISR 137C            incrementDigit@number 0001  
        __end_of_ClearLCDScreen 1F02                        __ptext10 1C74                        __ptext11 1DDE  
                      __ptext20 1EAC                        __ptext12 1E0A                        __ptext21 1F02  
                      __ptext13 1E36                        __ptext14 1E86                        __ptext15 1D38  
                      __ptext17 1514                        __ptext18 1A80                        __ptext19 18BC  
     __end_of_WriteCommandToLCD 1E36            ?_refreshSevenSegment 0001             refreshTimeLeft@temp 001D  
                 __size_of_main 0158                     ??_enableADC 0001                        int$flags 0047  
                      _voteEnds 002C                    highISR@value 0017               ??_ToggleEpinOfLCD 0019  
             i2___awmod@divisor 0003               i2___awmod@counter 0005                      _INTCONbits 000FF2  
               ?_ClearLCDScreen 0001        __size_of_refreshTimeLeft 002C           ??_refreshSevenSegment 0009  
                      intlevel2 0000                   ?_enableTimers 0001        __end_of_numToStringPrint 1E86  
      __end_of_WriteStringToLCD 1CDE      __size_of_WriteCommandToLCD 002C                  ??_enableTimers 0019  
      refreshPerson@currentVote 007E  
